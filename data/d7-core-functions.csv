"actions_actions_map","Creates an associative array keyed by hashes of function names or IDs.","actions_actions_map($actions)"
"actions_delete","Deletes a single action from the database.","actions_delete($aid)"
"actions_do","Performs a given list of actions by executing their callback functions.","actions_do($action_ids, $object = NULL, $context = NULL, $a1 = NULL, $a2 = NULL)"
"actions_function_lookup","Returns an action array key (function or ID), given its hash.","actions_function_lookup($hash)"
"actions_get_all_actions","Retrieves all action instances from the database.","actions_get_all_actions()"
"actions_list","Discovers all available actions by invoking hook_action_info().","actions_list($reset = FALSE)"
"actions_load","Retrieves a single action from the database.","actions_load($aid)"
"actions_loop_test_action_info","Implements hook_action_info().","actions_loop_test_action_info()"
"actions_loop_test_init","Implements hook_init().","actions_loop_test_init()"
"actions_loop_test_install","Implements hook_install().","actions_loop_test_install()"
"actions_loop_test_log","Write a message to the log.","actions_loop_test_log()"
"actions_loop_test_trigger_info","Implements hook_trigger_info().","actions_loop_test_trigger_info()"
"actions_loop_test_watchdog","Implements hook_watchdog().","actions_loop_test_watchdog(array $log_entry)"
"actions_save","Saves an action and its user-supplied parameter values to the database.","actions_save($function, $type, $params, $label, $aid = NULL)"
"actions_synchronize","Synchronizes actions that are provided by modules in hook_action_info().","actions_synchronize($delete_orphans = FALSE)"
"aggregator_admin_form","Form constructor for the aggregator system settings.","aggregator_admin_form($form, $form_state)"
"aggregator_admin_form_submit","Form submission handler for aggregator_admin_form().","aggregator_admin_form_submit($form, &$form_state)"
"aggregator_admin_overview","Page callback: Displays the Aggregator module administration page.","aggregator_admin_overview()"
"aggregator_admin_refresh_feed","Page callback: Refreshes a feed, then redirects to the overview page.","aggregator_admin_refresh_feed($feed)"
"aggregator_admin_remove_feed","Deletes a feed.","aggregator_admin_remove_feed($form, $form_state, $feed)"
"aggregator_admin_remove_feed_submit","Form submission handler for aggregator_admin_remove_feed().","aggregator_admin_remove_feed_submit($form, &$form_state)"
"aggregator_aggregator_fetch","Implements hook_aggregator_fetch().","aggregator_aggregator_fetch($feed)"
"aggregator_aggregator_fetch_info","Implements hook_aggregator_fetch_info().","aggregator_aggregator_fetch_info()"
"aggregator_aggregator_parse","Implements hook_aggregator_parse().","aggregator_aggregator_parse($feed)"
"aggregator_aggregator_parse_info","Implements hook_aggregator_parse_info().","aggregator_aggregator_parse_info()"
"aggregator_aggregator_process","Implements hook_aggregator_process().","aggregator_aggregator_process($feed)"
"aggregator_aggregator_process_info","Implements hook_aggregator_process_info().","aggregator_aggregator_process_info()"
"aggregator_aggregator_remove","Implements hook_aggregator_remove().","aggregator_aggregator_remove($feed)"
"aggregator_block_configure","Implements hook_block_configure().","aggregator_block_configure($delta = '')"
"aggregator_block_info","Implements hook_block_info().","aggregator_block_info()"
"aggregator_block_save","Implements hook_block_save().","aggregator_block_save($delta = '', $edit = array())"
"aggregator_block_view","Implements hook_block_view().","aggregator_block_view($delta = '')"
"aggregator_categorize_items","Form constructor to build the page list form.","aggregator_categorize_items($items, $feed_source = '')"
"aggregator_categorize_items_submit","Form submission handler for aggregator_categorize_items().","aggregator_categorize_items_submit($form, &$form_state)"
"aggregator_category_load","Loads an aggregator category.","aggregator_category_load($cid)"
"aggregator_cron","Implements hook_cron().","aggregator_cron()"
"aggregator_cron_queue_info","Implements hook_cron_queue_info().","aggregator_cron_queue_info()"
"aggregator_element_data","Performs an action when data is encountered.","aggregator_element_data($parser, $data)"
"aggregator_element_end","Performs an action when a closing tag is encountered.","aggregator_element_end($parser, $name)"
"aggregator_element_start","Performs an action when an opening tag is encountered.","aggregator_element_start($parser, $name, $attributes)"
"aggregator_expire","Expires items from a feed depending on expiration settings.","aggregator_expire($feed)"
"aggregator_feed_items_load","Loads and optionally filters feed items.","aggregator_feed_items_load($type, $data = NULL)"
"aggregator_feed_load","Loads an aggregator feed.","aggregator_feed_load($fid)"
"aggregator_filter_xss","Renders the HTML content safely, as allowed.","aggregator_filter_xss($value)"
"aggregator_form_aggregator_admin_form_alter","Implements hook_form_aggregator_admin_form_alter().","aggregator_form_aggregator_admin_form_alter(&$form, $form_state)"
"aggregator_form_category","Form constructor to add/edit/delete aggregator categories.","aggregator_form_category($form, &$form_state, $edit = array('title' => '', 'description' => '', 'cid' => NULL))"
"aggregator_form_category_submit","Form submission handler for aggregator_form_category().","aggregator_form_category_submit($form, &$form_state)"
"aggregator_form_category_validate","Form validation handler for aggregator_form_category().","aggregator_form_category_validate($form, &$form_state)"
"aggregator_form_feed","Form constructor for adding and editing feed sources.","aggregator_form_feed($form, &$form_state, stdClass $feed = NULL)"
"aggregator_form_feed_submit","Form submission handler for aggregator_form_feed().","aggregator_form_feed_submit($form, &$form_state)"
"aggregator_form_feed_validate","Form validation handler for aggregator_form_feed().","aggregator_form_feed_validate($form, &$form_state)"
"aggregator_form_opml","Form constructor for importing feeds from OPML.","aggregator_form_opml($form, &$form_state)"
"aggregator_form_opml_submit","Form submission handler for aggregator_form_opml().","aggregator_form_opml_submit($form, &$form_state)"
"aggregator_form_opml_validate","Form validation handler for aggregator_form_opml().","aggregator_form_opml_validate($form, &$form_state)"
"aggregator_help","Implements hook_help().","aggregator_help($path, $arg)"
"aggregator_menu","Implements hook_menu().","aggregator_menu()"
"aggregator_page_categories","Page callback: Displays all the categories used by the Aggregator module.","aggregator_page_categories()"
"aggregator_page_category","Page callback: Displays all the items aggregated in a particular category.","aggregator_page_category($category)"
"aggregator_page_category_form","Page callback: Displays a form containing items aggregated in a category.","aggregator_page_category_form($form, $form_state, $category)"
"aggregator_page_last","Page callback: Displays the most recent items gathered from any feed.","aggregator_page_last()"
"aggregator_page_opml","Page callback: Generates an OPML representation of all feeds.","aggregator_page_opml($cid = NULL)"
"aggregator_page_rss","Page callback: Generates an RSS 0.92 feed of aggregator items or categories.","aggregator_page_rss()"
"aggregator_page_source","Page callback: Displays all the items captured from the particular feed.","aggregator_page_source($feed)"
"aggregator_page_sources","Page callback: Displays all the feeds used by the aggregator.","aggregator_page_sources()"
"aggregator_page_source_form","Page callback: Displays a form with all items captured from a feed.","aggregator_page_source_form($form, $form_state, $feed)"
"aggregator_parse_feed","Parses a feed and stores its items.","aggregator_parse_feed(&$data, $feed)"
"aggregator_parse_w3cdtf","Parses the W3C date/time format, a subset of ISO 8601.","aggregator_parse_w3cdtf($date_str)"
"aggregator_permission","Implements hook_permission().","aggregator_permission()"
"aggregator_refresh","Checks a news feed for new items.","aggregator_refresh($feed)"
"aggregator_remove","Removes all items from a feed.","aggregator_remove($feed)"
"aggregator_sanitize_configuration","Checks and sanitizes the aggregator configuration.","aggregator_sanitize_configuration()"
"aggregator_save_category","Adds/edits/deletes aggregator categories.","aggregator_save_category($edit)"
"aggregator_save_feed","Add/edit/delete an aggregator feed.","aggregator_save_feed($edit)"
"aggregator_save_item","Adds/edits/deletes an aggregator item.","aggregator_save_item($edit)"
"aggregator_schema","Implements hook_schema().","aggregator_schema()"
"aggregator_test_feed","Page callback. Generates a test feed and simulates last-modified and etags.","aggregator_test_feed($use_last_modified = FALSE, $use_etag = FALSE)"
"aggregator_test_menu","Implements hook_menu().","aggregator_test_menu()"
"aggregator_theme","Implements hook_theme().","aggregator_theme()"
"aggregator_uninstall","Implements hook_uninstall().","aggregator_uninstall()"
"aggregator_update_7000","Add hash column to aggregator_feed table.","aggregator_update_7000()"
"aggregator_update_7001","Add aggregator teaser length to settings from old global default teaser length","aggregator_update_7001()"
"aggregator_update_7002","Add queued timestamp.","aggregator_update_7002()"
"aggregator_update_7003","Increase the length of {aggregator_feed}.url.","aggregator_update_7003()"
"aggregator_update_7004","Add index on timestamp.","aggregator_update_7004()"
"aggregator_view","Displays the aggregator administration page.","aggregator_view()"
"ajax_base_page_theme","Theme callback for Ajax requests.","ajax_base_page_theme()"
"ajax_command_add_css","Creates a Drupal Ajax &#039;add_css&#039; command.","ajax_command_add_css($styles)"
"ajax_command_after","Creates a Drupal Ajax &#039;insert/after&#039; command.","ajax_command_after($selector, $html, $settings = NULL)"
"ajax_command_alert","Creates a Drupal Ajax &#039;alert&#039; command.","ajax_command_alert($text)"
"ajax_command_append","Creates a Drupal Ajax &#039;insert/append&#039; command.","ajax_command_append($selector, $html, $settings = NULL)"
"ajax_command_before","Creates a Drupal Ajax &#039;insert/before&#039; command.","ajax_command_before($selector, $html, $settings = NULL)"
"ajax_command_changed","Creates a Drupal Ajax &#039;changed&#039; command.","ajax_command_changed($selector, $asterisk = '')"
"ajax_command_css","Creates a Drupal Ajax &#039;css&#039; command.","ajax_command_css($selector, $argument)"
"ajax_command_data","Creates a Drupal Ajax &#039;data&#039; command.","ajax_command_data($selector, $name, $value)"
"ajax_command_html","Creates a Drupal Ajax &#039;insert/html&#039; command.","ajax_command_html($selector, $html, $settings = NULL)"
"ajax_command_insert","Creates a Drupal Ajax &#039;insert&#039; command using the method in #ajax[&#039;method&#039;].","ajax_command_insert($selector, $html, $settings = NULL)"
"ajax_command_invoke","Creates a Drupal Ajax &#039;invoke&#039; command.","ajax_command_invoke($selector, $method, array $arguments = array())"
"ajax_command_prepend","Creates a Drupal Ajax &#039;insert/prepend&#039; command.","ajax_command_prepend($selector, $html, $settings = NULL)"
"ajax_command_remove","Creates a Drupal Ajax &#039;remove&#039; command.","ajax_command_remove($selector)"
"ajax_command_replace","Creates a Drupal Ajax &#039;insert/replaceWith&#039; command.","ajax_command_replace($selector, $html, $settings = NULL)"
"ajax_command_restripe","Creates a Drupal Ajax &#039;restripe&#039; command.","ajax_command_restripe($selector)"
"ajax_command_settings","Creates a Drupal Ajax &#039;settings&#039; command.","ajax_command_settings($argument, $merge = FALSE)"
"ajax_command_update_build_id","Creates a Drupal Ajax &#039;update_build_id&#039; command.","ajax_command_update_build_id($form)"
"ajax_deliver","Packages and sends the result of a page callback as an Ajax response.","ajax_deliver($page_callback_result)"
"ajax_footer","Performs end-of-Ajax-request tasks.","ajax_footer()"
"ajax_forms_test_advanced_commands_add_css_callback","Ajax callback for &#039;add_css&#039;.","ajax_forms_test_advanced_commands_add_css_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_after_callback","Ajax callback for &#039;after&#039;.","ajax_forms_test_advanced_commands_after_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_alert_callback","Ajax callback for &#039;alert&#039;.","ajax_forms_test_advanced_commands_alert_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_append_callback","Ajax callback for &#039;append&#039;.","ajax_forms_test_advanced_commands_append_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_before_callback","Ajax callback for &#039;before&#039;.","ajax_forms_test_advanced_commands_before_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_changed_asterisk_callback","Ajax callback for &#039;changed&#039; with asterisk marking inner div.","ajax_forms_test_advanced_commands_changed_asterisk_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_changed_callback","Ajax callback for &#039;changed&#039;.","ajax_forms_test_advanced_commands_changed_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_css_callback","Ajax callback for &#039;css&#039;.","ajax_forms_test_advanced_commands_css_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_data_callback","Ajax callback for &#039;data&#039;.","ajax_forms_test_advanced_commands_data_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_html_callback","Ajax callback for &#039;html&#039;.","ajax_forms_test_advanced_commands_html_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_insert_callback","Ajax callback for &#039;insert&#039;.","ajax_forms_test_advanced_commands_insert_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_invoke_callback","Ajax callback for &#039;invoke&#039;.","ajax_forms_test_advanced_commands_invoke_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_prepend_callback","Ajax callback for &#039;prepend&#039;.","ajax_forms_test_advanced_commands_prepend_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_remove_callback","Ajax callback for &#039;remove&#039;.","ajax_forms_test_advanced_commands_remove_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_restripe_callback","Ajax callback for &#039;restripe&#039;.","ajax_forms_test_advanced_commands_restripe_callback($form, $form_state)"
"ajax_forms_test_advanced_commands_settings_callback","Ajax callback for &#039;settings&#039;.","ajax_forms_test_advanced_commands_settings_callback($form, $form_state)"
"ajax_forms_test_ajax_commands_form","Form to display the Ajax Commands.","ajax_forms_test_ajax_commands_form($form, &$form_state)"
"ajax_forms_test_lazy_load_form","Form builder: Builds a form that triggers a simple AJAX callback.","ajax_forms_test_lazy_load_form($form, &$form_state)"
"ajax_forms_test_lazy_load_form_ajax","AJAX callback for the ajax_forms_test_lazy_load_form() form.","ajax_forms_test_lazy_load_form_ajax($form, &$form_state)"
"ajax_forms_test_lazy_load_form_submit","Form submit handler: Adds JavaScript and CSS that wasn&#039;t on the original form.","ajax_forms_test_lazy_load_form_submit($form, &$form_state)"
"ajax_forms_test_menu","Implements hook_menu().","ajax_forms_test_menu()"
"ajax_forms_test_simple_form","A basic form used to test form_state[&#039;values&#039;] during callback.","ajax_forms_test_simple_form($form, &$form_state)"
"ajax_forms_test_simple_form_checkbox_callback","Ajax callback triggered by checkbox.","ajax_forms_test_simple_form_checkbox_callback($form, $form_state)"
"ajax_forms_test_simple_form_select_callback","Ajax callback triggered by select.","ajax_forms_test_simple_form_select_callback($form, $form_state)"
"ajax_forms_test_validation_form","This form and its related submit and callback functions demonstrate
not validating another form element when a single Ajax element is triggered.","ajax_forms_test_validation_form($form, &$form_state)"
"ajax_forms_test_validation_form_callback","Ajax callback for the &#039;drivertext&#039; element of the validation form.","ajax_forms_test_validation_form_callback($form, $form_state)"
"ajax_forms_test_validation_form_submit","Submit handler for the validation form.","ajax_forms_test_validation_form_submit($form, $form_state)"
"ajax_form_callback","Menu callback; handles Ajax requests for the #ajax Form API property.","ajax_form_callback()"
"ajax_get_form","Gets a form submitted via #ajax during an Ajax callback.","ajax_get_form()"
"ajax_prepare_response","Converts the return value of a page callback into an Ajax commands array.","ajax_prepare_response($page_callback_result)"
"ajax_pre_render_element","Adds Ajax information about an element to communicate with JavaScript.","ajax_pre_render_element($element)"
"ajax_process_form","Form element processing handler for the #ajax form property.","ajax_process_form($element, &$form_state)"
"ajax_render","Renders a commands array into JSON.","ajax_render($commands = array())"
"ajax_test_error","Menu callback; Returns Ajax element with #error property set.","ajax_test_error()"
"ajax_test_link","Menu callback; Renders a #type link with #ajax.","ajax_test_link()"
"ajax_test_menu","Implements hook_menu().","ajax_test_menu()"
"ajax_test_render","Menu callback; Return an element suitable for use by ajax_deliver().","ajax_test_render()"
"ajax_test_system_theme_info","Implements hook_system_theme_info().","ajax_test_system_theme_info()"
"archiver_get_archiver","Creates the appropriate archiver for the specified file.","archiver_get_archiver($file)"
"archiver_get_extensions","Returns a string of supported archive extensions.","archiver_get_extensions()"
"archiver_get_info","Retrieves a list of all available archivers.","archiver_get_info()"
"arg","Returns a component of the current Drupal path.","arg($index = NULL, $path = NULL)"
"authorize_access_allowed","Determines if the current user is allowed to run authorize.php.","authorize_access_allowed()"
"authorize_access_denied_page","Renders a 403 access denied page for authorize.php.","authorize_access_denied_page()"
"authorize_filetransfer_form","Form constructor for the file transfer authorization form.","authorize_filetransfer_form($form, &$form_state)"
"authorize_filetransfer_form_submit","Form submission handler for authorize_filetransfer_form().","authorize_filetransfer_form_submit($form, &$form_state)"
"authorize_filetransfer_form_validate","Form validation handler for authorize_filetransfer_form().","authorize_filetransfer_form_validate($form, &$form_state)"
"authorize_get_filetransfer","Gets a FileTransfer class for a specific transfer method and settings.","authorize_get_filetransfer($backend, $settings = array())"
"authorize_run_operation","Runs the operation specified in $_SESSION[&#039;authorize_operation&#039;].","authorize_run_operation($filetransfer)"
"bartik_drupal_alter_alter","Implements hook_TYPE_alter() on behalf of Bartik theme.","bartik_drupal_alter_alter(&$data, &$arg2 = NULL, &$arg3 = NULL)"
"bartik_field__taxonomy_term_reference","Implements theme_field__field_type().","bartik_field__taxonomy_term_reference($variables)"
"bartik_menu_tree","Implements theme_menu_tree().","bartik_menu_tree($variables)"
"bartik_preprocess_block","Override or insert variables into the block template.","bartik_preprocess_block(&$variables)"
"bartik_preprocess_html","Add body classes if certain regions have content.","bartik_preprocess_html(&$variables)"
"bartik_preprocess_maintenance_page","Implements hook_preprocess_maintenance_page().","bartik_preprocess_maintenance_page(&$variables)"
"bartik_preprocess_node","Override or insert variables into the node template.","bartik_preprocess_node(&$variables)"
"bartik_process_html","Override or insert variables into the page template for HTML output.","bartik_process_html(&$variables)"
"bartik_process_maintenance_page","Override or insert variables into the maintenance page template.","bartik_process_maintenance_page(&$variables)"
"bartik_process_page","Override or insert variables into the page template.","bartik_process_page(&$variables)"
"base_path","Returns the base URL path (i.e., directory) of the Drupal installation.","base_path()"
"batch_get","Retrieves the current batch.","&batch_get()"
"batch_load","Loads a batch from the database.","batch_load($id)"
"batch_process","Processes the batch.","batch_process($redirect = NULL, $url = 'batch', $redirect_callback = 'drupal_goto')"
"batch_set","Adds a new batch.","batch_set($batch_definition)"
"batch_test_chained_form","Form with chained submit callbacks.","batch_test_chained_form()"
"batch_test_chained_form_submit_1","Submit handler #1 for the chained form.","batch_test_chained_form_submit_1($form, &$form_state)"
"batch_test_chained_form_submit_2","Submit handler #2 for the chained form.","batch_test_chained_form_submit_2($form, &$form_state)"
"batch_test_chained_form_submit_3","Submit handler #3 for the chained form.","batch_test_chained_form_submit_3($form, &$form_state)"
"batch_test_chained_form_submit_4","Submit handler #4 for the chained form.","batch_test_chained_form_submit_4($form, &$form_state)"
"batch_test_large_percentage","Menu callback: fire a batch process without a form submission.","batch_test_large_percentage()"
"batch_test_menu","Implement hook_menu().","batch_test_menu()"
"batch_test_mock_form","A simple form with a textfield and submit button.","batch_test_mock_form($form, $form_state)"
"batch_test_mock_form_submit","Submit handler for the batch_test_mock form.","batch_test_mock_form_submit($form, &$form_state)"
"batch_test_multistep_form","Multistep form.","batch_test_multistep_form($form, &$form_state)"
"batch_test_multistep_form_submit","Submit handler for the multistep form.","batch_test_multistep_form_submit($form, &$form_state)"
"batch_test_nested_drupal_form_submit","Menu callback: programmatically submits a form within a batch.","batch_test_nested_drupal_form_submit($value = 1)"
"batch_test_no_form","Menu callback: fire a batch process without a form submission.","batch_test_no_form()"
"batch_test_programmatic","Menu callback: programmatically submits the &#039;Chained&#039; form.","batch_test_programmatic($value = 1)"
"batch_test_redirect_page","Menu callback: successful redirection.","batch_test_redirect_page()"
"batch_test_simple_form","Simple form.","batch_test_simple_form()"
"batch_test_simple_form_submit","Submit handler for the simple form.","batch_test_simple_form_submit($form, &$form_state)"
"batch_test_stack","Helper function: store or retrieve traced execution data.","batch_test_stack($data = NULL, $reset = FALSE)"
"batch_test_theme_batch","Menu callback: run a batch for testing theme used on the progress page.","batch_test_theme_batch()"
"blocked_ip_load","Retrieve a blocked IP address from the database.","blocked_ip_load($iid)"
"block_add_block_form","Form constructor for the add block form.","block_add_block_form($form, &$form_state)"
"block_add_block_form_submit","Form submission handler for block_add_block_form().","block_add_block_form_submit($form, &$form_state)"
"block_add_block_form_validate","Form validation handler for block_add_block_form().","block_add_block_form_validate($form, &$form_state)"
"block_admin_configure","Form constructor for the block configuration form.","block_admin_configure($form, &$form_state, $module, $delta)"
"block_admin_configure_submit","Form submission handler for block_admin_configure().","block_admin_configure_submit($form, &$form_state)"
"block_admin_configure_validate","Form validation handler for block_admin_configure().","block_admin_configure_validate($form, &$form_state)"
"block_admin_demo","Menu callback for admin/structure/block/demo.","block_admin_demo($theme = NULL)"
"block_admin_display","Menu callback for admin/structure/block.","block_admin_display($theme = NULL)"
"block_admin_display_form","Form constructor for the main block administration form.","block_admin_display_form($form, &$form_state, $blocks, $theme, $block_regions = NULL)"
"block_admin_display_form_submit","Form submission handler for block_admin_display_form().","block_admin_display_form_submit($form, &$form_state)"
"block_admin_display_prepare_blocks","Prepares a list of blocks for display on the blocks administration page.","block_admin_display_prepare_blocks($theme)"
"block_admin_paths","Implements hook_admin_paths().","block_admin_paths()"
"block_block_configure","Implements hook_block_configure().","block_block_configure($delta = 0)"
"block_block_info","Implements hook_block_info().","block_block_info()"
"block_block_list_alter","Implements hook_block_list_alter().","block_block_list_alter(&$blocks)"
"block_block_save","Implements hook_block_save().","block_block_save($delta = 0, $edit = array())"
"block_block_view","Implements hook_block_view().","block_block_view($delta = '')"
"block_custom_block_delete","Form constructor for the custom block deletion form.","block_custom_block_delete($form, &$form_state, $module, $delta)"
"block_custom_block_delete_submit","Form submission handler for block_custom_block_delete().","block_custom_block_delete_submit($form, &$form_state)"
"block_custom_block_form","Form constructor for the custom block form.","block_custom_block_form($edit = array())"
"block_custom_block_get","Returns information from database about a user-created (custom) block.","block_custom_block_get($bid)"
"block_custom_block_save","Saves a user-created block in the database.","block_custom_block_save($edit, $delta)"
"block_drupal_alter_foo_alter","Implements hook_TYPE_alter() on behalf of block module.","block_drupal_alter_foo_alter(&$data, &$arg2 = NULL, &$arg3 = NULL)"
"block_flush_caches","Implements hook_flush_caches().","block_flush_caches()"
"block_form_form_test_alter_form_alter","Implements hook_form_FORM_ID_alter() on behalf of block.module.","block_form_form_test_alter_form_alter(&$form, &$form_state)"
"block_form_system_performance_settings_alter","Implements hook_form_FORM_ID_alter().","block_form_system_performance_settings_alter(&$form, &$form_state)"
"block_form_user_profile_form_alter","Implements hook_form_FORM_ID_alter() for user_profile_form().","block_form_user_profile_form_alter(&$form, &$form_state)"
"block_get_blocks_by_region","Gets a renderable array of a region containing all enabled blocks.","block_get_blocks_by_region($region)"
"block_help","Implements hook_help().","block_help($path, $arg)"
"block_install","Implements hook_install().","block_install()"
"block_list","Returns all blocks in the specified region for the current user.","block_list($region)"
"block_load","Loads a block object from the database.","block_load($module, $delta)"
"block_menu","Implements hook_menu().","block_menu()"
"block_menu_delete","Implements hook_menu_delete().","block_menu_delete($menu)"
"block_modules_uninstalled","Implements hook_modules_uninstalled().","block_modules_uninstalled($modules)"
"block_page_build","Implements hook_page_build().","block_page_build(&$page)"
"block_permission","Implements hook_permission().","block_permission()"
"block_schema","Implements hook_schema().","block_schema()"
"block_test_block_info","Implements hook_block_info().","block_test_block_info()"
"block_test_block_info_alter","Implements hook_block_info_alter().","block_test_block_info_alter(&$blocks)"
"block_test_block_view","Implements hook_block_view().","block_test_block_view($delta = 0)"
"block_test_block_view_block_test_test_hyphen_alter","Implements hook_block_view_MODULE_DELTA_alter().","block_test_block_view_block_test_test_hyphen_alter(&$data, $block)"
"block_test_block_view_block_test_test_underscore_alter","Implements hook_block_view_MODULE_DELTA_alter().","block_test_block_view_block_test_test_underscore_alter(&$data, $block)"
"block_test_system_theme_info","Implements hook_system_theme_info().","block_test_system_theme_info()"
"block_theme","Implements hook_theme().","block_theme()"
"block_themes_enabled","Initializes blocks for enabled themes.","block_themes_enabled($theme_list)"
"block_theme_initialize","Assigns an initial, default set of blocks for a theme.","block_theme_initialize($theme)"
"block_update_7000","Set system.weight to a low value for block module.","block_update_7000()"
"block_update_7002","Rename {blocks} table to {block}, {blocks_roles} to {block_role} and
{boxes} to {block_custom}.","block_update_7002()"
"block_update_7003","Change the weight column to normal int.","block_update_7003()"
"block_update_7004","Add new blocks to new regions, migrate custom variables to blocks.","block_update_7004()"
"block_update_7005","Update the {block_custom}.format column.","block_update_7005()"
"block_update_7006","Recreates cache_block table.","block_update_7006()"
"block_update_7007","Change {block_custom}.format into varchar.","block_update_7007()"
"block_update_7008","Update database to match Drupal 7 schema.","block_update_7008()"
"block_update_7009","Increase {block}.title length to 255 characters.","block_update_7009()"
"block_update_dependencies","Implements hook_update_dependencies().","block_update_dependencies()"
"block_user_presave","Implements hook_user_presave().","block_user_presave(&$edit, $account, $category)"
"block_user_role_delete","Implements hook_user_role_delete().","block_user_role_delete($role)"
"blog_block_configure","Implements hook_block_configure().","blog_block_configure($delta = '')"
"blog_block_info","Implements hook_block_info().","blog_block_info()"
"blog_block_save","Implements hook_block_save().","blog_block_save($delta = '', $edit = array())"
"blog_block_view","Implements hook_block_view().","blog_block_view($delta = '')"
"blog_feed_last","Menu callback; displays an RSS feed containing recent blog entries of all users.","blog_feed_last()"
"blog_feed_user","Menu callback; displays an RSS feed containing recent blog entries of a given user.","blog_feed_user($account)"
"blog_form","Implements hook_form().","blog_form($node, $form_state)"
"blog_help","Implements hook_help().","blog_help($path, $arg)"
"blog_install","Implements hook_install().","blog_install()"
"blog_menu","Implements hook_menu().","blog_menu()"
"blog_menu_local_tasks_alter","Implements hook_menu_local_tasks_alter().","blog_menu_local_tasks_alter(&$data, $router_item, $root_path)"
"blog_node_info","Implements hook_node_info().","blog_node_info()"
"blog_node_view","Implements hook_node_view().","blog_node_view($node, $view_mode)"
"blog_page_last","Menu callback; displays a Drupal page containing recent blog entries of all users.","blog_page_last()"
"blog_page_user","Menu callback; displays a Drupal page containing recent blog entries of a given user.","blog_page_user($account)"
"blog_page_user_access","Access callback for user blog pages.","blog_page_user_access($account)"
"blog_rdf_mapping","Implements hook_rdf_mapping().","blog_rdf_mapping()"
"blog_uninstall","Implements hook_uninstall().","blog_uninstall()"
"blog_user_view","Implements hook_user_view().","blog_user_view($account)"
"blog_view","Implements hook_view().","blog_view($node, $view_mode)"
"book_admin_edit","Form constructor for administering a single book&#039;s hierarchy.","book_admin_edit($form, $form_state, $node)"
"book_admin_edit_submit","Form submission handler for book_admin_edit().","book_admin_edit_submit($form, &$form_state)"
"book_admin_edit_validate","Form validation handler for book_admin_edit().","book_admin_edit_validate($form, &$form_state)"
"book_admin_overview","Returns an administrative overview of all books.","book_admin_overview()"
"book_admin_paths","Implements hook_admin_paths().","book_admin_paths()"
"book_admin_settings","Form constructor for the book settings form.","book_admin_settings()"
"book_admin_settings_validate","Form validation handler for book_admin_settings().","book_admin_settings_validate($form, &$form_state)"
"book_block_configure","Implements hook_block_configure().","book_block_configure($delta = '')"
"book_block_info","Implements hook_block_info().","book_block_info()"
"book_block_save","Implements hook_block_save().","book_block_save($delta = '', $edit = array())"
"book_block_view","Implements hook_block_view().","book_block_view($delta = '')"
"book_children","Formats the menu links for the child pages of the current page.","book_children($book_link)"
"book_entity_info_alter","Implements hook_entity_info_alter().","book_entity_info_alter(&$info)"
"book_export","Menu callback; Generates representations of a book page and its children.","book_export($type, $nid)"
"book_export_html","Generates HTML for export when invoked by book_export().","book_export_html($nid)"
"book_export_traverse","Traverses the book tree to build printable or exportable output.","book_export_traverse($tree, $visit_func)"
"book_form_node_delete_confirm_alter","Implements hook_form_FORM_ID_alter() for node_delete_confirm().","book_form_node_delete_confirm_alter(&$form, $form_state)"
"book_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter() for node_form().","book_form_node_form_alter(&$form, &$form_state, $form_id)"
"book_form_update","Renders a new parent page select element when the book selection changes.","book_form_update($form, $form_state)"
"book_get_books","Returns an array of all books.","book_get_books()"
"book_get_flat_menu","Gets the book menu tree for a page and returns it as a linear array.","book_get_flat_menu($book_link)"
"book_help","Implements hook_help().","book_help($path, $arg)"
"book_install","Implements hook_install().","book_install()"
"book_link_load","Gets a book menu link by its menu link ID.","book_link_load($mlid)"
"book_menu","Implements hook_menu().","book_menu()"
"book_menu_name","Generates the corresponding menu name from a book ID.","book_menu_name($bid)"
"book_menu_subtree_data","Gets the data representing a subtree of the book hierarchy.","book_menu_subtree_data($link)"
"book_next","Fetches the menu link for the next page of the book.","book_next($book_link)"
"book_node_delete","Implements hook_node_delete().","book_node_delete($node)"
"book_node_export","Generates printer-friendly HTML for a node.","book_node_export($node, $children = '')"
"book_node_insert","Implements hook_node_insert().","book_node_insert($node)"
"book_node_load","Implements hook_node_load().","book_node_load($nodes, $types)"
"book_node_prepare","Implements hook_node_prepare().","book_node_prepare($node)"
"book_node_presave","Implements hook_node_presave().","book_node_presave($node)"
"book_node_type_update","Implements hook_node_type_update().","book_node_type_update($type)"
"book_node_update","Implements hook_node_update().","book_node_update($node)"
"book_node_view","Implements hook_node_view().","book_node_view($node, $view_mode)"
"book_node_view_link","Adds relevant book links to the node&#039;s links.","book_node_view_link($node, $view_mode)"
"book_outline","Menu callback: Shows the outline form for a single node.","book_outline($node)"
"book_outline_form","Form constructor for the book outline form.","book_outline_form($form, &$form_state, $node)"
"book_outline_form_submit","Form submission handler for book_outline_form().","book_outline_form_submit($form, &$form_state)"
"book_page_alter","Implements hook_page_alter().","book_page_alter(&$page)"
"book_permission","Implements hook_permission().","book_permission()"
"book_pick_book_nojs_submit","Form submission handler for node_form().","book_pick_book_nojs_submit($form, &$form_state)"
"book_prev","Fetches the menu link for the previous page of the book.","book_prev($book_link)"
"book_remove_button_submit","Form submission handler for book_outline_form().","book_remove_button_submit($form, &$form_state)"
"book_remove_form","Form constructor to confirm removal of a node from a book.","book_remove_form($form, &$form_state, $node)"
"book_remove_form_submit","Form submission handler for book_remove_form().","book_remove_form_submit($form, &$form_state)"
"book_render","Menu callback: Prints a listing of all books.","book_render()"
"book_schema","Implements hook_schema().","book_schema()"
"book_theme","Implements hook_theme().","book_theme()"
"book_toc","Returns an array of book pages in table of contents order.","book_toc($bid, $depth_limit, $exclude = array())"
"book_type_is_allowed","Determine if a given node type is in the list of types allowed for books.","book_type_is_allowed($type)"
"book_uninstall","Implements hook_uninstall().","book_uninstall()"
"book_update_bid","Updates the book ID of a page and its children when it moves to a new book.","book_update_bid($book_link)"
"bootstrap_hooks","Defines the critical hooks that force modules to always be loaded.","bootstrap_hooks()"
"bootstrap_invoke_all","Invokes a bootstrap hook in all bootstrap modules that implement it.","bootstrap_invoke_all($hook)"
"cache_clear_all","Expires data from the cache.","cache_clear_all($cid = NULL, $bin = NULL, $wildcard = FALSE)"
"cache_get","Returns data from the persistent cache.","cache_get($cid, $bin = 'cache')"
"cache_get_multiple","Returns data from the persistent cache when given an array of cache IDs.","cache_get_multiple(array &$cids, $bin = 'cache')"
"cache_is_empty","Checks if a cache bin is empty.","cache_is_empty($bin)"
"cache_set","Stores data in the persistent cache.","cache_set($cid, $data, $bin = 'cache', $expire = CACHE_PERMANENT)"
"callback_batch_finished","Complete a batch process.","callback_batch_finished($success, $results, $operations)"
"callback_batch_operation","Perform a single batch operation.","callback_batch_operation($MULTIPLE_PARAMS, &$context)"
"callback_entity_info_label","Return the label of an entity.","callback_entity_info_label($entity, $entity_type)"
"callback_entity_info_language","Return the language code of the entity.","callback_entity_info_language($entity, $entity_type)"
"callback_entity_info_uri","Return the URI for an entity.","callback_entity_info_uri($entity)"
"callback_filter_prepare","Provide prepared text with special characters escaped.","callback_filter_prepare($text, $filter, $format, $langcode, $cache, $cache_id)"
"callback_filter_process","Provide text filtered to conform to the supplied format.","callback_filter_process($text, $filter, $format, $langcode, $cache, $cache_id)"
"callback_filter_settings","Provide a settings form for filter settings.","callback_filter_settings($form, &$form_state, $filter, $format, $defaults, $filters)"
"callback_filter_tips","Return help text for a filter.","callback_filter_tips($filter, $format, $long)"
"callback_queue_worker","Work on a single queue item.","callback_queue_worker($queue_item_data)"
"callback_search_conditions","Provide search query conditions.","callback_search_conditions($keys)"
"check_markup","Runs all the enabled filters on a piece of text.","check_markup($text, $format_id = NULL, $langcode = '', $cache = FALSE)"
"check_plain","Encodes special characters in a plain-text string for display as HTML.","check_plain($text)"
"check_url","Strips dangerous protocols from a URI and encodes it for output to HTML.","check_url($uri)"
"color_form_system_themes_alter","Implements hook_form_FORM_ID_alter().","color_form_system_themes_alter(&$form, &$form_state)"
"color_form_system_theme_settings_alter","Implements hook_form_FORM_ID_alter().","color_form_system_theme_settings_alter(&$form, &$form_state)"
"color_get_info","Retrieves the Color module information for a particular theme.","color_get_info($theme)"
"color_get_palette","Retrieves the color palette for a particular theme.","color_get_palette($theme, $default = FALSE)"
"color_help","Implements hook_help().","color_help($path, $arg)"
"color_palette_color_value","Determines the value for a palette color field.","color_palette_color_value($element, $input = FALSE, $form_state = array())"
"color_requirements","Implements hook_requirements().","color_requirements($phase)"
"color_scheme_form","Form constructor for the color configuration form for a particular theme.","color_scheme_form($complete_form, &$form_state, $theme)"
"color_scheme_form_submit","Form submission handler for color_scheme_form().","color_scheme_form_submit($form, &$form_state)"
"color_scheme_form_validate","Form validation handler for color_scheme_form().","color_scheme_form_validate($form, &$form_state)"
"color_theme","Implements hook_theme().","color_theme()"
"color_update_7001","Warn site administrator if unsafe CSS color codes are found in the database.","color_update_7001()"
"color_valid_hexadecimal_string","Determines if a hexadecimal CSS color string is valid.","color_valid_hexadecimal_string($color)"
"comment_access","Determines whether the current user has access to a particular comment.","comment_access($op, $comment)"
"comment_action_info","Implements hook_action_info().","comment_action_info()"
"comment_admin","Menu callback; present an administrative comment listing.","comment_admin($type = 'new')"
"comment_admin_overview","Form builder for the comment overview administration form.","comment_admin_overview($form, &$form_state, $arg)"
"comment_admin_overview_submit","Process comment_admin_overview form submissions.","comment_admin_overview_submit($form, &$form_state)"
"comment_admin_overview_validate","Validate comment_admin_overview form submissions.","comment_admin_overview_validate($form, &$form_state)"
"comment_approve","Menu callback; publish specified comment.","comment_approve($cid)"
"comment_block_configure","Implements hook_block_configure().","comment_block_configure($delta = '')"
"comment_block_info","Implements hook_block_info().","comment_block_info()"
"comment_block_save","Implements hook_block_save().","comment_block_save($delta = '', $edit = array())"
"comment_block_view","Implements hook_block_view().","comment_block_view($delta = '')"
"comment_build_content","Builds a structured array representing the comment&#039;s content.","comment_build_content($comment, $node, $view_mode = 'full', $langcode = NULL)"
"comment_confirm_delete","Form builder; Builds the confirmation form for deleting a single comment.","comment_confirm_delete($form, &$form_state, $comment)"
"comment_confirm_delete_page","Page callback for comment deletions.","comment_confirm_delete_page($cid)"
"comment_confirm_delete_submit","Process comment_confirm_delete form submissions.","comment_confirm_delete_submit($form, &$form_state)"
"comment_count_unpublished","Returns a menu title which includes the number of unapproved comments.","comment_count_unpublished()"
"comment_delete","Delete a comment and all its replies.","comment_delete($cid)"
"comment_delete_multiple","Delete comments and all their replies.","comment_delete_multiple($cids)"
"comment_edit_page","Page callback for comment editing.","comment_edit_page($comment)"
"comment_enable","Implements hook_enable().","comment_enable()"
"comment_entity_info","Implements hook_entity_info().","comment_entity_info()"
"comment_field_extra_fields","Implements hook_field_extra_fields().","comment_field_extra_fields()"
"comment_file_download_access","Implements hook_file_download_access().","comment_file_download_access($field, $entity_type, $entity)"
"comment_form","Generate the basic commenting form, for appending to a node or display on a separate page.","comment_form($form, &$form_state, $comment)"
"comment_forms","Implements hook_forms().","comment_forms()"
"comment_form_build_preview","Build a preview from submitted form values.","comment_form_build_preview($form, &$form_state)"
"comment_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter().","comment_form_node_form_alter(&$form, $form_state)"
"comment_form_node_type_form_alter","Implements hook_form_FORM_ID_alter().","comment_form_node_type_form_alter(&$form, $form_state)"
"comment_form_submit","Process comment form submissions; prepare the comment, store it, and set a redirection target.","comment_form_submit($form, &$form_state)"
"comment_form_submit_build_comment","Updates the form state&#039;s comment entity by processing this submission&#039;s values.","comment_form_submit_build_comment($form, &$form_state)"
"comment_form_validate","Validate comment form submissions.","comment_form_validate($form, &$form_state)"
"comment_get_display_ordinal","Get the display ordinal for a comment, starting from 0.","comment_get_display_ordinal($cid, $node_type)"
"comment_get_display_page","Return the page number for a comment.","comment_get_display_page($cid, $node_type)"
"comment_get_recent","Find the most recent comments that are available to the current user.","comment_get_recent($number = 10)"
"comment_get_thread","Retrieve comments for a thread.","comment_get_thread($node, $mode, $comments_per_page)"
"comment_help","Implements hook_help().","comment_help($path, $arg)"
"comment_links","Helper function, build links for an individual comment.","comment_links($comment, $node)"
"comment_load","Load the entire comment by cid.","comment_load($cid, $reset = FALSE)"
"comment_load_multiple","Load comments from the database.","comment_load_multiple($cids = array(), $conditions = array(), $reset = FALSE)"
"comment_menu","Implements hook_menu().","comment_menu()"
"comment_menu_alter","Implements hook_menu_alter().","comment_menu_alter(&$items)"
"comment_modules_enabled","Implements hook_modules_enabled().","comment_modules_enabled($modules)"
"comment_multiple_delete_confirm","List the selected comments and verify that the admin wants to delete them.","comment_multiple_delete_confirm($form, &$form_state)"
"comment_multiple_delete_confirm_submit","Process comment_multiple_delete_confirm form submissions.","comment_multiple_delete_confirm_submit($form, &$form_state)"
"comment_new_page_count","Calculate page number for first new comment.","comment_new_page_count($num_comments, $new_replies, $node)"
"comment_node_delete","Implements hook_node_delete().","comment_node_delete($node)"
"comment_node_insert","Implements hook_node_insert().","comment_node_insert($node)"
"comment_node_load","Implements hook_node_load().","comment_node_load($nodes, $types)"
"comment_node_page_additions","Build the comment-related elements for node detail pages.","comment_node_page_additions($node)"
"comment_node_prepare","Implements hook_node_prepare().","comment_node_prepare($node)"
"comment_node_search_result","Implements hook_node_search_result().","comment_node_search_result($node)"
"comment_node_type_delete","Implements hook_node_type_delete().","comment_node_type_delete($info)"
"comment_node_type_insert","Implements hook_node_type_insert().","comment_node_type_insert($info)"
"comment_node_type_load","Menu loader callback for Field UI paths.","comment_node_type_load($name)"
"comment_node_type_update","Implements hook_node_type_update().","comment_node_type_update($info)"
"comment_node_update_index","Implements hook_node_update_index().","comment_node_update_index($node)"
"comment_node_view","Implements hook_node_view().","comment_node_view($node, $view_mode)"
"comment_num_new","Get number of new comments for current user and specified node.","comment_num_new($nid, $timestamp = 0)"
"comment_permalink","Redirects comment links to the correct page depending on comment settings.","comment_permalink($cid)"
"comment_permission","Implements hook_permission().","comment_permission()"
"comment_prepare_thread","Loop over comment thread, noting indentation level.","comment_prepare_thread(&$comments)"
"comment_preview","Generate a comment preview.","comment_preview($comment)"
"comment_publish_action","Publishes a comment.","comment_publish_action($comment, $context = array())"
"comment_ranking","Implements hook_ranking().","comment_ranking()"
"comment_rdf_mapping","Implements hook_rdf_mapping().","comment_rdf_mapping()"
"comment_reply","This function is responsible for generating a comment reply form.
There are several cases that have to be handled, including:","comment_reply($node, $pid = NULL)"
"comment_save","Accepts a submission of new or changed comment content.","comment_save($comment)"
"comment_save_action","Saves a comment.","comment_save_action($comment)"
"comment_schema","Implements hook_schema().","comment_schema()"
"comment_submit","Prepare a comment for submission.","comment_submit($comment)"
"comment_theme","Implements hook_theme().","comment_theme()"
"comment_tokens","Implements hook_tokens().","comment_tokens($type, $tokens, array $data = array(), array $options = array())"
"comment_token_info","Implements hook_token_info().","comment_token_info()"
"comment_uninstall","Implements hook_uninstall().","comment_uninstall()"
"comment_unpublish_action","Unpublishes a comment.","comment_unpublish_action($comment, $context = array())"
"comment_unpublish_by_keyword_action","Unpublishes a comment if it contains certain keywords.","comment_unpublish_by_keyword_action($comment, $context)"
"comment_unpublish_by_keyword_action_form","Form builder; Prepare a form for blacklisted keywords.","comment_unpublish_by_keyword_action_form($context)"
"comment_unpublish_by_keyword_action_submit","Process comment_unpublish_by_keyword_action_form form submissions.","comment_unpublish_by_keyword_action_submit($form, $form_state)"
"comment_update_7000","Rename comment display setting variables.","comment_update_7000()"
"comment_update_7001","Change comment status from published being 0 to being 1","comment_update_7001()"
"comment_update_7002","Rename {comments} table to {comment} and upgrade it.","comment_update_7002()"
"comment_update_7003","Split {comment}.timestamp into &#039;created&#039; and &#039;changed&#039;, improve indexing on {comment}.","comment_update_7003()"
"comment_update_7004","Upgrade the {node_comment_statistics} table.","comment_update_7004()"
"comment_update_7005","Create the comment_body field.","comment_update_7005()"
"comment_update_7006","Migrate data from the comment field to field storage.","comment_update_7006(&$sandbox)"
"comment_update_7007","Add an index to the created column.","comment_update_7007()"
"comment_update_7008","Update database to match Drupal 7 schema.","comment_update_7008()"
"comment_update_7009","Change the last_comment_timestamp column description.","comment_update_7009()"
"comment_update_dependencies","Implements hook_update_dependencies().","comment_update_dependencies()"
"comment_update_index","Implements hook_update_index().","comment_update_index()"
"comment_uri","Implements callback_entity_info_uri().","comment_uri($comment)"
"comment_user_cancel","Implements hook_user_cancel().","comment_user_cancel($edit, $account, $method)"
"comment_user_delete","Implements hook_user_delete().","comment_user_delete($account)"
"comment_view","Generate an array for rendering the given comment.","comment_view($comment, $node, $view_mode = 'full', $langcode = NULL)"
"comment_view_multiple","Construct a drupal_render() style array from an array of loaded comments.","comment_view_multiple($comments, $node, $view_mode = 'full', $weight = 0, $langcode = NULL)"
"common_test_cron","Implements hook_cron().","common_test_cron()"
"common_test_cron_helper_cron","Implements hook_cron().","common_test_cron_helper_cron()"
"common_test_destination","Print destination query parameter.","common_test_destination()"
"common_test_drupal_alter_alter","Implements hook_TYPE_alter().","common_test_drupal_alter_alter(&$data, &$arg2 = NULL, &$arg3 = NULL)"
"common_test_drupal_goto_alter","Implements hook_drupal_goto_alter().","common_test_drupal_goto_alter(&$path, &$options, &$http_response_code)"
"common_test_drupal_goto_land","Landing page for drupal_goto().","common_test_drupal_goto_land()"
"common_test_drupal_goto_land_fail","Fail landing page for drupal_goto().","common_test_drupal_goto_land_fail()"
"common_test_drupal_goto_redirect","Redirect using drupal_goto().","common_test_drupal_goto_redirect()"
"common_test_drupal_goto_redirect_advanced","Redirect using drupal_goto().","common_test_drupal_goto_redirect_advanced()"
"common_test_drupal_render_printing_pre_render","Applies #printed to an element to help test #pre_render.","common_test_drupal_render_printing_pre_render($elements)"
"common_test_js_and_css_querystring","Adds a JavaScript file and a CSS file with a query string appended.","common_test_js_and_css_querystring()"
"common_test_library","Implements hook_library().","common_test_library()"
"common_test_library_alter","Implements hook_library_alter().","common_test_library_alter(&$libraries, $module)"
"common_test_menu","Implements hook_menu().","common_test_menu()"
"common_test_module_implements_alter","Implements hook_module_implements_alter().","common_test_module_implements_alter(&$implementations, $hook)"
"common_test_theme","Implements hook_theme().","common_test_theme()"
"confirm_form","Generates a form array for a confirmation form.","confirm_form($form, $question, $path, $description = NULL, $yes = NULL, $no = NULL, $name = 'confirm')"
"conf_path","Returns the appropriate configuration directory.","conf_path($require_settings = TRUE, $reset = FALSE)"
"contact_category_delete_form","Form constructor for the contact category deletion form.","contact_category_delete_form($form, &$form_state, array $contact)"
"contact_category_delete_form_submit","Form submission handler for contact_category_delete_form().","contact_category_delete_form_submit($form, &$form_state)"
"contact_category_edit_form","Form constructor for the category edit form.","contact_category_edit_form($form, &$form_state, array $category = array())"
"contact_category_edit_form_submit","Form submission handler for contact_category_edit_form().","contact_category_edit_form_submit($form, &$form_state)"
"contact_category_edit_form_validate","Form validation handler for contact_category_edit_form().","contact_category_edit_form_validate($form, &$form_state)"
"contact_category_list","Categories/list tab.","contact_category_list()"
"contact_form_user_admin_settings_alter","Implements hook_form_FORM_ID_alter().","contact_form_user_admin_settings_alter(&$form, &$form_state)"
"contact_form_user_profile_form_alter","Implements hook_form_FORM_ID_alter().","contact_form_user_profile_form_alter(&$form, &$form_state)"
"contact_help","Implements hook_help().","contact_help($path, $arg)"
"contact_install","Implements hook_install().","contact_install()"
"contact_load","Loads a contact category.","contact_load($cid)"
"contact_mail","Implements hook_mail().","contact_mail($key, &$message, $params)"
"contact_menu","Implements hook_menu().","contact_menu()"
"contact_permission","Implements hook_permission().","contact_permission()"
"contact_personal_form","Form constructor for the personal contact form.","contact_personal_form($form, &$form_state, $recipient)"
"contact_personal_form_submit","Form submission handler for contact_personal_form().","contact_personal_form_submit($form, &$form_state)"
"contact_personal_form_validate","Form validation handler for contact_personal_form().","contact_personal_form_validate($form, &$form_state)"
"contact_schema","Implements hook_schema().","contact_schema()"
"contact_site_form","Form constructor for the site-wide contact form.","contact_site_form($form, &$form_state)"
"contact_site_form_submit","Form submission handler for contact_site_form().","contact_site_form_submit($form, &$form_state)"
"contact_site_form_validate","Form validation handler for contact_site_form().","contact_site_form_validate($form, &$form_state)"
"contact_uninstall","Implements hook_uninstall().","contact_uninstall()"
"contact_update_7000","Rename the threshold limit variable.","contact_update_7000()"
"contact_update_7001","Rename the administer contact forms permission.","contact_update_7001()"
"contact_update_7002","Enable the &#039;access user contact forms&#039; for registered users by default.","contact_update_7002()"
"contact_update_7003","Change the weight column to normal int.","contact_update_7003()"
"contact_update_dependencies","Implements hook_update_dependencies().","contact_update_dependencies()"
"contact_user_presave","Implements hook_user_presave().","contact_user_presave(&$edit, $account, $category)"
"contextual_element_info","Implements hook_element_info().","contextual_element_info()"
"contextual_help","Implements hook_help().","contextual_help($path, $arg)"
"contextual_library","Implements hook_library().","contextual_library()"
"contextual_permission","Implements hook_permission().","contextual_permission()"
"contextual_preprocess","Implements hook_preprocess().","contextual_preprocess(&$variables, $hook)"
"contextual_pre_render_links","Build a renderable array for contextual links.","contextual_pre_render_links($element)"
"country_get_list","Get list of all predefined and custom countries.","country_get_list()"
"cron_queue_test_cron_queue_info","Implements hook_cron_queue_info().","cron_queue_test_cron_queue_info()"
"cron_queue_test_exception",,"cron_queue_test_exception($item)"
"current_path","Return the current URL path of the page being viewed.","current_path()"
"dashboard_admin","Page callback: Displays the dashboard.","dashboard_admin($launch_customize = FALSE)"
"dashboard_admin_blocks","Page callback: Builds the page for administering dashboard blocks.","dashboard_admin_blocks()"
"dashboard_block_info_alter","Implements hook_block_info_alter().","dashboard_block_info_alter(&$blocks, $theme, $code_blocks)"
"dashboard_block_list_alter","Implements hook_block_list_alter().","dashboard_block_list_alter(&$blocks)"
"dashboard_dashboard_regions","Implements hook_dashboard_regions().","dashboard_dashboard_regions()"
"dashboard_disable","Implements hook_disable().","dashboard_disable()"
"dashboard_enable","Implements hook_enable().","dashboard_enable()"
"dashboard_forms","Implements hook_forms().","dashboard_forms()"
"dashboard_form_block_add_block_form_alter","Implements hook_form_FORM_ID_alter().","dashboard_form_block_add_block_form_alter(&$form, &$form_state)"
"dashboard_form_block_admin_configure_alter","Implements hook_form_FORM_ID_alter().","dashboard_form_block_admin_configure_alter(&$form, &$form_state)"
"dashboard_form_block_admin_display_form_alter","Implements hook_form_FORM_ID_alter().","dashboard_form_block_admin_display_form_alter(&$form, &$form_state, $form_id)"
"dashboard_form_dashboard_admin_display_form_alter","Implements hook_form_FORM_ID_alter().","dashboard_form_dashboard_admin_display_form_alter(&$form, &$form_state)"
"dashboard_help","Implements hook_help().","dashboard_help($path, $arg)"
"dashboard_is_visible","Determines if the dashboard should be displayed on the current page.","dashboard_is_visible()"
"dashboard_menu","Implements hook_menu().","dashboard_menu()"
"dashboard_page_build","Implements hook_page_build().","dashboard_page_build(&$page)"
"dashboard_permission","Implements hook_permission().","dashboard_permission()"
"dashboard_regions","Returns an array of dashboard region names.","dashboard_regions()"
"dashboard_region_descriptions","Returns an array of dashboard region descriptions, keyed by region name.","dashboard_region_descriptions()"
"dashboard_show_block_content","Ajax callback: Displays the rendered contents of a specific block.","dashboard_show_block_content($module, $delta)"
"dashboard_show_disabled","Ajax callback: Shows disabled blocks in the dashboard customization mode.","dashboard_show_disabled()"
"dashboard_system_info_alter","Implements hook_system_info_alter().","dashboard_system_info_alter(&$info, $file, $type)"
"dashboard_theme","Implements hook_theme().","dashboard_theme()"
"dashboard_uninstall","Implements hook_uninstall().","dashboard_uninstall()"
"dashboard_update","Sets the new weight of each region according to the drag-and-drop order.","dashboard_update()"
"database_test_db_query_temporary","Run a db_query_temporary and output the table name and its number of rows.","database_test_db_query_temporary()"
"database_test_even_pager_query","Run a pager query and return the results.","database_test_even_pager_query($limit)"
"database_test_menu","Implements hook_menu().","database_test_menu()"
"database_test_odd_pager_query","Run a pager query and return the results.","database_test_odd_pager_query($limit)"
"database_test_query_alter","Implements hook_query_alter().","database_test_query_alter(QueryAlterableInterface $query)"
"database_test_query_database_test_alter_remove_range_alter","Implements hook_query_TAG_alter().","database_test_query_database_test_alter_remove_range_alter(QueryAlterableInterface $query)"
"database_test_schema","Implements hook_schema().","database_test_schema()"
"database_test_tablesort","Run a tablesort query and return the results.","database_test_tablesort()"
"database_test_tablesort_first","Run a tablesort query with a second order_by after and return the results.","database_test_tablesort_first()"
"database_test_theme_tablesort","Output a form without setting a header sort.","database_test_theme_tablesort($form, &$form_state)"
"date_iso8601","Returns an ISO8601 formatted date based on the given date.","date_iso8601($date)"
"date_validate","Validates the date type to prevent invalid dates (e.g., February 30, 2006).","date_validate($element)"
"dblog_build_filter_query","Builds a query for database log administration filters based on session.","dblog_build_filter_query()"
"dblog_clear_log_form","Form constructor for the form that clears out the log.","dblog_clear_log_form($form)"
"dblog_clear_log_submit","Form submission handler for dblog_clear_log_form().","dblog_clear_log_submit()"
"dblog_cron","Implements hook_cron().","dblog_cron()"
"dblog_event","Page callback: Displays details about a specific database log message.","dblog_event($id)"
"dblog_filters","Creates a list of database log administration filters that can be applied.","dblog_filters()"
"dblog_filter_form","Form constructor for the database logging filter form.","dblog_filter_form($form)"
"dblog_filter_form_submit","Form submission handler for dblog_filter_form().","dblog_filter_form_submit($form, &$form_state)"
"dblog_filter_form_validate","Form validation handler for dblog_filter_form().","dblog_filter_form_validate($form, &$form_state)"
"dblog_form_system_logging_settings_alter","Implements hook_form_FORM_ID_alter() for system_logging_settings().","dblog_form_system_logging_settings_alter(&$form, $form_state)"
"dblog_help","Implements hook_help().","dblog_help($path, $arg)"
"dblog_init","Implements hook_init().","dblog_init()"
"dblog_menu","Implements hook_menu().","dblog_menu()"
"dblog_overview","Page callback: Displays a listing of database log messages.","dblog_overview()"
"dblog_schema","Implements hook_schema().","dblog_schema()"
"dblog_theme","Implements hook_theme().","dblog_theme()"
"dblog_top","Page callback: Shows the most frequent log messages of a given event type.","dblog_top($type)"
"dblog_uninstall","Implements hook_uninstall().","dblog_uninstall()"
"dblog_update_7001","Update the {watchdog} table.","dblog_update_7001()"
"dblog_update_7002","Add an index to the severity column in the watchdog database table.","dblog_update_7002()"
"dblog_watchdog","Implements hook_watchdog().","dblog_watchdog(array $log_entry)"
"db_add_field","Adds a new field to a table.","db_add_field($table, $field, $spec, $keys_new = array())"
"db_add_index","Adds an index.","db_add_index($table, $name, $fields)"
"db_add_primary_key","Adds a primary key to a database table.","db_add_primary_key($table, $fields)"
"db_add_unique_key","Adds a unique key.","db_add_unique_key($table, $name, $fields)"
"db_and","Returns a new DatabaseCondition, set to &quot;AND&quot; all conditions together.","db_and()"
"db_change_field","Changes a field definition.","db_change_field($table, $field, $field_new, $spec, $keys_new = array())"
"db_close","Closes the active database connection.","db_close(array $options = array())"
"db_condition","Returns a new DatabaseCondition, set to the specified conjunction.","db_condition($conjunction)"
"db_create_table","Creates a new table from a Drupal table definition.","db_create_table($name, $table)"
"db_delete","Returns a new DeleteQuery object for the active database.","db_delete($table, array $options = array())"
"db_driver","Retrieves the name of the currently active database driver.","db_driver()"
"db_drop_field","Drops a field.","db_drop_field($table, $field)"
"db_drop_index","Drops an index.","db_drop_index($table, $name)"
"db_drop_primary_key","Drops the primary key of a database table.","db_drop_primary_key($table)"
"db_drop_table","Drops a table.","db_drop_table($table)"
"db_drop_unique_key","Drops a unique key.","db_drop_unique_key($table, $name)"
"db_escape_field","Restricts a dynamic column or constraint name to safe characters.","db_escape_field($field)"
"db_escape_table","Restricts a dynamic table name to safe characters.","db_escape_table($table)"
"db_field_exists","Checks if a column exists in the given table.","db_field_exists($table, $field)"
"db_field_names","Returns an array of field names from an array of key/index column specifiers.","db_field_names($fields)"
"db_field_set_default","Sets the default value for a field.","db_field_set_default($table, $field, $default)"
"db_field_set_no_default","Sets a field to have no default value.","db_field_set_no_default($table, $field)"
"db_find_tables","Finds all tables that are like the specified base table name.","db_find_tables($table_expression)"
"db_ignore_slave","Sets a session variable specifying the lag time for ignoring a slave server.","db_ignore_slave()"
"db_index_exists","Checks if an index exists in the given table.","db_index_exists($table, $name)"
"db_insert","Returns a new InsertQuery object for the active database.","db_insert($table, array $options = array())"
"db_installer_object","Returns a database installer object.","db_installer_object($driver)"
"db_like","Escapes characters that work as wildcard characters in a LIKE pattern.","db_like($string)"
"db_merge","Returns a new MergeQuery object for the active database.","db_merge($table, array $options = array())"
"db_next_id","Retrieves a unique id.","db_next_id($existing_id = 0)"
"db_or","Returns a new DatabaseCondition, set to &quot;OR&quot; all conditions together.","db_or()"
"db_query","Executes an arbitrary query string against the active database.","db_query($query, array $args = array(), array $options = array())"
"db_query_range","Executes a query against the active database, restricted to a range.","db_query_range($query, $from, $count, array $args = array(), array $options = array())"
"db_query_temporary","Executes a SELECT query string and saves the result set to a temporary table.","db_query_temporary($query, array $args = array(), array $options = array())"
"db_rename_table","Renames a table.","db_rename_table($table, $new_name)"
"db_run_tasks","Ensures the environment for a Drupal database on a predefined connection.","db_run_tasks($driver)"
"db_select","Returns a new SelectQuery object for the active database.","db_select($table, $alias = NULL, array $options = array())"
"db_set_active","Sets a new active database.","db_set_active($key = 'default')"
"db_table_exists","Checks if a table exists.","db_table_exists($table)"
"db_transaction","Returns a new transaction object for the active database.","db_transaction($name = NULL, array $options = array())"
"db_truncate","Returns a new TruncateQuery object for the active database.","db_truncate($table, array $options = array())"
"db_update","Returns a new UpdateQuery object for the active database.","db_update($table, array $options = array())"
"db_xor","Returns a new DatabaseCondition, set to &quot;XOR&quot; all conditions together.","db_xor()"
"debug","Outputs debug information.","debug($data, $label = NULL, $print_r = FALSE)"
"decode_entities","Decodes all HTML entities (including numerical ones) to regular UTF-8 bytes.","decode_entities($text)"
"drupal_access_denied","Delivers an &quot;access denied&quot; error to the browser.","drupal_access_denied()"
"drupal_add_css","Adds a cascading stylesheet to the stylesheet queue.","drupal_add_css($data = NULL, $options = NULL)"
"drupal_add_feed","Adds a feed URL for the current page.","drupal_add_feed($url = NULL, $title = '')"
"drupal_add_html_head","Adds output to the HEAD tag of the HTML page.","drupal_add_html_head($data = NULL, $key = NULL)"
"drupal_add_html_head_link","Adds a LINK tag with a distinct &#039;rel&#039; attribute to the page&#039;s HEAD.","drupal_add_html_head_link($attributes, $header = FALSE)"
"drupal_add_http_header","Sets an HTTP response header for the current page.","drupal_add_http_header($name, $value, $append = FALSE)"
"drupal_add_js","Adds a JavaScript file, setting, or inline code to the page.","drupal_add_js($data = NULL, $options = NULL)"
"drupal_add_library","Adds multiple JavaScript or CSS files at the same time.","drupal_add_library($module, $name, $every_page = NULL)"
"drupal_add_region_content","Adds content to a specified region.","drupal_add_region_content($region = NULL, $data = NULL)"
"drupal_add_tabledrag","Assists in adding the tableDrag JavaScript behavior to a themed table.","drupal_add_tabledrag($table_id, $action, $relationship, $group, $subgroup = NULL, $source = NULL, $hidden = TRUE, $limit = 0)"
"drupal_aggregate_css","Default callback to aggregate CSS files and inline content.","drupal_aggregate_css(&$css_groups)"
"drupal_alter","Passes alterable variables to specific hook_TYPE_alter() implementations.","drupal_alter($type, &$data, &$context1 = NULL, &$context2 = NULL, &$context3 = NULL)"
"drupal_anonymous_user","Generates a default anonymous $user object.","drupal_anonymous_user()"
"drupal_array_diff_assoc_recursive","Recursively computes the difference of arrays with additional index check.","drupal_array_diff_assoc_recursive($array1, $array2)"
"drupal_array_get_nested_value","Retrieves a value from a nested array with variable depth.","&drupal_array_get_nested_value(array &$array, array $parents, &$key_exists = NULL)"
"drupal_array_merge_deep","Merges multiple arrays, recursively, and returns the merged array.","drupal_array_merge_deep()"
"drupal_array_merge_deep_array","Merges multiple arrays, recursively, and returns the merged array.","drupal_array_merge_deep_array($arrays)"
"drupal_array_nested_key_exists","Determines whether a nested array contains the requested keys.","drupal_array_nested_key_exists(array $array, array $parents)"
"drupal_array_set_nested_value","Sets a value in a nested array with variable depth.","drupal_array_set_nested_value(array &$array, array $parents, $value, $force = FALSE)"
"drupal_attributes","Converts an associative array to an XML/HTML tag attribute string.","drupal_attributes(array $attributes = array())"
"drupal_autoload_class","Confirms that a class is available.","drupal_autoload_class($class)"
"drupal_autoload_interface","Confirms that an interface is available.","drupal_autoload_interface($interface)"
"drupal_base64_encode","Returns a URL-safe, base64 encoded version of the supplied string.","drupal_base64_encode($string)"
"drupal_basename","Gets the filename from a given path.","drupal_basename($uri, $suffix = NULL)"
"drupal_block_denied","Handles denied users.","drupal_block_denied($ip)"
"drupal_bootstrap","Ensures Drupal is bootstrapped to the specified phase.","drupal_bootstrap($phase = NULL, $new_phase = TRUE)"
"drupal_build_css_cache","Aggregates and optimizes CSS files into a cache file in the files directory.","drupal_build_css_cache($css)"
"drupal_build_form","Builds and process a form based on a form id.","drupal_build_form($form_id, &$form_state)"
"drupal_build_js_cache","Aggregates JavaScript files into a cache file in the files directory.","drupal_build_js_cache($files)"
"drupal_cache_system_paths","Cache system paths for a page.","drupal_cache_system_paths()"
"drupal_check_incompatibility","Checks whether a version is compatible with a given dependency.","drupal_check_incompatibility($v, $current_version)"
"drupal_check_memory_limit","Compares the memory required for an operation to the available memory.","drupal_check_memory_limit($required, $memory_limit = NULL)"
"drupal_check_module","Checks a module&#039;s requirements.","drupal_check_module($module)"
"drupal_check_profile","Checks an installation profile&#039;s requirements.","drupal_check_profile($profile)"
"drupal_chmod","Sets the permissions on a file or directory.","drupal_chmod($uri, $mode = NULL)"
"drupal_clean_css_identifier","Prepares a string for use as a CSS identifier (element, class, or ID name).","drupal_clean_css_identifier($identifier, $filter = array(' ' => '-', '_' => '-', '/' => '-', '[' => '-', ']' => ''))"
"drupal_clear_css_cache","Deletes old cached CSS files.","drupal_clear_css_cache()"
"drupal_clear_js_cache","Deletes old cached JavaScript files and variables.","drupal_clear_js_cache()"
"drupal_clear_path_cache","Clear the path cache.","drupal_clear_path_cache($source = NULL)"
"drupal_common_theme","Provides theme registration for themes across .inc files.","drupal_common_theme()"
"drupal_convert_to_utf8","Converts data to UTF-8.","drupal_convert_to_utf8($data, $encoding)"
"drupal_cron_cleanup","DEPRECATED: Shutdown function: Performs cron cleanup.","drupal_cron_cleanup()"
"drupal_cron_run","Executes a cron run when called.","drupal_cron_run()"
"drupal_current_script_url","Returns the URL of the current script, with modified query parameters.","drupal_current_script_url($query = array())"
"drupal_delete_file_if_stale","Callback to delete files modified more than a set time ago.","drupal_delete_file_if_stale($uri)"
"drupal_deliver_html_page","Packages and sends the result of a page callback to the browser as HTML.","drupal_deliver_html_page($page_callback_result)"
"drupal_deliver_page","Delivers a page callback result to the browser in the appropriate format.","drupal_deliver_page($page_callback_result, $default_delivery_callback = NULL)"
"drupal_depth_first_search","Performs a depth-first search and sort on a directed acyclic graph.","drupal_depth_first_search(&$graph)"
"drupal_detect_baseurl","Detects the base URL using the PHP $_SERVER variables.","drupal_detect_baseurl($file = 'install.php')"
"drupal_detect_database_types","Detects all supported databases that are compiled into PHP.","drupal_detect_database_types()"
"drupal_dirname","Gets the name of the directory from a given path.","drupal_dirname($uri)"
"drupal_encode_path","Encodes a Drupal path for use in a URL.","drupal_encode_path($path)"
"drupal_environment_initialize","Initializes the PHP environment.","drupal_environment_initialize()"
"drupal_error_levels","Maps PHP error constants to watchdog severity levels.","drupal_error_levels()"
"drupal_exit","Performs end-of-request tasks.","drupal_exit($destination = NULL)"
"drupal_explode_tags","Explodes a string of tags into an array.","drupal_explode_tags($tags)"
"drupal_fast_404","Returns a simple 404 Not Found page.","drupal_fast_404()"
"drupal_find_base_themes","Find all the base themes for the specified theme.","drupal_find_base_themes($themes, $key, $used_keys = array())"
"drupal_find_theme_functions","Allows themes and/or theme engines to discover overridden theme functions.","drupal_find_theme_functions($cache, $prefixes)"
"drupal_find_theme_templates","Allows themes and/or theme engines to easily discover overridden templates.","drupal_find_theme_templates($cache, $extension, $path)"
"drupal_flush_all_caches","Flushes all cached data on the site.","drupal_flush_all_caches()"
"drupal_form_submit","Retrieves, populates, and processes a form.","drupal_form_submit($form_id, &$form_state)"
"drupal_generate_test_ua","Generates a user agent string with a HMAC and timestamp for simpletest.","drupal_generate_test_ua($prefix)"
"drupal_get_bootstrap_phase","Returns the current bootstrap phase for this Drupal process.","drupal_get_bootstrap_phase()"
"drupal_get_breadcrumb","Gets the breadcrumb trail for the current page.","drupal_get_breadcrumb()"
"drupal_get_complete_schema","Gets the whole database schema.","drupal_get_complete_schema($rebuild = FALSE)"
"drupal_get_css","Returns a themed representation of all stylesheets to attach to the page.","drupal_get_css($css = NULL, $skip_alter = FALSE)"
"drupal_get_database_types","Returns all supported database installer objects that are compiled into PHP.","drupal_get_database_types()"
"drupal_get_destination","Prepares a &#039;destination&#039; URL query parameter for use with drupal_goto().","drupal_get_destination()"
"drupal_get_feeds","Gets the feed URLs for the current page.","drupal_get_feeds($delimiter = ""\n"")"
"drupal_get_filename","Returns and optionally sets the filename for a system resource.","drupal_get_filename($type, $name, $filename = NULL)"
"drupal_get_filetransfer_info","Assembles the Drupal FileTransfer registry.","drupal_get_filetransfer_info()"
"drupal_get_form","Returns a renderable form array for a given form ID.","drupal_get_form($form_id)"
"drupal_get_hash_salt","Gets a salt useful for hardening against SQL injection.","drupal_get_hash_salt()"
"drupal_get_html_head","Retrieves output to be displayed in the HEAD tag of the HTML page.","drupal_get_html_head()"
"drupal_get_http_header","Gets the HTTP response headers for the current page.","drupal_get_http_header($name = NULL)"
"drupal_get_installed_schema_version","Returns the currently installed schema version for a module.","drupal_get_installed_schema_version($module, $reset = FALSE, $array = FALSE)"
"drupal_get_js","Returns a themed presentation of all JavaScript code for the current page.","drupal_get_js($scope = 'header', $javascript = NULL, $skip_alter = FALSE)"
"drupal_get_library","Retrieves information for a JavaScript/CSS library.","drupal_get_library($module, $name = NULL)"
"drupal_get_messages","Returns all messages that have been set with drupal_set_message().","drupal_get_messages($type = NULL, $clear_queue = TRUE)"
"drupal_get_normal_path","Given a path alias, return the internal path it represents.","drupal_get_normal_path($path, $path_language = NULL)"
"drupal_get_path","Returns the path to a system item (module, theme, etc.).","drupal_get_path($type, $name)"
"drupal_get_path_alias","Given an internal Drupal path, return the alias set by the administrator.","drupal_get_path_alias($path = NULL, $path_language = NULL)"
"drupal_get_private_key","Ensures the private key variable used to generate tokens is set.","drupal_get_private_key()"
"drupal_get_profile","Gets the name of the currently active installation profile.","drupal_get_profile()"
"drupal_get_query_array","Splits a URL-encoded query string into an array.","drupal_get_query_array($query)"
"drupal_get_query_parameters","Processes a URL query parameter array to remove unwanted elements.","drupal_get_query_parameters(array $query = NULL, array $exclude = array('q'), $parent = '')"
"drupal_get_rdf_namespaces","Returns a string containing RDF namespace declarations for use in XML and
XHTML output.","drupal_get_rdf_namespaces()"
"drupal_get_region_content","Gets assigned content for a given region.","drupal_get_region_content($region = NULL, $delimiter = ' ')"
"drupal_get_schema","Gets the schema definition of a table, or the whole database schema.","drupal_get_schema($table = NULL, $rebuild = FALSE)"
"drupal_get_schema_unprocessed","Returns the unprocessed and unaltered version of a module&#039;s schema.","drupal_get_schema_unprocessed($module, $table = NULL)"
"drupal_get_schema_versions","Returns an array of available schema versions for a module.","drupal_get_schema_versions($module)"
"drupal_get_title","Gets the title of the current page.","drupal_get_title()"
"drupal_get_token","Generates a token based on $value, the user session, and the private key.","drupal_get_token($value = '')"
"drupal_get_updaters","Assembles the Drupal Updater registry.","drupal_get_updaters()"
"drupal_get_user_timezone","Returns the time zone of the current user.","drupal_get_user_timezone()"
"drupal_goto","Sends the user to a different page.","drupal_goto($path = '', array $options = array(), $http_response_code = 302)"
"drupal_group_css","Default callback to group CSS items.","drupal_group_css($css)"
"drupal_hash_base64","Calculates a base-64 encoded, URL-safe sha-256 hash.","drupal_hash_base64($data)"
"drupal_help_arg","Generates elements for the $arg array in the help hook.","drupal_help_arg($arg = array())"
"drupal_hmac_base64","Calculates a base-64 encoded, URL-safe sha-256 hmac.","drupal_hmac_base64($data, $key)"
"drupal_html_class","Prepares a string for use as a valid class name.","drupal_html_class($class)"
"drupal_html_id","Prepares a string for use as a valid HTML ID and guarantees uniqueness.","drupal_html_id($id)"
"drupal_html_to_text","Transforms an HTML string into plain text, preserving its structure.","drupal_html_to_text($string, $allowed_tags = NULL)"
"drupal_http_build_query","Parses an array into a valid, rawurlencoded query string.","drupal_http_build_query(array $query, $parent = '')"
"drupal_http_header_attributes","Formats an attribute string for an HTTP header.","drupal_http_header_attributes(array $attributes = array())"
"drupal_http_request","Performs an HTTP request.","drupal_http_request($url, array $options = array())"
"drupal_implode_tags","Implodes an array of tags into a string.","drupal_implode_tags($tags)"
"drupal_installation_attempted","Returns TRUE if a Drupal installation is currently being attempted.","drupal_installation_attempted()"
"drupal_install_fix_file","Attempts to fix file permissions.","drupal_install_fix_file($file, $mask, $message = TRUE)"
"drupal_install_mkdir","Creates a directory with the specified permissions.","drupal_install_mkdir($file, $mask, $message = TRUE)"
"drupal_install_profile_distribution_name","Loads the installation profile, extracting its defined distribution name.","drupal_install_profile_distribution_name()"
"drupal_install_schema","Creates all tables defined in a module&#039;s hook_schema().","drupal_install_schema($module)"
"drupal_install_system","Installs the system module.","drupal_install_system()"
"drupal_is_cli","Detects whether the current script is running in a command-line environment.","drupal_is_cli()"
"drupal_is_denied","Checks to see if an IP address has been blocked.","drupal_is_denied($ip)"
"drupal_is_front_page","Check if the current page is the front page.","drupal_is_front_page()"
"drupal_json_decode","Converts an HTML-safe JSON string into its PHP equivalent.","drupal_json_decode($var)"
"drupal_json_encode","Converts a PHP variable into its JavaScript equivalent.","drupal_json_encode($var)"
"drupal_json_encode_helper","Encodes a PHP variable to HTML-safe JSON for PHP versions below 5.3.0.","drupal_json_encode_helper($var)"
"drupal_json_output","Returns data in JSON format.","drupal_json_output($var = NULL)"
"drupal_js_defaults","Constructs an array of the defaults that are used for JavaScript items.","drupal_js_defaults($data = NULL)"
"drupal_language_initialize","Initializes all the defined language types.","drupal_language_initialize()"
"drupal_language_types","Returns a list of the built-in language types.","drupal_language_types()"
"drupal_load","Includes a file with the provided type and name.","drupal_load($type, $name)"
"drupal_load_stylesheet","Loads the stylesheet and resolves all @import commands.","drupal_load_stylesheet($file, $optimize = NULL, $reset_basepath = TRUE)"
"drupal_load_stylesheet_content","Processes the contents of a stylesheet for aggregation.","drupal_load_stylesheet_content($contents, $optimize = FALSE)"
"drupal_load_updates","Loads .install files for installed modules to initialize the update system.","drupal_load_updates()"
"drupal_lookup_path","Given an alias, return its Drupal system URL if one exists. Given a Drupal
system URL return one of its aliases if such a one exists. Otherwise,
return FALSE.","drupal_lookup_path($action, $path = '', $path_language = NULL)"
"drupal_mail","Composes and optionally sends an e-mail message.","drupal_mail($module, $key, $to, $language, $params = array(), $from = NULL, $send = TRUE)"
"drupal_mail_system","Returns an object that implements the MailSystemInterface interface.","drupal_mail_system($module, $key)"
"drupal_maintenance_theme","Enables use of the theme system without requiring database access.","drupal_maintenance_theme()"
"drupal_map_assoc","Forms an associative array from a linear array.","drupal_map_assoc($array, $function = NULL)"
"drupal_match_path","Check if a path matches any pattern in a set of patterns.","drupal_match_path($path, $patterns)"
"drupal_mkdir","Creates a directory using Drupal&#039;s default mode.","drupal_mkdir($uri, $mode = NULL, $recursive = FALSE, $context = NULL)"
"drupal_move_uploaded_file","Moves an uploaded file to a new location.","drupal_move_uploaded_file($filename, $uri)"
"drupal_multilingual","Returns TRUE if there is more than one language enabled.","drupal_multilingual()"
"drupal_not_found","Delivers a &quot;page not found&quot; error to the browser.","drupal_not_found()"
"drupal_override_server_variables","Sets appropriate server variables needed for command line scripts to work.","drupal_override_server_variables($variables = array())"
"drupal_page_footer","Performs end-of-request tasks.","drupal_page_footer()"
"drupal_page_get_cache","Retrieves the current page from the cache.","drupal_page_get_cache($check_only = FALSE)"
"drupal_page_header","Sets HTTP headers in preparation for a page response.","drupal_page_header()"
"drupal_page_is_cacheable","Determines the cacheability of the current page.","drupal_page_is_cacheable($allow_caching = NULL)"
"drupal_page_set_cache","Stores the current page in the cache.","drupal_page_set_cache()"
"drupal_parse_dependency","Parses a dependency for comparison by drupal_check_incompatibility().","drupal_parse_dependency($dependency)"
"drupal_parse_info_file","Parses Drupal module and theme .info files.","drupal_parse_info_file($filename)"
"drupal_parse_info_format","Parses data in Drupal&#039;s .info format.","drupal_parse_info_format($data)"
"drupal_parse_url","Parses a URL string into its path, query, and fragment components.","drupal_parse_url($url)"
"drupal_path_alias_whitelist_rebuild","Rebuild the path alias white list.","drupal_path_alias_whitelist_rebuild($source = NULL)"
"drupal_path_initialize","Initialize the $_GET[&#039;q&#039;] variable to the proper normal path.","drupal_path_initialize()"
"drupal_placeholder","Formats text for emphasized display in a placeholder inside a sentence.","drupal_placeholder($text)"
"drupal_prepare_form","Prepares a structured form array.","drupal_prepare_form($form_id, &$form, &$form_state)"
"drupal_pre_render_conditional_comments","#pre_render callback to render #browsers into #prefix and #suffix.","drupal_pre_render_conditional_comments($elements)"
"drupal_pre_render_link","#pre_render callback to render a link into #markup.","drupal_pre_render_link($element)"
"drupal_pre_render_links","#pre_render callback that collects child links into a single array.","drupal_pre_render_links($element)"
"drupal_pre_render_markup","#pre_render callback to append contents in #markup to #children.","drupal_pre_render_markup($elements)"
"drupal_pre_render_styles","#pre_render callback to add the elements needed for CSS tags to be rendered.","drupal_pre_render_styles($elements)"
"drupal_process_attached","Adds attachments to a render() structure.","drupal_process_attached($elements, $group = JS_DEFAULT, $dependency_check = FALSE, $every_page = NULL)"
"drupal_process_form","Processes a form submission.","drupal_process_form($form_id, &$form, &$form_state)"
"drupal_process_states","Adds JavaScript to change the state of an element based on another element.","drupal_process_states(&$elements)"
"drupal_random_bytes","Returns a string of highly randomized bytes (over the full 8-bit range).","drupal_random_bytes($count)"
"drupal_random_key","Returns a URL-safe, base64 encoded string of highly randomized bytes (over the full 8-bit range).","drupal_random_key($byte_count = 32)"
"drupal_realpath","Resolves the absolute filepath of a local URI or filepath.","drupal_realpath($uri)"
"drupal_rebuild_form","Constructs a new $form from the information in $form_state.","drupal_rebuild_form($form_id, &$form_state, $old_form = NULL)"
"drupal_redirect_form","Redirects the user to a URL after a form has been processed.","drupal_redirect_form($form_state)"
"drupal_region_class","Provides a standard HTML class name that identifies a page region.","drupal_region_class($region)"
"drupal_register_shutdown_function","Registers a function for execution on shutdown.","&drupal_register_shutdown_function($callback = NULL)"
"drupal_render","Renders HTML given a structured array tree.","drupal_render(&$elements)"
"drupal_render_cache_by_query","Prepares an element for caching based on a query.","drupal_render_cache_by_query($query, $function, $expire = CACHE_TEMPORARY, $granularity = NULL)"
"drupal_render_cache_get","Gets the rendered output of a renderable element from the cache.","drupal_render_cache_get($elements)"
"drupal_render_cache_set","Caches the rendered output of a renderable element.","drupal_render_cache_set(&$markup, $elements)"
"drupal_render_children","Renders children of an element and concatenates them.","drupal_render_children(&$element, $children_keys = NULL)"
"drupal_render_cid_create","Creates the cache ID for a renderable element.","drupal_render_cid_create($elements)"
"drupal_render_cid_parts","Returns cache ID parts for building a cache ID.","drupal_render_cid_parts($granularity = NULL)"
"drupal_render_collect_attached","Collects #attached for an element and its children into a single array.","drupal_render_collect_attached($elements, $return = FALSE)"
"drupal_render_page","Renders the page, including all theming.","drupal_render_page($page)"
"drupal_required_modules","Returns an array of modules required by core.","drupal_required_modules()"
"drupal_requirements_severity","Extracts the highest severity from the requirements array.","drupal_requirements_severity(&$requirements)"
"drupal_requirements_url","Returns a URL for proceeding to the next page after a requirements problem.","drupal_requirements_url($severity)"
"drupal_retrieve_form","Retrieves the structured array that defines a given form.","drupal_retrieve_form($form_id, &$form_state)"
"drupal_rewrite_settings","Replaces values in settings.php with values in the submitted array.","drupal_rewrite_settings($settings = array(), $prefix = '')"
"drupal_rmdir","Removes a directory.","drupal_rmdir($uri, $context = NULL)"
"drupal_save_session","Determines whether to save session data of the current request.","drupal_save_session($status = NULL)"
"drupal_schema_fields_sql","Retrieves a list of fields from a table schema.","drupal_schema_fields_sql($table, $prefix = NULL)"
"drupal_send_headers","Sends the HTTP response headers that were previously set, adding defaults.","drupal_send_headers($default_headers = array(), $only_default = FALSE)"
"drupal_serve_page_from_cache","Sets HTTP headers in preparation for a cached page response.","drupal_serve_page_from_cache(stdClass $cache)"
"drupal_session_commit","Commits the current session, if necessary.","drupal_session_commit()"
"drupal_session_destroy_uid","Ends a specific user&#039;s session(s).","drupal_session_destroy_uid($uid)"
"drupal_session_initialize","Initializes the session handler, starting a session if needed.","drupal_session_initialize()"
"drupal_session_regenerate","Called when an anonymous user becomes authenticated or vice-versa.","drupal_session_regenerate()"
"drupal_session_start","Starts a session forcefully, preserving already set session data.","drupal_session_start()"
"drupal_session_started","Returns whether a session has been started.","drupal_session_started($set = NULL)"
"drupal_settings_initialize","Sets the base URL, cookie domain, and session name from configuration.","drupal_settings_initialize()"
"drupal_set_breadcrumb","Sets the breadcrumb trail for the current page.","drupal_set_breadcrumb($breadcrumb = NULL)"
"drupal_set_installed_schema_version","Update the installed version information for a module.","drupal_set_installed_schema_version($module, $version)"
"drupal_set_message","Sets a message to display to the user.","drupal_set_message($message = NULL, $type = 'status', $repeat = TRUE)"
"drupal_set_page_content","Sets the main page content value for later use.","drupal_set_page_content($content = NULL)"
"drupal_set_time_limit","Attempts to set the PHP maximum execution time.","drupal_set_time_limit($time_limit)"
"drupal_set_title","Sets the title of the current page.","drupal_set_title($title = NULL, $output = CHECK_PLAIN)"
"drupal_site_offline","Delivers a &quot;site is under maintenance&quot; message to the browser.","drupal_site_offline()"
"drupal_sort_css_js","Sorts CSS and JavaScript resources.","drupal_sort_css_js($a, $b)"
"drupal_sort_title","Array sorting callback; sorts elements by &#039;title&#039; key.","drupal_sort_title($a, $b)"
"drupal_sort_weight","Sorts a structured array by the &#039;weight&#039; element.","drupal_sort_weight($a, $b)"
"drupal_static","Provides central static variable storage.","&drupal_static($name, $default_value = NULL, $reset = FALSE)"
"drupal_static_reset","Resets one or all centrally stored static variable(s).","drupal_static_reset($name = NULL)"
"drupal_strip_dangerous_protocols","Strips dangerous protocols (e.g. &#039;javascript:&#039;) from a URI.","drupal_strip_dangerous_protocols($uri)"
"drupal_strlen","Counts the number of characters in a UTF-8 string.","drupal_strlen($text)"
"drupal_strtolower","Lowercase a UTF-8 string.","drupal_strtolower($text)"
"drupal_strtoupper","Uppercase a UTF-8 string.","drupal_strtoupper($text)"
"drupal_substr","Cuts off a piece of a string based on character indices and counts.","drupal_substr($text, $start, $length = NULL)"
"drupal_system_listing","Returns information about system object files (modules, themes, etc.).","drupal_system_listing($mask, $directory, $key = 'name', $min_depth = 1)"
"drupal_tempnam","Creates a file with a unique filename in the specified directory.","drupal_tempnam($directory, $prefix)"
"drupal_theme_access","Determines if a theme is available to use.","drupal_theme_access($theme)"
"drupal_theme_initialize","Initializes the theme system by loading the theme.","drupal_theme_initialize()"
"drupal_theme_rebuild","Forces the system to rebuild the theme registry.","drupal_theme_rebuild()"
"drupal_truncate_bytes","Truncates a UTF-8-encoded string safely to a number of bytes.","drupal_truncate_bytes($string, $len)"
"drupal_ucfirst","Capitalizes the first letter of a UTF-8 string.","drupal_ucfirst($text)"
"drupal_uninstall_modules","Uninstalls a given list of disabled modules.","drupal_uninstall_modules($module_list = array(), $uninstall_dependents = TRUE)"
"drupal_uninstall_schema","Removes all tables defined in a module&#039;s hook_schema().","drupal_uninstall_schema($module)"
"drupal_unlink","Deletes a file.","drupal_unlink($uri, $context = NULL)"
"drupal_unpack","Unserializes and appends elements from a serialized string.","drupal_unpack($obj, $field = 'data')"
"drupal_validate_form","Validates user-submitted form data in the $form_state array.","drupal_validate_form($form_id, &$form, &$form_state)"
"drupal_validate_utf8","Checks whether a string is valid UTF-8.","drupal_validate_utf8($text)"
"drupal_valid_http_host","Validates that a hostname (for example $_SERVER[&#039;HTTP_HOST&#039;]) is safe.","drupal_valid_http_host($host)"
"drupal_valid_path","Checks a path exists and the current user has access to it.","drupal_valid_path($path, $dynamic_allowed = FALSE)"
"drupal_valid_test_ua","Returns the test prefix if this is an internal request from SimpleTest.","drupal_valid_test_ua()"
"drupal_valid_token","Validates a token based on $value, the user session, and the private key.","drupal_valid_token($token, $value = '', $skip_anonymous = FALSE)"
"drupal_var_export","Drupal-friendly var_export().","drupal_var_export($var, $prefix = '')"
"drupal_verify_install_file","Verifies the state of the specified file.","drupal_verify_install_file($file, $mask = NULL, $type = 'file')"
"drupal_verify_profile","Verifies an installation profile for installation.","drupal_verify_profile($install_state)"
"drupal_wrap_mail","Performs format=flowed soft wrapping for mail (RFC 3676).","drupal_wrap_mail($text, $indent = '')"
"drupal_write_record","Saves (inserts or updates) a record to the database based upon the schema.","drupal_write_record($table, &$record, $primary_keys = array())"
"drupal_xml_parser_create","Prepares a new XML parser.","drupal_xml_parser_create(&$data)"
"element_child","Checks if the key is a child.","element_child($key)"
"element_children","Identifies the children of an element array, optionally sorted by weight.","element_children(&$elements, $sort = FALSE)"
"element_get_visible_children","Returns the visible children of an element.","element_get_visible_children(array $elements)"
"element_info","Retrieves the default properties for the defined element type.","element_info($type)"
"element_info_property","Retrieves a single property for the defined element type.","element_info_property($type, $property_name, $default = NULL)"
"element_properties","Gets properties of a structured array element (keys beginning with &#039;#&#039;).","element_properties($element)"
"element_property","Checks if the key is a property.","element_property($key)"
"element_set_attributes","Sets HTML attributes based on element properties.","element_set_attributes(array &$element, array $map)"
"element_sort","Function used by uasort to sort structured arrays by weight.","element_sort($a, $b)"
"element_sort_by_title","Array sorting callback; sorts elements by title.","element_sort_by_title($a, $b)"
"element_validate_integer","Form element validation handler for integer elements.","element_validate_integer($element, &$form_state)"
"element_validate_integer_positive","Form element validation handler for integer elements that must be positive.","element_validate_integer_positive($element, &$form_state)"
"element_validate_number","Form element validation handler for number elements.","element_validate_number($element, &$form_state)"
"entity_cache_test_dependency_entity_info","Implements hook_entity_info().","entity_cache_test_dependency_entity_info()"
"entity_cache_test_watchdog","Implements hook_watchdog().","entity_cache_test_watchdog($log_entry)"
"entity_create_stub_entity","Helper function to assemble an object structure with initial ids.","entity_create_stub_entity($entity_type, $ids)"
"entity_crud_hook_test_comment_delete","Implements hook_comment_delete().","entity_crud_hook_test_comment_delete()"
"entity_crud_hook_test_comment_insert","Implements hook_comment_insert().","entity_crud_hook_test_comment_insert()"
"entity_crud_hook_test_comment_load","Implements hook_comment_load().","entity_crud_hook_test_comment_load()"
"entity_crud_hook_test_comment_presave","Implements hook_comment_presave().","entity_crud_hook_test_comment_presave()"
"entity_crud_hook_test_comment_update","Implements hook_comment_update().","entity_crud_hook_test_comment_update()"
"entity_crud_hook_test_entity_delete","Implements hook_entity_delete().","entity_crud_hook_test_entity_delete($entity, $type)"
"entity_crud_hook_test_entity_insert","Implements hook_entity_insert().","entity_crud_hook_test_entity_insert($entity, $type)"
"entity_crud_hook_test_entity_load","Implements hook_entity_load().","entity_crud_hook_test_entity_load(array $entities, $type)"
"entity_crud_hook_test_entity_presave","Implements hook_entity_presave().","entity_crud_hook_test_entity_presave($entity, $type)"
"entity_crud_hook_test_entity_update","Implements hook_entity_update().","entity_crud_hook_test_entity_update($entity, $type)"
"entity_crud_hook_test_file_delete","Implements hook_file_delete().","entity_crud_hook_test_file_delete()"
"entity_crud_hook_test_file_insert","Implements hook_file_insert().","entity_crud_hook_test_file_insert()"
"entity_crud_hook_test_file_load","Implements hook_file_load().","entity_crud_hook_test_file_load()"
"entity_crud_hook_test_file_presave","Implements hook_file_presave().","entity_crud_hook_test_file_presave()"
"entity_crud_hook_test_file_update","Implements hook_file_update().","entity_crud_hook_test_file_update()"
"entity_crud_hook_test_node_delete","Implements hook_node_delete().","entity_crud_hook_test_node_delete()"
"entity_crud_hook_test_node_insert","Implements hook_node_insert().","entity_crud_hook_test_node_insert()"
"entity_crud_hook_test_node_load","Implements hook_node_load().","entity_crud_hook_test_node_load()"
"entity_crud_hook_test_node_presave","Implements hook_node_presave().","entity_crud_hook_test_node_presave()"
"entity_crud_hook_test_node_update","Implements hook_node_update().","entity_crud_hook_test_node_update()"
"entity_crud_hook_test_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","entity_crud_hook_test_taxonomy_term_delete()"
"entity_crud_hook_test_taxonomy_term_insert","Implements hook_taxonomy_term_insert().","entity_crud_hook_test_taxonomy_term_insert()"
"entity_crud_hook_test_taxonomy_term_load","Implements hook_taxonomy_term_load().","entity_crud_hook_test_taxonomy_term_load()"
"entity_crud_hook_test_taxonomy_term_presave","Implements hook_taxonomy_term_presave().","entity_crud_hook_test_taxonomy_term_presave()"
"entity_crud_hook_test_taxonomy_term_update","Implements hook_taxonomy_term_update().","entity_crud_hook_test_taxonomy_term_update()"
"entity_crud_hook_test_taxonomy_vocabulary_delete","Implements hook_taxonomy_vocabulary_delete().","entity_crud_hook_test_taxonomy_vocabulary_delete()"
"entity_crud_hook_test_taxonomy_vocabulary_insert","Implements hook_taxonomy_vocabulary_insert().","entity_crud_hook_test_taxonomy_vocabulary_insert()"
"entity_crud_hook_test_taxonomy_vocabulary_load","Implements hook_taxonomy_vocabulary_load().","entity_crud_hook_test_taxonomy_vocabulary_load()"
"entity_crud_hook_test_taxonomy_vocabulary_presave","Implements hook_taxonomy_vocabulary_presave().","entity_crud_hook_test_taxonomy_vocabulary_presave()"
"entity_crud_hook_test_taxonomy_vocabulary_update","Implements hook_taxonomy_vocabulary_update().","entity_crud_hook_test_taxonomy_vocabulary_update()"
"entity_crud_hook_test_user_delete","Implements hook_user_delete().","entity_crud_hook_test_user_delete()"
"entity_crud_hook_test_user_insert","Implements hook_user_insert().","entity_crud_hook_test_user_insert()"
"entity_crud_hook_test_user_load","Implements hook_user_load().","entity_crud_hook_test_user_load()"
"entity_crud_hook_test_user_presave","Implements hook_user_presave().","entity_crud_hook_test_user_presave()"
"entity_crud_hook_test_user_update","Implements hook_user_update().","entity_crud_hook_test_user_update()"
"entity_extract_ids","Helper function to extract id, vid, and bundle name from an entity.","entity_extract_ids($entity_type, $entity)"
"entity_form_field_validate","Attaches field API validation to entity forms.","entity_form_field_validate($entity_type, $form, &$form_state)"
"entity_form_submit_build_entity","Copies submitted values to entity properties for simple entity forms.","entity_form_submit_build_entity($entity_type, $entity, $form, &$form_state)"
"entity_get_controller","Gets the entity controller for an entity type.","entity_get_controller($entity_type)"
"entity_get_info","Get the entity info array of an entity type.","entity_get_info($entity_type = NULL)"
"entity_info_cache_clear","Resets the cached information about entity types.","entity_info_cache_clear()"
"entity_label","Returns the label of an entity.","entity_label($entity_type, $entity)"
"entity_language","Returns the language of an entity.","entity_language($entity_type, $entity)"
"entity_load","Load entities from the database.","entity_load($entity_type, $ids = FALSE, $conditions = array(), $reset = FALSE)"
"entity_load_unchanged","Loads the unchanged, i.e. not modified, entity from the database.","entity_load_unchanged($entity_type, $id)"
"entity_prepare_view","Invoke hook_entity_prepare_view().","entity_prepare_view($entity_type, $entities, $langcode = NULL)"
"entity_query_access_test_menu","Implements hook_menu().","entity_query_access_test_menu()"
"entity_query_access_test_sample_query","Returns the results from an example EntityFieldQuery.","entity_query_access_test_sample_query($field_name)"
"entity_uri","Returns the URI elements of an entity.","entity_uri($entity_type, $entity)"
"entity_view_mode_prepare","Invoke hook_entity_view_mode_alter().","entity_view_mode_prepare($entity_type, $entities, $view_mode, $langcode = NULL)"
"error_displayable","Determines whether an error should be displayed.","error_displayable($error = NULL)"
"error_test_generate_warnings","Menu callback; generate warnings to test the error handler.","error_test_generate_warnings($collect_errors = FALSE)"
"error_test_menu","Implements hook_menu().","error_test_menu()"
"error_test_trigger_exception","Menu callback; trigger an exception to test the exception handler.","error_test_trigger_exception()"
"error_test_trigger_pdo_exception","Menu callback; trigger an exception to test the exception handler.","error_test_trigger_pdo_exception()"
"field_access","Determine whether the user has access to a given field.","field_access($op, $field, $entity_type, $entity = NULL, $account = NULL)"
"field_add_more_js","Ajax callback in response to a new empty widget being added to the form.","field_add_more_js($form, $form_state)"
"field_add_more_submit","Submit handler for the &quot;Add another item&quot; button of a field form.","field_add_more_submit($form, &$form_state)"
"field_associate_fields","Allows a module to update the database for fields and columns it controls.","field_associate_fields($module)"
"field_attach_create_bundle","Notify field.module that a new bundle was created.","field_attach_create_bundle($entity_type, $bundle)"
"field_attach_delete","Delete field data for an existing entity. This deletes all
revisions of field data for the entity.","field_attach_delete($entity_type, $entity)"
"field_attach_delete_bundle","Notify field.module the a bundle was deleted.","field_attach_delete_bundle($entity_type, $bundle)"
"field_attach_delete_revision","Delete field data for a single revision of an existing entity. The
passed entity must have a revision id attribute.","field_attach_delete_revision($entity_type, $entity)"
"field_attach_form","Add form elements for all fields for an entity to a form structure.","field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode = NULL, $options = array())"
"field_attach_form_validate","Perform field validation against form-submitted field values.","field_attach_form_validate($entity_type, $entity, $form, &$form_state, $options = array())"
"field_attach_insert","Save field data for a new entity.","field_attach_insert($entity_type, $entity)"
"field_attach_load","Loads fields for the current revisions of a group of entities.","field_attach_load($entity_type, $entities, $age = FIELD_LOAD_CURRENT, $options = array())"
"field_attach_load_revision","Load all fields for previous versions of a group of entities.","field_attach_load_revision($entity_type, $entities, $options = array())"
"field_attach_prepare_translation","Prepares an entity for translation.","field_attach_prepare_translation($entity_type, $entity, $langcode, $source_entity, $source_langcode)"
"field_attach_prepare_view","Prepare field data prior to display.","field_attach_prepare_view($entity_type, $entities, $view_mode, $langcode = NULL, $options = array())"
"field_attach_preprocess","Populate the template variables with the field values available for rendering.","field_attach_preprocess($entity_type, $entity, $element, &$variables)"
"field_attach_presave","Perform necessary operations just before fields data get saved.","field_attach_presave($entity_type, $entity)"
"field_attach_rename_bundle","Notify field.module that a bundle was renamed.","field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)"
"field_attach_submit","Perform necessary operations on field data submitted by a form.","field_attach_submit($entity_type, $entity, $form, &$form_state, $options = array())"
"field_attach_update","Save field data for an existing entity.","field_attach_update($entity_type, $entity)"
"field_attach_validate","Perform field validation against the field data in an entity.","field_attach_validate($entity_type, $entity, $options = array())"
"field_attach_view","Returns a renderable array for the fields on an entity.","field_attach_view($entity_type, $entity, $view_mode, $langcode = NULL, $options = array())"
"field_available_languages","Collects the available languages for the given entity type and field.","field_available_languages($entity_type, $field)"
"field_behaviors_widget","Determines the behavior of a widget with respect to an operation.","field_behaviors_widget($op, $instance)"
"field_bundle_settings","Gets or sets administratively defined bundle settings.","field_bundle_settings($entity_type, $bundle, $settings = NULL)"
"field_cache_clear","Clear the field info and field data caches.","field_cache_clear()"
"field_content_languages","Returns available content languages.","field_content_languages()"
"field_create_field","Creates a field.","field_create_field($field)"
"field_create_instance","Creates an instance of a field, binding it to a bundle.","field_create_instance($instance)"
"field_cron","Implements hook_cron().","field_cron()"
"field_default_extract_form_values","Extracts field values from submitted form values.","field_default_extract_form_values($entity_type, $entity, $field, $instance, $langcode, &$items, $form, &$form_state)"
"field_default_form","Creates a form element for a field and can populate it with a default value.","field_default_form($entity_type, $entity, $field, $instance, $langcode, $items, &$form, &$form_state, $get_delta = NULL)"
"field_default_form_errors","Transfer field-level validation errors to widgets.","field_default_form_errors($entity_type, $entity, $field, $instance, $langcode, $items, $form, &$form_state)"
"field_default_insert","Default field &#039;insert&#039; operation.","field_default_insert($entity_type, $entity, $field, $instance, $langcode, &$items)"
"field_default_prepare_translation","Copies source field values into the entity to be prepared.","field_default_prepare_translation($entity_type, $entity, $field, $instance, $langcode, &$items, $source_entity, $source_langcode)"
"field_default_prepare_view","Invokes hook_field_formatter_prepare_view() on the relevant formatters.","field_default_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $display)"
"field_default_submit",,"field_default_submit($entity_type, $entity, $field, $instance, $langcode, &$items, $form, &$form_state)"
"field_default_validate","Generic field validation handler.","field_default_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"field_default_view","Builds a renderable array for one field on one entity instance.","field_default_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"field_delete_field","Marks a field and its instances and data for deletion.","field_delete_field($field_name)"
"field_delete_instance","Marks a field instance and its data for deletion.","field_delete_instance($instance, $field_cleanup = TRUE)"
"field_extract_bundle","Helper function to extract the bundle name of from a bundle object.","field_extract_bundle($entity_type, $bundle)"
"field_extra_fields_get_display","Returns the display settings to use for pseudo-fields in a given view mode.","field_extra_fields_get_display($entity_type, $bundle, $view_mode)"
"field_filter_xss","Like filter_xss_admin(), but with a shorter list of allowed tags.","field_filter_xss($string)"
"field_flush_caches","Implements hook_flush_caches().","field_flush_caches()"
"field_form_element_after_build","#after_build callback for field elements in a form.","field_form_element_after_build($element, &$form_state)"
"field_form_get_state","Retrieves processing information about a field from $form_state.","field_form_get_state($parents, $field_name, $langcode, &$form_state)"
"field_form_set_state","Stores processing information about a field in $form_state.","field_form_set_state($parents, $field_name, $langcode, &$form_state, $field_state)"
"field_get_default_value","Helper function to get the default value for a field on an entity.","field_get_default_value($entity_type, $entity, $field, $instance, $langcode = NULL)"
"field_get_display","Returns the display settings to use for an instance in a given view mode.","field_get_display($instance, $view_mode, $entity)"
"field_get_items","Returns the field items in the language they currently would be displayed.","field_get_items($entity_type, $entity, $field_name, $langcode = NULL)"
"field_has_data","Determine whether a field has any data.","field_has_data($field)"
"field_has_translation_handler","Checks if a module is registered as a translation handler for a given entity.","field_has_translation_handler($entity_type, $handler = NULL)"
"field_help","Implements hook_help().","field_help($path, $arg)"
"field_info_bundles","Returns information about existing bundles.","field_info_bundles($entity_type = NULL)"
"field_info_cache_clear","Clears the field info cache without clearing the field data cache.","field_info_cache_clear()"
"field_info_extra_fields","Returns a list and settings of pseudo-field elements in a given bundle.","field_info_extra_fields($entity_type, $bundle, $context)"
"field_info_field","Returns data about an individual field, given a field name.","field_info_field($field_name)"
"field_info_fields","Returns all field definitions.","field_info_fields()"
"field_info_field_by_id","Returns data about an individual field, given a field ID.","field_info_field_by_id($field_id)"
"field_info_field_by_ids","Returns the same data as field_info_field_by_id() for every field.","field_info_field_by_ids()"
"field_info_field_map","Returns a lightweight map of fields across bundles.","field_info_field_map()"
"field_info_field_settings","Returns a field type&#039;s default settings.","field_info_field_settings($type)"
"field_info_field_types","Returns information about field types from hook_field_info().","field_info_field_types($field_type = NULL)"
"field_info_formatter_settings","Returns a field formatter&#039;s default settings.","field_info_formatter_settings($type)"
"field_info_formatter_types","Returns information about field formatters from hook_field_formatter_info().","field_info_formatter_types($formatter_type = NULL)"
"field_info_instance","Returns an array of instance data for a specific field and bundle.","field_info_instance($entity_type, $field_name, $bundle_name)"
"field_info_instances","Retrieves information about field instances.","field_info_instances($entity_type = NULL, $bundle_name = NULL)"
"field_info_instance_settings","Returns a field type&#039;s default instance settings.","field_info_instance_settings($type)"
"field_info_max_weight","Returns the maximum weight of all the components in an entity.","field_info_max_weight($entity_type, $bundle, $context)"
"field_info_storage_settings","Returns a field storage type&#039;s default settings.","field_info_storage_settings($type)"
"field_info_storage_types","Returns information about field storage from hook_field_storage_info().","field_info_storage_types($storage_type = NULL)"
"field_info_widget_settings","Returns a field widget&#039;s default settings.","field_info_widget_settings($type)"
"field_info_widget_types","Returns information about field widgets from hook_field_widget_info().","field_info_widget_types($widget_type = NULL)"
"field_is_translatable","Checks whether a field has language support.","field_is_translatable($entity_type, $field)"
"field_language","Returns the display language for the fields attached to the given entity.","field_language($entity_type, $entity, $field_name = NULL, $langcode = NULL)"
"field_modules_disabled","Implements hook_modules_disabled().","field_modules_disabled($modules)"
"field_modules_enabled","Implements hook_modules_enabled().","field_modules_enabled($modules)"
"field_multilingual_settings_changed","Implements hook_multilingual_settings_changed().","field_multilingual_settings_changed()"
"field_multiple_value_form","Special handling to create form elements for multiple values.","field_multiple_value_form($field, $instance, $langcode, $items, &$form, &$form_state)"
"field_purge_batch","Purges a batch of deleted Field API data, instances, or fields.","field_purge_batch($batch_size)"
"field_purge_data","Purges the field data for a single field on a single pseudo-entity.","field_purge_data($entity_type, $entity, $field, $instance)"
"field_purge_field","Purges a field record from the database.","field_purge_field($field)"
"field_purge_instance","Purges a field instance record from the database.","field_purge_instance($instance)"
"field_read_field","Reads a single field record directly from the database.","field_read_field($field_name, $include_additional = array())"
"field_read_fields","Reads in fields that match an array of conditions.","field_read_fields($params = array(), $include_additional = array())"
"field_read_instance","Reads a single instance record from the database.","field_read_instance($entity_type, $field_name, $bundle, $include_additional = array())"
"field_read_instances","Reads in field instances that match an array of conditions.","field_read_instances($params = array(), $include_additional = array())"
"field_schema","Implements hook_schema().","field_schema()"
"field_sql_storage_field_attach_rename_bundle","Implements hook_field_attach_rename_bundle().","field_sql_storage_field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)"
"field_sql_storage_field_storage_create_field","Implements hook_field_storage_create_field().","field_sql_storage_field_storage_create_field($field)"
"field_sql_storage_field_storage_delete","Implements hook_field_storage_delete().","field_sql_storage_field_storage_delete($entity_type, $entity, $fields)"
"field_sql_storage_field_storage_delete_field","Implements hook_field_storage_delete_field().","field_sql_storage_field_storage_delete_field($field)"
"field_sql_storage_field_storage_delete_instance","Implements hook_field_storage_delete_instance().","field_sql_storage_field_storage_delete_instance($instance)"
"field_sql_storage_field_storage_delete_revision","Implements hook_field_storage_delete_revision().","field_sql_storage_field_storage_delete_revision($entity_type, $entity, $fields)"
"field_sql_storage_field_storage_details","Implements hook_field_storage_details().","field_sql_storage_field_storage_details($field)"
"field_sql_storage_field_storage_info","Implements hook_field_storage_info().","field_sql_storage_field_storage_info()"
"field_sql_storage_field_storage_load","Implements hook_field_storage_load().","field_sql_storage_field_storage_load($entity_type, $entities, $age, $fields, $options)"
"field_sql_storage_field_storage_purge","Implements hook_field_storage_purge().","field_sql_storage_field_storage_purge($entity_type, $entity, $field, $instance)"
"field_sql_storage_field_storage_purge_field","Implements hook_field_storage_purge_field().","field_sql_storage_field_storage_purge_field($field)"
"field_sql_storage_field_storage_query","Implements hook_field_storage_query().","field_sql_storage_field_storage_query(EntityFieldQuery $query)"
"field_sql_storage_field_storage_update_field","Implements hook_field_storage_update_field().","field_sql_storage_field_storage_update_field($field, $prior_field, $has_data)"
"field_sql_storage_field_storage_write","Implements hook_field_storage_write().","field_sql_storage_field_storage_write($entity_type, $entity, $op, $fields)"
"field_sql_storage_field_update_forbid","Implements hook_field_update_forbid().","field_sql_storage_field_update_forbid($field, $prior_field, $has_data)"
"field_sql_storage_help","Implements hook_help().","field_sql_storage_help($path, $arg)"
"field_sql_storage_schema","Implements hook_schema().","field_sql_storage_schema()"
"field_sql_storage_update_7000","Field SQL storage update version placeholder.","field_sql_storage_update_7000()"
"field_sql_storage_update_7001","Remove the field_config_entity_type table and store &#039;entity_type&#039; strings.","field_sql_storage_update_7001(&$sandbox)"
"field_sql_storage_update_7002","Fix primary keys in field revision data tables.","field_sql_storage_update_7002()"
"field_sync_field_status","Refreshes the &#039;active&#039; and &#039;storage_active&#039; columns for fields.","field_sync_field_status()"
"field_system_info_alter","Implements hook_system_info_alter().","field_system_info_alter(&$info, $file, $type)"
"field_test_create_bundle","Creates a new bundle for test_entity entities.","field_test_create_bundle($bundle, $text = NULL)"
"field_test_create_stub_entity","Creates a basic test_entity entity.","field_test_create_stub_entity($id = 1, $vid = 1, $bundle = 'test_bundle', $label = '')"
"field_test_default_value","Sample &#039;default value&#039; callback.","field_test_default_value($entity_type, $entity, $field, $instance)"
"field_test_delete_bundle","Deletes a bundle for test_entity objects.","field_test_delete_bundle($bundle)"
"field_test_dummy_field_storage_query","Pseudo-implements hook_field_storage_query().","field_test_dummy_field_storage_query(EntityFieldQuery $query)"
"field_test_entity_add","Menu callback: displays the &#039;Add new test_entity&#039; form.","field_test_entity_add($fttype)"
"field_test_entity_edit","Menu callback: displays the &#039;Edit exiisting test_entity&#039; form.","field_test_entity_edit($entity)"
"field_test_entity_form","Test_entity form.","field_test_entity_form($form, &$form_state, $entity, $add = FALSE)"
"field_test_entity_form_submit","Submit handler for field_test_entity_form().","field_test_entity_form_submit($form, &$form_state)"
"field_test_entity_form_submit_build_test_entity","Updates the form state&#039;s entity by processing this submission&#039;s values.","field_test_entity_form_submit_build_test_entity($form, &$form_state)"
"field_test_entity_form_validate","Validate handler for field_test_entity_form().","field_test_entity_form_validate($form, &$form_state)"
"field_test_entity_info","Implements hook_entity_info().","field_test_entity_info()"
"field_test_entity_info_alter","Implements hook_entity_info_alter().","field_test_entity_info_alter(&$entity_info)"
"field_test_entity_info_translatable","Helper function to enable entity translations.","field_test_entity_info_translatable($entity_type = NULL, $translatable = NULL)"
"field_test_entity_label_callback","Implements callback_entity_info_label().","field_test_entity_label_callback($entity)"
"field_test_entity_nested_form","Form combining two separate entities.","field_test_entity_nested_form($form, &$form_state, $entity_1, $entity_2)"
"field_test_entity_nested_form_submit","Submit handler for field_test_entity_nested_form().","field_test_entity_nested_form_submit($form, &$form_state)"
"field_test_entity_nested_form_validate","Validate handler for field_test_entity_nested_form().","field_test_entity_nested_form_validate($form, &$form_state)"
"field_test_entity_query_alter","Implements hook_entity_query_alter().","field_test_entity_query_alter(&$query)"
"field_test_entity_save","Saves a test_entity.","field_test_entity_save(&$entity)"
"field_test_entity_test_load","Loads a test_entity.","field_test_entity_test_load($ftid, $ftvid = NULL)"
"field_test_field_access","Implements hook_field_access().","field_test_field_access($op, $field, $entity_type, $entity, $account)"
"field_test_field_attach_create_bundle","Implements hook_field_attach_create_bundle().","field_test_field_attach_create_bundle($bundle)"
"field_test_field_attach_delete_bundle","Implements hook_field_attach_delete_bundle().","field_test_field_attach_delete_bundle($entity_type, $bundle, $instances)"
"field_test_field_attach_rename_bundle","Implements hook_field_attach_rename_bundle().","field_test_field_attach_rename_bundle($bundle_old, $bundle_new)"
"field_test_field_attach_view_alter","Implements hook_field_attach_view_alter().","field_test_field_attach_view_alter(&$output, $context)"
"field_test_field_available_languages_alter","Implements hook_field_available_languages_alter().","field_test_field_available_languages_alter(&$languages, $context)"
"field_test_field_create_field","Memorize calls to hook_field_create_field().","field_test_field_create_field($field)"
"field_test_field_delete","Implements hook_field_delete().","field_test_field_delete($entity_type, $entity, $field, $instance, $items)"
"field_test_field_formatter_info","Implements hook_field_formatter_info().","field_test_field_formatter_info()"
"field_test_field_formatter_prepare_view","Implements hook_field_formatter_prepare_view().","field_test_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays)"
"field_test_field_formatter_settings_form","Implements hook_field_formatter_settings_form().","field_test_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)"
"field_test_field_formatter_settings_summary","Implements hook_field_formatter_settings_summary().","field_test_field_formatter_settings_summary($field, $instance, $view_mode)"
"field_test_field_formatter_view","Implements hook_field_formatter_view().","field_test_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"field_test_field_info","Implements hook_field_info().","field_test_field_info()"
"field_test_field_insert","Implements hook_field_insert().","field_test_field_insert($entity_type, $entity, $field, $instance, $items)"
"field_test_field_instance_settings_form","Implements hook_field_instance_settings_form().","field_test_field_instance_settings_form($field, $instance)"
"field_test_field_is_empty","Implements hook_field_is_empty().","field_test_field_is_empty($item, $field)"
"field_test_field_language_alter","Implements hook_field_language_alter().","field_test_field_language_alter(&$display_language, $context)"
"field_test_field_load","Implements hook_field_load().","field_test_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age)"
"field_test_field_schema","Implements hook_field_schema().","field_test_field_schema($field)"
"field_test_field_settings_form","Implements hook_field_settings_form().","field_test_field_settings_form($field, $instance, $has_data)"
"field_test_field_storage_create_field","Implements hook_field_storage_create_field().","field_test_field_storage_create_field($field)"
"field_test_field_storage_delete","Implements hook_field_storage_delete().","field_test_field_storage_delete($entity_type, $entity, $fields)"
"field_test_field_storage_delete_field","Implements hook_field_storage_delete_field().","field_test_field_storage_delete_field($field)"
"field_test_field_storage_delete_instance","Implements hook_field_storage_delete_instance().","field_test_field_storage_delete_instance($instance)"
"field_test_field_storage_delete_revision","Implements hook_field_storage_delete_revision().","field_test_field_storage_delete_revision($entity_type, $entity, $fields)"
"field_test_field_storage_details","Implements hook_field_storage_details().","field_test_field_storage_details($field)"
"field_test_field_storage_details_alter","Implements hook_field_storage_details_alter().","field_test_field_storage_details_alter(&$details, $field)"
"field_test_field_storage_info","Implements hook_field_storage_info().","field_test_field_storage_info()"
"field_test_field_storage_load","Implements hook_field_storage_load().","field_test_field_storage_load($entity_type, $entities, $age, $fields, $options)"
"field_test_field_storage_purge","Implements hook_field_storage_purge().","field_test_field_storage_purge($entity_type, $entity, $field, $instance)"
"field_test_field_storage_query","Implements hook_field_storage_query().","field_test_field_storage_query($field_id, $conditions, $count, &$cursor = NULL, $age)"
"field_test_field_storage_write","Implements hook_field_storage_write().","field_test_field_storage_write($entity_type, $entity, $op, $fields)"
"field_test_field_test_op","Generic op to test _field_invoke behavior.","field_test_field_test_op($entity_type, $entity, $field, $instance, $langcode, &$items)"
"field_test_field_test_op_multiple","Generic op to test _field_invoke_multiple behavior.","field_test_field_test_op_multiple($entity_type, $entities, $field, $instances, $langcode, &$items)"
"field_test_field_update","Implements hook_field_update().","field_test_field_update($entity_type, $entity, $field, $instance, $items)"
"field_test_field_update_forbid","Implements hook_field_update_forbid().","field_test_field_update_forbid($field, $prior_field, $has_data)"
"field_test_field_validate","Implements hook_field_validate().","field_test_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"field_test_field_widget_error","Implements hook_field_widget_error().","field_test_field_widget_error($element, $error, $form, &$form_state)"
"field_test_field_widget_form","Implements hook_field_widget_form().","field_test_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"field_test_field_widget_form_alter","Implements hook_field_widget_form_alter().","field_test_field_widget_form_alter(&$element, &$form_state, $context)"
"field_test_field_widget_info","Implements hook_field_widget_info().","field_test_field_widget_info()"
"field_test_field_widget_properties_alter","Implements hook_field_widget_properties_alter().","field_test_field_widget_properties_alter(&$widget, $context)"
"field_test_field_widget_properties_user_alter","Implements hook_field_widget_properties_ENTITY_TYPE_alter().","field_test_field_widget_properties_user_alter(&$widget, $context)"
"field_test_field_widget_settings_form","Implements hook_field_widget_settings_form().","field_test_field_widget_settings_form($field, $instance)"
"field_test_install","Implements hook_install().","field_test_install()"
"field_test_memorize","Store and retrieve keyed data for later verification by unit tests.","field_test_memorize($key = NULL, $value = NULL)"
"field_test_menu","Implements hook_menu().","field_test_menu()"
"field_test_permission","Implements hook_permission().","field_test_permission()"
"field_test_query_efq_table_prefixing_test_alter","Implements hook_query_TAG_alter() for tag &#039;efq_table_prefixing_test&#039;.","field_test_query_efq_table_prefixing_test_alter(&$query)"
"field_test_query_store_global_test_query_alter","Implements hook_query_TAG_alter() for tag &#039;store_global_test_query&#039;.","field_test_query_store_global_test_query_alter($query)"
"field_test_rename_bundle","Renames a bundle for test_entity entities.","field_test_rename_bundle($bundle_old, $bundle_new)"
"field_test_schema","Implements hook_schema().","field_test_schema()"
"field_test_widget_multiple_validate","Form element validation handler for &#039;test_field_widget_multiple&#039; widget.","field_test_widget_multiple_validate($element, &$form_state)"
"field_theme","Implements hook_theme().","field_theme()"
"field_ui_default_value_widget","Builds the default value fieldset for a given field instance.","field_ui_default_value_widget($field, $instance, &$form, &$form_state)"
"field_ui_display_overview_form","Form constructor for the field display settings for a given view mode.","field_ui_display_overview_form($form, &$form_state, $entity_type, $bundle, $view_mode)"
"field_ui_display_overview_form_submit","Form submission handler for field_ui_display_overview_form().","field_ui_display_overview_form_submit($form, &$form_state)"
"field_ui_display_overview_multistep_js","Ajax handler for multistep buttons on the &#039;Manage display&#039; screen.","field_ui_display_overview_multistep_js($form, &$form_state)"
"field_ui_display_overview_multistep_submit","Form submission handler for buttons in field_ui_display_overview_form().","field_ui_display_overview_multistep_submit($form, &$form_state)"
"field_ui_display_overview_row_region","Returns the region to which a row in the &#039;Manage display&#039; screen belongs.","field_ui_display_overview_row_region($row)"
"field_ui_element_info","Implements hook_element_info().","field_ui_element_info()"
"field_ui_existing_field_options","Returns an array of existing fields to be added to a bundle.","field_ui_existing_field_options($entity_type, $bundle)"
"field_ui_fields_list","Menu callback; lists all defined fields for quick reference.","field_ui_fields_list()"
"field_ui_field_attach_create_bundle","Implements hook_field_attach_create_bundle().","field_ui_field_attach_create_bundle($entity_type, $bundle)"
"field_ui_field_attach_rename_bundle","Implements hook_field_attach_rename_bundle().","field_ui_field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)"
"field_ui_field_delete_form","Form constructor for removing a field instance from a bundle.","field_ui_field_delete_form($form, &$form_state, $instance)"
"field_ui_field_delete_form_submit","Form submission handler for field_ui_field_delete_form().","field_ui_field_delete_form_submit($form, &$form_state)"
"field_ui_field_edit_form","Form constructor for the field instance settings form.","field_ui_field_edit_form($form, &$form_state, $instance)"
"field_ui_field_edit_form_submit","Form submission handler for field_ui_field_edit_form().","field_ui_field_edit_form_submit($form, &$form_state)"
"field_ui_field_edit_form_validate","Form validation handler for field_ui_field_edit_form().","field_ui_field_edit_form_validate($form, &$form_state)"
"field_ui_field_edit_instance_pre_render","Pre-render function for field instance settings.","field_ui_field_edit_instance_pre_render($element)"
"field_ui_field_overview_form","Form constructor for the &#039;Manage fields&#039; form of a bundle.","field_ui_field_overview_form($form, &$form_state, $entity_type, $bundle)"
"field_ui_field_overview_form_submit","Form submission handler for field_ui_field_overview_form().","field_ui_field_overview_form_submit($form, &$form_state)"
"field_ui_field_overview_form_validate","Form validation handler for field_ui_field_overview_form().","field_ui_field_overview_form_validate($form, &$form_state)"
"field_ui_field_overview_row_region","Returns the region to which a row in the &#039;Manage fields&#039; screen belongs.","field_ui_field_overview_row_region($row)"
"field_ui_field_settings_form","Form constructor for the field settings edit page.","field_ui_field_settings_form($form, &$form_state, $instance)"
"field_ui_field_settings_form_submit","Form submission handler for field_ui_field_settings_form().","field_ui_field_settings_form_submit($form, &$form_state)"
"field_ui_field_type_options","Returns an array of field_type options.","field_ui_field_type_options()"
"field_ui_formatter_options","Returns an array of formatter options for a field type.","field_ui_formatter_options($field_type = NULL)"
"field_ui_form_node_type_form_alter","Implements hook_form_FORM_ID_alter().","field_ui_form_node_type_form_alter(&$form, $form_state)"
"field_ui_form_node_type_form_submit","Form submission handler for the &#039;Save and add fields&#039; button.","field_ui_form_node_type_form_submit($form, &$form_state)"
"field_ui_get_destinations","Extracts next redirect path from an array of multiple destinations.","field_ui_get_destinations($destinations)"
"field_ui_help","Implements hook_help().","field_ui_help($path, $arg)"
"field_ui_inactive_instances","Identifies inactive fields within a bundle.","field_ui_inactive_instances($entity_type, $bundle_name = NULL)"
"field_ui_inactive_message","Displays a message listing the inactive fields of a given bundle.","field_ui_inactive_message($entity_type, $bundle)"
"field_ui_menu","Implements hook_menu().","field_ui_menu()"
"field_ui_menu_load","Menu loader; Load a field instance based on field and bundle name.","field_ui_menu_load($field_name, $entity_type, $bundle_name, $bundle_pos, $map)"
"field_ui_menu_title","Menu title callback.","field_ui_menu_title($instance)"
"field_ui_next_destination","Returns the next redirect path in a multipage sequence.","field_ui_next_destination($entity_type, $bundle)"
"field_ui_table_pre_render","Pre-render callback for field_ui_table elements.","field_ui_table_pre_render($elements)"
"field_ui_theme","Implements hook_theme().","field_ui_theme()"
"field_ui_widget_type_form","Form constructor for the widget selection form.","field_ui_widget_type_form($form, &$form_state, $instance)"
"field_ui_widget_type_form_submit","Form submission handler for field_ui_widget_type_form().","field_ui_widget_type_form_submit($form, &$form_state)"
"field_ui_widget_type_options","Returns an array of widget type options for a field type.","field_ui_widget_type_options($field_type = NULL, $by_label = FALSE)"
"field_update_7000","Field update version placeholder.","field_update_7000()"
"field_update_7001","Fix fields definitions created during the d6 to d7 upgrade path.","field_update_7001()"
"field_update_7002","Split the all-inclusive field_bundle_settings variable per bundle.","field_update_7002()"
"field_update_7003","Add the FieldInfo class to the class registry.","field_update_7003()"
"field_update_field","Updates a field.","field_update_field($field)"
"field_update_instance","Updates an instance of a field.","field_update_instance($instance)"
"field_valid_language","Ensures that a given language code is valid.","field_valid_language($langcode, $default = TRUE)"
"field_view_field","Returns a renderable array for the value of a single field in an entity.","field_view_field($entity_type, $entity, $field_name, $display = array(), $langcode = NULL)"
"field_view_mode_settings","Returns view mode settings in a given bundle.","field_view_mode_settings($entity_type, $bundle)"
"field_view_value","Returns a renderable array for a single field value.","field_view_value($entity_type, $entity, $field_name, $item, $display = array(), $langcode = NULL)"
"field_widget_field","Retrieves the field definition for a widget&#039;s helper callbacks.","field_widget_field($element, $form_state)"
"field_widget_instance","Retrieves the instance definition array for a widget&#039;s helper callbacks.","field_widget_instance($element, $form_state)"
"file_ajax_progress","Menu callback for upload progress.","file_ajax_progress($key)"
"file_ajax_upload","Menu callback; Shared Ajax callback for file uploads and deletions.","file_ajax_upload()"
"file_build_uri","Constructs a URI to Drupal&#039;s default files location given a relative path.","file_build_uri($path)"
"file_copy","Copies a file to a new location and adds a file record to the database.","file_copy(stdClass $source, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_create_filename","Creates a full file path from a directory and filename.","file_create_filename($basename, $directory)"
"file_create_htaccess","Creates a .htaccess file in the given directory.","file_create_htaccess($directory, $private = TRUE, $force_overwrite = FALSE)"
"file_create_url","Creates a web-accessible URL for a stream to an external or local file.","file_create_url($uri)"
"file_default_mimetype_mapping","Default MIME extension mapping.","file_default_mimetype_mapping()"
"file_default_scheme","Gets the default file stream implementation.","file_default_scheme()"
"file_delete","Deletes a file and its database record.","file_delete(stdClass $file, $force = FALSE)"
"file_destination","Determines the destination path for a file.","file_destination($destination, $replace)"
"file_directory_temp","Gets the path of system-appropriate temporary directory.","file_directory_temp()"
"file_download","Menu handler for private file transfers.","file_download()"
"file_download_access","Checks that the current user has access to a particular file.","file_download_access($uri)"
"file_download_headers","Retrieves headers for a private file download.","file_download_headers($uri)"
"file_element_info","Implements hook_element_info().","file_element_info()"
"file_ensure_htaccess","Creates a .htaccess file in each Drupal files directory if it is missing.","file_ensure_htaccess()"
"file_field_delete","Implements hook_field_delete().","file_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items)"
"file_field_delete_file","Decrements the usage count for a file and attempts to delete it.","file_field_delete_file($item, $field, $entity_type, $id, $count = 1)"
"file_field_delete_revision","Implements hook_field_delete_revision().","file_field_delete_revision($entity_type, $entity, $field, $instance, $langcode, &$items)"
"file_field_displayed","Determines whether a file should be displayed when outputting field content.","file_field_displayed($item, $field)"
"file_field_formatter_info","Implements hook_field_formatter_info().","file_field_formatter_info()"
"file_field_formatter_view","Implements hook_field_formatter_view().","file_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"file_field_info","Implements hook_field_info().","file_field_info()"
"file_field_insert","Implements hook_field_insert().","file_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items)"
"file_field_instance_settings_form","Implements hook_field_instance_settings_form().","file_field_instance_settings_form($field, $instance)"
"file_field_is_empty","Implements hook_field_is_empty().","file_field_is_empty($item, $field)"
"file_field_load","Implements hook_field_load().","file_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age)"
"file_field_prepare_view","Implements hook_field_prepare_view().","file_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items)"
"file_field_presave","Implements hook_field_presave().","file_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)"
"file_field_schema","Implements hook_field_schema().","file_field_schema($field)"
"file_field_settings_form","Implements hook_field_settings_form().","file_field_settings_form($field, $instance, $has_data)"
"file_field_update","Implements hook_field_update().","file_field_update($entity_type, $entity, $field, $instance, $langcode, &$items)"
"file_field_widget_form","Implements hook_field_widget_form().","file_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"file_field_widget_info","Implements hook_field_widget_info().","file_field_widget_info()"
"file_field_widget_process","An element #process callback for the file_generic field type.","file_field_widget_process($element, &$form_state, $form)"
"file_field_widget_process_multiple","An element #process callback for a group of file_generic fields.","file_field_widget_process_multiple($element, &$form_state, $form)"
"file_field_widget_settings_form","Implements hook_field_widget_settings_form().","file_field_widget_settings_form($field, $instance)"
"file_field_widget_submit","Form submission handler for upload/remove button of file_field_widget_form().","file_field_widget_submit($form, &$form_state)"
"file_field_widget_upload_validators","Retrieves the upload validators for a file field.","file_field_widget_upload_validators($field, $instance)"
"file_field_widget_uri","Determines the URI for a file field instance.","file_field_widget_uri($field, $instance, $data = array())"
"file_field_widget_value","The #value_callback for the file_generic field element.","file_field_widget_value($element, $input = FALSE, $form_state)"
"file_file_delete","Implements hook_file_delete().","file_file_delete($file)"
"file_file_download","Implements hook_file_download().","file_file_download($uri, $field_type = 'file')"
"file_get_content_headers","Examines a file object and returns appropriate content headers for download.","file_get_content_headers($file)"
"file_get_file_references","Retrieves a list of references to a file.","file_get_file_references($file, $field = NULL, $age = FIELD_LOAD_REVISION, $field_type = 'file')"
"file_get_mimetype","Determines an Internet Media Type or MIME type from a filename.","file_get_mimetype($uri, $mapping = NULL)"
"file_get_stream_wrappers","Provides Drupal stream wrapper registry.","file_get_stream_wrappers($filter = STREAM_WRAPPERS_ALL)"
"file_help","Implements hook_help().","file_help($path, $arg)"
"file_htaccess_lines","Returns the standard .htaccess lines that Drupal writes to file directories.","file_htaccess_lines($private = TRUE)"
"file_icon_map","Determines the generic icon MIME package based on a file&#039;s MIME type.","file_icon_map($file)"
"file_icon_path","Creates a path to the icon for a file object.","file_icon_path($file, $icon_directory = NULL)"
"file_icon_url","Creates a URL to the icon for a file object.","file_icon_url($file, $icon_directory = NULL)"
"file_load","Loads a single file object from the database.","file_load($fid)"
"file_load_multiple","Loads file objects from the database.","file_load_multiple($fids = array(), $conditions = array())"
"file_managed_file_pre_render","#pre_render callback to hide display of the upload or remove controls.","file_managed_file_pre_render($element)"
"file_managed_file_process","Process function to expand the managed_file element type.","file_managed_file_process($element, &$form_state, $form)"
"file_managed_file_save_upload","Saves any files that have been uploaded into a managed_file element.","file_managed_file_save_upload($element)"
"file_managed_file_submit","Form submission handler for upload / remove buttons of managed_file elements.","file_managed_file_submit($form, &$form_state)"
"file_managed_file_validate","An #element_validate callback for the managed_file element.","file_managed_file_validate(&$element, &$form_state)"
"file_managed_file_value","The #value_callback for a managed_file type element.","file_managed_file_value(&$element, $input = FALSE, $form_state = NULL)"
"file_menu","Implements hook_menu().","file_menu()"
"file_mimetype_mapping","Return an array of MIME extension mappings.","file_mimetype_mapping()"
"file_module_test_form","Form constructor for testing a &#039;managed_file&#039; element.","file_module_test_form($form, &$form_state, $tree = TRUE, $extended = FALSE, $default_fid = NULL)"
"file_module_test_form_submit","Form submission handler for file_module_test_form().","file_module_test_form_submit($form, &$form_state)"
"file_module_test_menu","Implements hook_menu().","file_module_test_menu()"
"file_move","Moves a file to a new location and update the file&#039;s database entry.","file_move(stdClass $source, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_munge_filename","Modifies a filename as needed for security purposes.","file_munge_filename($filename, $extensions, $alerts = TRUE)"
"file_prepare_directory","Checks that the directory exists and is writable.","file_prepare_directory(&$directory, $options = FILE_MODIFY_PERMISSIONS)"
"file_progress_implementation","Determines the preferred upload progress implementation.","file_progress_implementation()"
"file_requirements","Implements hook_requirements().","file_requirements($phase)"
"file_save","Saves a file object to the database.","file_save(stdClass $file)"
"file_save_data","Saves a file to the specified destination and creates a database entry.","file_save_data($data, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_save_upload","Saves a file upload to a new location.","file_save_upload($form_field_name, $validators = array(), $destination = FALSE, $replace = FILE_EXISTS_RENAME)"
"file_scan_directory","Finds all files that match a given mask in a given directory.","file_scan_directory($dir, $mask, $options = array(), $depth = 0)"
"file_space_used","Determines total disk space used by a single user or the whole filesystem.","file_space_used($uid = NULL, $status = FILE_STATUS_PERMANENT)"
"file_stream_wrapper_get_class","Returns the stream wrapper class name for a given scheme.","file_stream_wrapper_get_class($scheme)"
"file_stream_wrapper_get_instance_by_scheme","Returns a reference to the stream wrapper class responsible for a scheme.","file_stream_wrapper_get_instance_by_scheme($scheme)"
"file_stream_wrapper_get_instance_by_uri","Returns a reference to the stream wrapper class responsible for a given URI.","file_stream_wrapper_get_instance_by_uri($uri)"
"file_stream_wrapper_uri_normalize","Normalizes a URI by making it syntactically correct.","file_stream_wrapper_uri_normalize($uri)"
"file_stream_wrapper_valid_scheme","Checks that the scheme of a stream URI is valid.","file_stream_wrapper_valid_scheme($scheme)"
"file_test_file_copy","Implements hook_file_copy().","file_test_file_copy($file, $source)"
"file_test_file_delete","Implements hook_file_delete().","file_test_file_delete($file)"
"file_test_file_download","Implements hook_file_download().","file_test_file_download($uri)"
"file_test_file_insert","Implements hook_file_insert().","file_test_file_insert($file)"
"file_test_file_load","Implements hook_file_load().","file_test_file_load($files)"
"file_test_file_mimetype_mapping_alter","Implements hook_file_mimetype_mapping_alter().","file_test_file_mimetype_mapping_alter(&$mapping)"
"file_test_file_move","Implements hook_file_move().","file_test_file_move($file, $source)"
"file_test_file_scan_callback","Helper function for testing file_scan_directory().","file_test_file_scan_callback($filepath = NULL)"
"file_test_file_scan_callback_reset","Reset static variables used by file_test_file_scan_callback().","file_test_file_scan_callback_reset()"
"file_test_file_update","Implements hook_file_update().","file_test_file_update($file)"
"file_test_file_url_alter","Implements hook_file_url_alter().","file_test_file_url_alter(&$uri)"
"file_test_file_validate","Implements hook_file_validate().","file_test_file_validate($file)"
"file_test_get_all_calls","Get an array with the calls for all hooks.","file_test_get_all_calls()"
"file_test_get_calls","Get the arguments passed to invocation of a given hook since
file_test_reset() was last called.","file_test_get_calls($op)"
"file_test_menu","Implements hook_menu().","file_test_menu()"
"file_test_reset","Reset/initialize the history of calls to the file_* hooks.","file_test_reset()"
"file_test_set_return","Assign a return value for a given operation.","file_test_set_return($op, $value)"
"file_test_stream_wrappers","Implements hook_stream_wrappers().","file_test_stream_wrappers()"
"file_test_validator","Helper validator that returns the $errors parameter.","file_test_validator($file, $errors)"
"file_theme","Implements hook_theme().","file_theme()"
"file_transfer","Transfers a file to the client using HTTP.","file_transfer($uri, $headers)"
"file_unmanaged_copy","Copies a file to a new location without invoking the file API.","file_unmanaged_copy($source, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_unmanaged_delete","Deletes a file without database changes or hook invocations.","file_unmanaged_delete($path)"
"file_unmanaged_delete_recursive","Deletes all files and directories in the specified filepath recursively.","file_unmanaged_delete_recursive($path)"
"file_unmanaged_move","Moves a file to a new location without database changes or hook invocation.","file_unmanaged_move($source, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_unmanaged_save_data","Saves a string to the specified destination without invoking file API.","file_unmanaged_save_data($data, $destination = NULL, $replace = FILE_EXISTS_RENAME)"
"file_unmunge_filename","Undoes the effect of file_munge_filename().","file_unmunge_filename($filename)"
"file_upload_max_size","Determines the maximum file upload size by querying the PHP settings.","file_upload_max_size()"
"file_uri_scheme","Returns the scheme of a URI (e.g. a stream).","file_uri_scheme($uri)"
"file_uri_target","Returns the part of a URI after the schema.","file_uri_target($uri)"
"file_usage_add","Records that a module is using a file.","file_usage_add(stdClass $file, $module, $type, $id, $count = 1)"
"file_usage_delete","Removes a record to indicate that a module is no longer using a file.","file_usage_delete(stdClass $file, $module, $type = NULL, $id = NULL, $count = 1)"
"file_usage_list","Determines where a file is used.","file_usage_list(stdClass $file)"
"file_validate","Checks that a file meets the criteria specified by the validators.","file_validate(stdClass &$file, $validators = array())"
"file_validate_extensions","Checks that the filename ends with an allowed extension.","file_validate_extensions(stdClass $file, $extensions)"
"file_validate_image_resolution","Verifies that image dimensions are within the specified maximum and minimum.","file_validate_image_resolution(stdClass $file, $maximum_dimensions = 0, $minimum_dimensions = 0)"
"file_validate_is_image","Checks that the file is recognized by image_get_info() as an image.","file_validate_is_image(stdClass $file)"
"file_validate_name_length","Checks for files with names longer than we can store in the database.","file_validate_name_length(stdClass $file)"
"file_validate_size","Checks that the file&#039;s size is below certain limits.","file_validate_size(stdClass $file, $file_limit = 0, $user_limit = 0)"
"file_valid_uri","Determines whether the URI has a valid scheme for file API operations.","file_valid_uri($uri)"
"filter_access","Checks if a user has access to a particular text format.","filter_access($format, $account = NULL)"
"filter_admin_disable","Form constructor for the text format deletion confirmation form.","filter_admin_disable($form, &$form_state, $format)"
"filter_admin_disable_submit","Form submission handler for filter_admin_disable().","filter_admin_disable_submit($form, &$form_state)"
"filter_admin_format_form","Form constructor for the text format add/edit form.","filter_admin_format_form($form, &$form_state, $format)"
"filter_admin_format_form_submit","Form submission handler for filter_admin_format_form().","filter_admin_format_form_submit($form, &$form_state)"
"filter_admin_format_form_validate","Form validation handler for filter_admin_format_form().","filter_admin_format_form_validate($form, &$form_state)"
"filter_admin_format_page","Page callback: Displays the text format add/edit form.","filter_admin_format_page($format = NULL)"
"filter_admin_format_title","Displays a text format form title.","filter_admin_format_title($format)"
"filter_admin_overview","Page callback: Form constructor for a form to list and reorder text formats.","filter_admin_overview($form)"
"filter_admin_overview_submit","Form submission handler for filter_admin_overview().","filter_admin_overview_submit($form, &$form_state)"
"filter_default_format","Returns the ID of the default text format for a particular user.","filter_default_format($account = NULL)"
"filter_dom_load","Parses an HTML snippet and returns it as a DOM object.","filter_dom_load($text)"
"filter_dom_serialize","Converts a DOM object back to an HTML snippet.","filter_dom_serialize($dom_document)"
"filter_dom_serialize_escape_cdata_element","Adds comments around the &lt;!CDATA section in a dom element.","filter_dom_serialize_escape_cdata_element($dom_document, $dom_element, $comment_start = '//', $comment_end = '')"
"filter_element_info","Implements hook_element_info().","filter_element_info()"
"filter_fallback_format","Returns the ID of the fallback text format that all users have access to.","filter_fallback_format()"
"filter_fallback_format_title","Returns the title of the fallback text format.","filter_fallback_format_title()"
"filter_filter_info","Implements hook_filter_info().","filter_filter_info()"
"filter_formats","Retrieves a list of text formats, ordered by weight.","filter_formats($account = NULL)"
"filter_formats_reset","Resets the text format caches.","filter_formats_reset()"
"filter_format_allowcache","Checks if the text in a certain text format is allowed to be cached.","filter_format_allowcache($format_id)"
"filter_format_disable","Disables a text format.","filter_format_disable($format)"
"filter_format_exists","Determines if a text format exists.","filter_format_exists($format_id)"
"filter_format_load","Loads a text format object from the database.","filter_format_load($format_id)"
"filter_format_save","Saves a text format object to the database.","filter_format_save($format)"
"filter_form_access_denied","Render API callback: Hides the field value of &#039;text_format&#039; elements.","filter_form_access_denied($element)"
"filter_get_filters","Returns a list of all filters provided by modules.","filter_get_filters()"
"filter_get_formats_by_role","Retrieves a list of text formats that are allowed for a given role.","filter_get_formats_by_role($rid)"
"filter_get_roles_by_format","Retrieves a list of roles that are allowed to use a given text format.","filter_get_roles_by_format($format)"
"filter_help","Implements hook_help().","filter_help($path, $arg)"
"filter_install","Implements hook_install().","filter_install()"
"filter_list_format","Retrieves a list of filters for a given text format.","filter_list_format($format_id)"
"filter_menu","Implements hook_menu().","filter_menu()"
"filter_modules_disabled","Implements hook_modules_disabled().","filter_modules_disabled($modules)"
"filter_modules_enabled","Implements hook_modules_enabled().","filter_modules_enabled($modules)"
"filter_permission","Implements hook_permission().","filter_permission()"
"filter_permission_name","Returns the machine-readable permission name for a provided text format.","filter_permission_name($format)"
"filter_process_format","Expands an element into a base element with text format selector attached.","filter_process_format($element)"
"filter_schema","Implements hook_schema().","filter_schema()"
"filter_test_filter_format_disable","Implements hook_filter_format_disable().","filter_test_filter_format_disable($format)"
"filter_test_filter_format_insert","Implements hook_filter_format_insert().","filter_test_filter_format_insert($format)"
"filter_test_filter_format_update","Implements hook_filter_format_update().","filter_test_filter_format_update($format)"
"filter_test_filter_info","Implements hook_filter_info().","filter_test_filter_info()"
"filter_test_replace","Implements callback_filter_process().","filter_test_replace($text, $filter, $format, $langcode, $cache, $cache_id)"
"filter_theme","Implements hook_theme().","filter_theme()"
"filter_tips_long","Page callback: Displays a page with long filter tips.","filter_tips_long()"
"filter_update_7000","Upgrade the {filter_formats} table and rename it to {filter_format}.","filter_update_7000()"
"filter_update_7001","Break out &quot;escape HTML filter&quot; option to its own filter.","filter_update_7001()"
"filter_update_7003","Upgrade the {filter} table for core filters.","filter_update_7003()"
"filter_update_7005","Integrate text formats with the user permissions system.","filter_update_7005()"
"filter_update_7008","Grant usage of all text formats to user roles having the &#039;administer filters&#039; permission.","filter_update_7008()"
"filter_update_7009","Converts fields that store serialized variables from text to blob.","filter_update_7009()"
"filter_update_7010","Change {filter_format}.format and {filter}.format into varchar.","filter_update_7010()"
"filter_update_dependencies","Implements hook_update_dependencies().","filter_update_dependencies()"
"filter_xss","Filters HTML to prevent cross-site-scripting (XSS) vulnerabilities.","filter_xss($string, $allowed_tags = array('a', 'em', 'strong', 'cite', 'blockquote', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd'))"
"filter_xss_admin","Applies a very permissive XSS/HTML filter for admin-only use.","filter_xss_admin($string)"
"filter_xss_bad_protocol","Processes an HTML attribute value and strips dangerous protocols from URLs.","filter_xss_bad_protocol($string, $decode = TRUE)"
"fix_gpc_magic","Fixes double-escaping caused by &quot;magic quotes&quot; in some PHP installations.","fix_gpc_magic()"
"flood_clear_event","Makes the flood control mechanism forget an event for the current visitor.","flood_clear_event($name, $identifier = NULL)"
"flood_is_allowed","Checks whether a user is allowed to proceed with the specified event.","flood_is_allowed($name, $threshold, $window = 3600, $identifier = NULL)"
"flood_register_event","Registers an event for the current visitor to the flood control mechanism.","flood_register_event($name, $window = 3600, $identifier = NULL)"
"format_date","Formats a date, using a date type or a custom date format string.","format_date($timestamp, $type = 'medium', $format = '', $timezone = NULL, $langcode = NULL)"
"format_interval","Formats a time interval with the requested granularity.","format_interval($interval, $granularity = 2, $langcode = NULL)"
"format_plural","Formats a string containing a count of items.","format_plural($count, $singular, $plural, array $args = array(), array $options = array())"
"format_rss_channel","Formats an RSS channel.","format_rss_channel($title, $link, $description, $items, $langcode = NULL, $args = array())"
"format_rss_item","Formats a single RSS item.","format_rss_item($title, $link, $description, $args = array())"
"format_size","Generates a string representation for the given byte count.","format_size($size, $langcode = NULL)"
"format_string","Formats a string for HTML display by replacing variable placeholders.","format_string($string, array $args = array())"
"format_username","Format a username.","format_username($account)"
"format_xml_elements","Formats XML elements.","format_xml_elements($array)"
"form_builder","Builds and processes all elements in the structured form array.","form_builder($form_id, &$element, &$form_state)"
"form_clear_error","Clears all errors against all form elements made by form_set_error().","form_clear_error()"
"form_error","Flags an element as having an error.","form_error(&$element, $message = '')"
"form_execute_handlers","Executes custom validation and submission handlers for a given form.","form_execute_handlers($type, &$form, &$form_state)"
"form_get_cache","Fetches a form from cache.","form_get_cache($form_build_id, &$form_state)"
"form_get_error","Returns the error message filed against the given form element.","form_get_error($element)"
"form_get_errors","Returns an associative array of all errors.","form_get_errors()"
"form_get_options","Returns the indexes of a select element&#039;s options matching a given key.","form_get_options($element, $key)"
"form_label_test_form","A form for testing form labels and required marks.","form_label_test_form()"
"form_load_include","Ensures an include file is loaded whenever the form is processed.","form_load_include(&$form_state, $type, $module, $name = NULL)"
"form_options_flatten","Allows PHP array processing of multiple select options with the same value.","form_options_flatten($array)"
"form_pre_render_conditional_form_element","Adds form element theming to an element if its title or description is set.","form_pre_render_conditional_form_element($element)"
"form_pre_render_fieldset","Adds members of this group as actual elements for rendering.","form_pre_render_fieldset($element)"
"form_process_actions","Processes a form actions container element.","form_process_actions($element, &$form_state)"
"form_process_checkbox","Sets the #checked property of a checkbox element.","form_process_checkbox($element, $form_state)"
"form_process_checkboxes","Processes a checkboxes form element.","form_process_checkboxes($element)"
"form_process_container","Processes a container element.","form_process_container($element, &$form_state)"
"form_process_date","Expands a date element into year, month, and day select elements.","form_process_date($element)"
"form_process_fieldset","Arranges fieldsets into groups.","form_process_fieldset(&$element, &$form_state)"
"form_process_machine_name","Processes a machine-readable name form element.","form_process_machine_name($element, &$form_state)"
"form_process_password_confirm","Expand a password_confirm field into two text boxes.","form_process_password_confirm($element)"
"form_process_radios","Expands a radios element into individual radio elements.","form_process_radios($element)"
"form_process_select","Processes a select list form element.","form_process_select($element)"
"form_process_tableselect","Creates checkbox or radio elements to populate a tableselect table.","form_process_tableselect($element)"
"form_process_vertical_tabs","Creates a group formatted as vertical tabs.","form_process_vertical_tabs($element, &$form_state)"
"form_process_weight","Expands a weight element into a select element.","form_process_weight($element)"
"form_select_options","Converts an array of options into HTML, for use in select list form elements.","form_select_options($element, $choices = NULL)"
"form_set_cache","Stores a form in the cache.","form_set_cache($form_build_id, $form, $form_state)"
"form_set_error","Files an error against a form element.","form_set_error($name = NULL, $message = '', $limit_validation_errors = NULL)"
"form_set_value","Changes submitted form values during form validation.","form_set_value($element, $value, &$form_state)"
"form_state_defaults","Retrieves default values for the $form_state array.","form_state_defaults()"
"form_state_keys_no_cache","Returns an array of $form_state keys that shouldn&#039;t be cached.","form_state_keys_no_cache()"
"form_state_values_clean","Removes internal Form API elements and buttons from submitted form values.","form_state_values_clean(&$form_state)"
"form_storage_test_form_continue_submit","Form submit handler to continue multi-step form.","form_storage_test_form_continue_submit($form, &$form_state)"
"form_test_alter_form","Form builder for testing hook_form_alter() and hook_form_FORM_ID_alter().","form_test_alter_form($form, &$form_state)"
"form_test_checkboxes_radios","Form constructor to test expansion of #type checkboxes and radios.","form_test_checkboxes_radios($form, &$form_state, $customize = FALSE)"
"form_test_checkboxes_zero",,"form_test_checkboxes_zero($form, &$form_state, $json = TRUE)"
"form_test_checkbox_type_juggling",,"form_test_checkbox_type_juggling($form, $form_state, $default_value, $return_value)"
"form_test_clicked_button","Form builder to test button click detection.","form_test_clicked_button($form, &$form_state)"
"form_test_clicked_button_submit","Form submit handler for the form_test_clicked_button() form.","form_test_clicked_button_submit($form, &$form_state)"
"form_test_clicked_button_validate","Form validation handler for the form_test_clicked_button() form.","form_test_clicked_button_validate($form, &$form_state)"
"form_test_double_form","Menu callback returns two instances of the same form.","form_test_double_form()"
"form_test_element_validate_name","Form element validation handler for &#039;name&#039; in form_test_validate_form().","form_test_element_validate_name(&$element, &$form_state)"
"form_test_form_alter","Implements hook_form_alter().","form_test_form_alter(&$form, &$form_state, $form_id)"
"form_test_form_form_test_alter_form_alter","Implements hook_form_FORM_ID_alter().","form_test_form_form_test_alter_form_alter(&$form, &$form_state)"
"form_test_form_form_test_state_persist_alter","Implements hook_form_FORM_ID_alter().","form_test_form_form_test_state_persist_alter(&$form, &$form_state)"
"form_test_form_rebuild_preserve_values_form","Form builder for testing preservation of values during a rebuild.","form_test_form_rebuild_preserve_values_form($form, &$form_state)"
"form_test_form_rebuild_preserve_values_form_add_more","Button submit handler for form_test_form_rebuild_preserve_values_form().","form_test_form_rebuild_preserve_values_form_add_more($form, &$form_state)"
"form_test_form_rebuild_preserve_values_form_submit","Form submit handler for form_test_form_rebuild_preserve_values_form().","form_test_form_rebuild_preserve_values_form_submit($form, &$form_state)"
"form_test_form_state_values_clean_advanced_form","Form constructor for the form_state_values_clean() test.","form_test_form_state_values_clean_advanced_form($form, &$form_state)"
"form_test_form_state_values_clean_advanced_form_submit","Form submission handler for form_test_form_state_values_clean_advanced_form().","form_test_form_state_values_clean_advanced_form_submit($form, &$form_state)"
"form_test_form_state_values_clean_form","Form builder for form_state_values_clean() test.","form_test_form_state_values_clean_form($form, &$form_state)"
"form_test_form_state_values_clean_form_submit","Form submit handler for form_state_values_clean() test form.","form_test_form_state_values_clean_form_submit($form, &$form_state)"
"form_test_form_user_register_form_alter","Implements hook_form_FORM_ID_alter() for the registration form.","form_test_form_user_register_form_alter(&$form, &$form_state)"
"form_test_html_id","Builds a simple form to test duplicate HTML IDs.","form_test_html_id($form, &$form_state)"
"form_test_limit_validation_errors_element_validate_test","Form element validation handler for the &#039;test&#039; element.","form_test_limit_validation_errors_element_validate_test(&$element, &$form_state)"
"form_test_limit_validation_errors_form","Builds a simple form with a button triggering partial validation.","form_test_limit_validation_errors_form($form, &$form_state)"
"form_test_limit_validation_errors_form_partial_submit","Form submit handler for the partial validation submit button.","form_test_limit_validation_errors_form_partial_submit($form, $form_state)"
"form_test_load_include_custom","Menu callback for testing custom form includes.","form_test_load_include_custom($form, &$form_state)"
"form_test_load_include_menu","Form constructor for testing FAPI file inclusion of the file specified in
hook_menu().","form_test_load_include_menu($form, &$form_state)"
"form_test_load_include_menu_ajax","Ajax callback for the file inclusion via menu test.","form_test_load_include_menu_ajax($form)"
"form_test_load_include_submit","Submit callback for the form API file inclusion test forms.","form_test_load_include_submit($form, $form_state)"
"form_test_menu","Implements hook_menu().","form_test_menu()"
"form_test_programmatic_form","Form builder to test programmatic form submissions.","form_test_programmatic_form($form, &$form_state)"
"form_test_programmatic_form_submit","Form submit handler for programmatic form submissions.","form_test_programmatic_form_submit($form, &$form_state)"
"form_test_programmatic_form_validate","Form validation handler for programmatic form submissions.","form_test_programmatic_form_validate($form, &$form_state)"
"form_test_redirect","Form builder to detect form redirect.","form_test_redirect($form, &$form_state)"
"form_test_redirect_submit","Form submit handler to test different redirect behaviours.","form_test_redirect_submit(&$form, &$form_state)"
"form_test_select","Builds a form to test #type &#039;select&#039; validation.","form_test_select($form, &$form_state)"
"form_test_select_submit","Form submit handler for form_test_select().","form_test_select_submit($form, &$form_state)"
"form_test_state_persist","Form constructor for testing form state persistence.","form_test_state_persist($form, &$form_state)"
"form_test_state_persist_submit","Submit handler.","form_test_state_persist_submit($form, &$form_state)"
"form_test_storage_element_validate_value_cached","Form element validation handler for &#039;value&#039; element in form_test_storage_form().","form_test_storage_element_validate_value_cached($element, &$form_state)"
"form_test_storage_form","A multistep form for testing the form storage.","form_test_storage_form($form, &$form_state)"
"form_test_storage_form_submit","Form submit handler to finish multi-step form.","form_test_storage_form_submit($form, &$form_state)"
"form_test_storage_legacy_handler","Emulate legacy AHAH-style ajax callback.","form_test_storage_legacy_handler($form_build_id)"
"form_test_storage_page_cache_form","A simple form for testing form storage when page caching is enabled.","form_test_storage_page_cache_form($form, &$form_state)"
"form_test_storage_page_cache_old_build_id","Form element #after_build callback: output the old form build-id.","form_test_storage_page_cache_old_build_id($form)"
"form_test_storage_page_cache_rebuild","Form submit callback: Rebuild the form and continue.","form_test_storage_page_cache_rebuild($form, &$form_state)"
"form_test_two_instances","Menu callback that returns two instances of the node form.","form_test_two_instances()"
"form_test_user_register_form_rebuild","Submit callback that just lets the form rebuild.","form_test_user_register_form_rebuild($form, &$form_state)"
"form_test_validate_form","Form builder for testing drupal_validate_form().","form_test_validate_form($form, &$form_state)"
"form_test_validate_form_validate","Form validation handler for form_test_validate_form().","form_test_validate_form_validate(&$form, &$form_state)"
"form_test_validate_required_form","Form constructor to test the #required property.","form_test_validate_required_form($form, &$form_state)"
"form_test_validate_required_form_no_title","Form constructor to test the #required property without #title.","form_test_validate_required_form_no_title($form, &$form_state)"
"form_test_validate_required_form_no_title_submit","Form submission handler for form_test_validate_required_form_no_title().","form_test_validate_required_form_no_title_submit($form, &$form_state)"
"form_test_validate_required_form_submit","Form submission handler for form_test_validate_required_form().","form_test_validate_required_form_submit($form, &$form_state)"
"form_test_wrapper_callback","Menu callback; Invokes a form builder function with a wrapper callback.","form_test_wrapper_callback($form_id)"
"form_test_wrapper_callback_form","Form builder for form wrapper callback test.","form_test_wrapper_callback_form($form, &$form_state)"
"form_test_wrapper_callback_wrapper","Form wrapper for form_test_wrapper_callback_form().","form_test_wrapper_callback_wrapper($form, &$form_state)"
"form_type_checkboxes_value","Determines the value for a checkboxes form element.","form_type_checkboxes_value($element, $input = FALSE)"
"form_type_checkbox_value","Determines the value for a checkbox form element.","form_type_checkbox_value($element, $input = FALSE)"
"form_type_image_button_value","Determines the value for an image button form element.","form_type_image_button_value($form, $input, $form_state)"
"form_type_password_confirm_value","Determines the value for a password_confirm form element.","form_type_password_confirm_value($element, $input = FALSE)"
"form_type_radios_value","Form value callback: Determines the value for a #type radios form element.","form_type_radios_value(&$element, $input = FALSE)"
"form_type_select_value","Determines the value for a select form element.","form_type_select_value($element, $input = FALSE)"
"form_type_tableselect_value","Determines the value for a tableselect form element.","form_type_tableselect_value($element, $input = FALSE)"
"form_type_textarea_value","Determines the value for a textarea form element.","form_type_textarea_value($element, $input = FALSE)"
"form_type_textfield_value","Determines the value for a textfield form element.","form_type_textfield_value($element, $input = FALSE)"
"form_type_token_value","Determines the value for form&#039;s token value.","form_type_token_value($element, $input = FALSE)"
"form_validate_machine_name","Form element validation handler for machine_name elements.","form_validate_machine_name(&$element, &$form_state)"
"forum_admin_settings","Form constructor for the forum settings page.","forum_admin_settings($form)"
"forum_block_configure","Implements hook_block_configure().","forum_block_configure($delta = '')"
"forum_block_info","Implements hook_block_info().","forum_block_info()"
"forum_block_save","Implements hook_block_save().","forum_block_save($delta = '', $edit = array())"
"forum_block_view","Implements hook_block_view().","forum_block_view($delta = '')"
"forum_block_view_pre_render","Render API callback: Lists nodes based on the element&#039;s #query property.","forum_block_view_pre_render($elements)"
"forum_comment_delete","Implements hook_comment_delete().","forum_comment_delete($comment)"
"forum_comment_publish","Implements hook_comment_publish().","forum_comment_publish($comment)"
"forum_comment_unpublish","Implements hook_comment_unpublish().","forum_comment_unpublish($comment)"
"forum_comment_update","Implements hook_comment_update().","forum_comment_update($comment)"
"forum_confirm_delete","Form constructor for confirming deletion of a forum taxonomy term.","forum_confirm_delete($form, &$form_state, $tid)"
"forum_confirm_delete_submit","Form submission handler for forum_confirm_delete().","forum_confirm_delete_submit($form, &$form_state)"
"forum_enable","Implements hook_enable().","forum_enable()"
"forum_entity_info_alter","Implements hook_entity_info_alter().","forum_entity_info_alter(&$info)"
"forum_field_storage_pre_insert","Implements hook_field_storage_pre_insert().","forum_field_storage_pre_insert($entity_type, $entity, &$skip_fields)"
"forum_field_storage_pre_update","Implements hook_field_storage_pre_update().","forum_field_storage_pre_update($entity_type, $entity, &$skip_fields)"
"forum_form","Implements hook_form().","forum_form($node, $form_state)"
"forum_form_container","Form constructor for adding and editing forum containers.","forum_form_container($form, &$form_state, $edit = array())"
"forum_form_forum","Form constructor for adding and editing a forum.","forum_form_forum($form, &$form_state, $edit = array())"
"forum_form_main","Page callback: Returns a form for creating a new forum or container.","forum_form_main($type, $edit = array())"
"forum_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter() for node_form().","forum_form_node_form_alter(&$form, &$form_state, $form_id)"
"forum_form_submit","Form submission handler for forum_form_forum() and forum_form_container().","forum_form_submit($form, &$form_state)"
"forum_form_taxonomy_form_term_alter","Implements hook_form_FORM_ID_alter() for taxonomy_form_term().","forum_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id)"
"forum_form_taxonomy_form_vocabulary_alter","Implements hook_form_FORM_ID_alter() for taxonomy_form_vocabulary().","forum_form_taxonomy_form_vocabulary_alter(&$form, &$form_state, $form_id)"
"forum_forum_load","Returns a tree of all forums for a given taxonomy term ID.","forum_forum_load($tid = NULL)"
"forum_get_topics","Gets all the topics in a forum.","forum_get_topics($tid, $sortby, $forum_per_page)"
"forum_help","Implements hook_help().","forum_help($path, $arg)"
"forum_install","Implements hook_install().","forum_install()"
"forum_menu","Implements hook_menu().","forum_menu()"
"forum_menu_local_tasks_alter","Implements hook_menu_local_tasks_alter().","forum_menu_local_tasks_alter(&$data, $router_item, $root_path)"
"forum_node_delete","Implements hook_node_delete().","forum_node_delete($node)"
"forum_node_info","Implements hook_node_info().","forum_node_info()"
"forum_node_insert","Implements hook_node_insert().","forum_node_insert($node)"
"forum_node_load","Implements hook_node_load().","forum_node_load($nodes)"
"forum_node_presave","Implements hook_node_presave().","forum_node_presave($node)"
"forum_node_update","Implements hook_node_update().","forum_node_update($node)"
"forum_node_validate","Implements hook_node_validate().","forum_node_validate($node, $form)"
"forum_node_view","Implements hook_node_view().","forum_node_view($node, $view_mode)"
"forum_overview","Form constructor for the forum overview form.","forum_overview($form, &$form_state)"
"forum_page","Page callback: Prints a forum listing.","forum_page($forum_term = NULL)"
"forum_permission","Implements hook_permission().","forum_permission()"
"forum_rdf_mapping","Implements hook_rdf_mapping().","forum_rdf_mapping()"
"forum_schema","Implements hook_schema().","forum_schema()"
"forum_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","forum_taxonomy_term_delete($term)"
"forum_theme","Implements hook_theme().","forum_theme()"
"forum_uninstall","Implements hook_uninstall().","forum_uninstall()"
"forum_update_7000","Add new index to forum table.","forum_update_7000()"
"forum_update_7001","Create new {forum_index} table.","forum_update_7001()"
"forum_update_7002","Add new index to forum_index table.","forum_update_7002()"
"forum_update_7003","Rename field to &#039;taxonomy_forums&#039;.","forum_update_7003()"
"forum_update_7011","Update {forum_index} so that only published nodes are indexed.","forum_update_7011()"
"forum_update_7012","Add &#039;created&#039; and &#039;last_comment_timestamp&#039; indexes.","forum_update_7012()"
"forum_update_dependencies","Implements hook_update_dependencies().","forum_update_dependencies()"
"forum_uri","Implements callback_entity_info_uri().","forum_uri($forum)"
"garland_breadcrumb","Override of theme_breadcrumb().","garland_breadcrumb($variables)"
"garland_form_system_theme_settings_alter","Implements hook_form_FORM_ID_alter().","garland_form_system_theme_settings_alter(&$form, &$form_state)"
"garland_preprocess_block","Override or insert variables into the block template.","garland_preprocess_block(&$vars)"
"garland_preprocess_comment","Override or insert variables into the comment template.","garland_preprocess_comment(&$vars)"
"garland_preprocess_html","Override or insert variables into the html template.","garland_preprocess_html(&$vars)"
"garland_preprocess_maintenance_page","Override or insert variables into the maintenance page template.","garland_preprocess_maintenance_page(&$vars)"
"garland_preprocess_node","Override or insert variables into the node template.","garland_preprocess_node(&$vars)"
"garland_preprocess_page","Override or insert variables into the page template.","garland_preprocess_page(&$vars)"
"garland_preprocess_region","Override or insert variables into the region template.","garland_preprocess_region(&$vars)"
"garland_process_html","Override or insert variables into the html template.","garland_process_html(&$vars)"
"garland_process_page","Override or insert variables into the page template.","garland_process_page(&$vars)"
"get_t","Returns the name of the proper localization function.","get_t()"
"help_help","Implements hook_help().","help_help($path, $arg)"
"help_links_as_list","Provides a formatted list of available help topics.","help_links_as_list()"
"help_main","Menu callback; prints a page listing a glossary of Drupal terminology.","help_main()"
"help_menu","Implements hook_menu().","help_menu()"
"help_page","Menu callback; prints a page listing general help for a module.","help_page($name)"
"hide","Hides an element from later rendering.","hide(&$element)"
"hook_actions_delete","Executes code after an action is deleted.","hook_actions_delete($aid)"
"hook_action_info","Declares information about actions.","hook_action_info()"
"hook_action_info_alter","Alters the actions declared by another module.","hook_action_info_alter(&$actions)"
"hook_admin_paths","Define administrative paths.","hook_admin_paths()"
"hook_admin_paths_alter","Redefine administrative paths defined by other modules.","hook_admin_paths_alter(&$paths)"
"hook_aggregator_fetch","Create an alternative fetcher for aggregator.module.","hook_aggregator_fetch($feed)"
"hook_aggregator_fetch_info","Specify the title and short description of your fetcher.","hook_aggregator_fetch_info()"
"hook_aggregator_parse","Create an alternative parser for aggregator module.","hook_aggregator_parse($feed)"
"hook_aggregator_parse_info","Specify the title and short description of your parser.","hook_aggregator_parse_info()"
"hook_aggregator_process","Create a processor for aggregator.module.","hook_aggregator_process($feed)"
"hook_aggregator_process_info","Specify the title and short description of your processor.","hook_aggregator_process_info()"
"hook_aggregator_remove","Remove stored feed data.","hook_aggregator_remove($feed)"
"hook_ajax_render_alter","Alter the commands that are sent to the user through the Ajax framework.","hook_ajax_render_alter(&$commands)"
"hook_archiver_info","Declare archivers to the system.","hook_archiver_info()"
"hook_archiver_info_alter","Alter archiver information declared by other modules.","hook_archiver_info_alter(&$info)"
"hook_batch_alter","Alter batch information before a batch is processed.","hook_batch_alter(&$batch)"
"hook_block_configure","Define a configuration form for a block.","hook_block_configure($delta = '')"
"hook_block_info","Define all blocks provided by the module.","hook_block_info()"
"hook_block_info_alter","Change block definition before saving to the database.","hook_block_info_alter(&$blocks, $theme, $code_blocks)"
"hook_block_list_alter","Act on blocks prior to rendering.","hook_block_list_alter(&$blocks)"
"hook_block_save","Save the configuration options from hook_block_configure().","hook_block_save($delta = '', $edit = array())"
"hook_block_view","Return a rendered or renderable view of a block.","hook_block_view($delta = '')"
"hook_block_view_alter","Perform alterations to the content of a block.","hook_block_view_alter(&$data, $block)"
"hook_block_view_MODULE_DELTA_alter","Perform alterations to a specific block.","hook_block_view_MODULE_DELTA_alter(&$data, $block)"
"hook_boot","Perform setup tasks for all page requests.","hook_boot()"
"hook_comment_delete","The comment is being deleted by the moderator.","hook_comment_delete($comment)"
"hook_comment_insert","The comment is being inserted.","hook_comment_insert($comment)"
"hook_comment_load","Comments are being loaded from the database.","hook_comment_load($comments)"
"hook_comment_presave","The comment passed validation and is about to be saved.","hook_comment_presave($comment)"
"hook_comment_publish","The comment is being published by the moderator.","hook_comment_publish($comment)"
"hook_comment_unpublish","The comment is being unpublished by the moderator.","hook_comment_unpublish($comment)"
"hook_comment_update","The comment is being updated.","hook_comment_update($comment)"
"hook_comment_view","The comment is being viewed. This hook can be used to add additional data to the comment before theming.","hook_comment_view($comment, $view_mode, $langcode)"
"hook_comment_view_alter","The comment was built; the module may modify the structured content.","hook_comment_view_alter(&$build)"
"hook_contextual_links_view_alter","Alter a contextual links element before it is rendered.","hook_contextual_links_view_alter(&$element, $items)"
"hook_countries_alter","Alter the default country list.","hook_countries_alter(&$countries)"
"hook_cron","Perform periodic actions.","hook_cron()"
"hook_cron_queue_info","Declare queues holding items that need to be run periodically.","hook_cron_queue_info()"
"hook_cron_queue_info_alter","Alter cron queue information before cron runs.","hook_cron_queue_info_alter(&$queues)"
"hook_css_alter","Alter CSS files before they are output on the page.","hook_css_alter(&$css)"
"hook_custom_theme","Return the machine-readable name of the theme to use for the current page.","hook_custom_theme()"
"hook_dashboard_regions","Add regions to the dashboard.","hook_dashboard_regions()"
"hook_dashboard_regions_alter","Alter dashboard regions provided by modules.","hook_dashboard_regions_alter(&$regions)"
"hook_date_formats","Define additional date formats.","hook_date_formats()"
"hook_date_formats_alter","Alter date formats declared by another module.","hook_date_formats_alter(&$formats)"
"hook_date_format_types","Define additional date types.","hook_date_format_types()"
"hook_date_format_types_alter","Modify existing date types.","hook_date_format_types_alter(&$types)"
"hook_delete","Respond to node deletion.","hook_delete($node)"
"hook_disable","Perform necessary actions before module is disabled.","hook_disable()"
"hook_drupal_goto_alter","Change the page the user is sent to by drupal_goto().","hook_drupal_goto_alter(&$path, &$options, &$http_response_code)"
"hook_element_info","Allows modules to declare their own Form API element types and specify their
default values.","hook_element_info()"
"hook_element_info_alter","Alter the element type information returned from modules.","hook_element_info_alter(&$type)"
"hook_enable","Perform necessary actions after module is enabled.","hook_enable()"
"hook_entity_delete","Act on entities when deleted.","hook_entity_delete($entity, $type)"
"hook_entity_info","Inform the base system and the Field API about one or more entity types.","hook_entity_info()"
"hook_entity_info_alter","Alter the entity info.","hook_entity_info_alter(&$entity_info)"
"hook_entity_insert","Act on entities when inserted.","hook_entity_insert($entity, $type)"
"hook_entity_load","Act on entities when loaded.","hook_entity_load($entities, $type)"
"hook_entity_prepare_view","Act on entities as they are being prepared for view.","hook_entity_prepare_view($entities, $type, $langcode)"
"hook_entity_presave","Act on an entity before it is about to be created or updated.","hook_entity_presave($entity, $type)"
"hook_entity_query_alter","Alter or execute an EntityFieldQuery.","hook_entity_query_alter($query)"
"hook_entity_update","Act on entities when updated.","hook_entity_update($entity, $type)"
"hook_entity_view","Act on entities being assembled before rendering.","hook_entity_view($entity, $type, $view_mode, $langcode)"
"hook_entity_view_alter","Alter the results of ENTITY_view().","hook_entity_view_alter(&$build, $type)"
"hook_entity_view_mode_alter","Change the view mode of an entity that is being displayed.","hook_entity_view_mode_alter(&$view_mode, $context)"
"hook_exit","Perform cleanup tasks.","hook_exit($destination = NULL)"
"hook_field_access","Determine whether the user has access to a given field.","hook_field_access($op, $field, $entity_type, $entity, $account)"
"hook_field_attach_create_bundle","Act on field_attach_create_bundle().","hook_field_attach_create_bundle($entity_type, $bundle)"
"hook_field_attach_delete","Act on field_attach_delete().","hook_field_attach_delete($entity_type, $entity)"
"hook_field_attach_delete_bundle","Act on field_attach_delete_bundle.","hook_field_attach_delete_bundle($entity_type, $bundle, $instances)"
"hook_field_attach_delete_revision","Act on field_attach_delete_revision().","hook_field_attach_delete_revision($entity_type, $entity)"
"hook_field_attach_form","Act on field_attach_form().","hook_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode)"
"hook_field_attach_insert","Act on field_attach_insert().","hook_field_attach_insert($entity_type, $entity)"
"hook_field_attach_load","Act on field_attach_load().","hook_field_attach_load($entity_type, $entities, $age, $options)"
"hook_field_attach_prepare_translation_alter","Perform alterations on field_attach_prepare_translation().","hook_field_attach_prepare_translation_alter(&$entity, $context)"
"hook_field_attach_preprocess_alter","Alter field_attach_preprocess() variables.","hook_field_attach_preprocess_alter(&$variables, $context)"
"hook_field_attach_presave","Act on field_attach_presave().","hook_field_attach_presave($entity_type, $entity)"
"hook_field_attach_purge","Act on field_purge_data().","hook_field_attach_purge($entity_type, $entity, $field, $instance)"
"hook_field_attach_rename_bundle","Act on field_attach_rename_bundle().","hook_field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)"
"hook_field_attach_submit","Act on field_attach_submit().","hook_field_attach_submit($entity_type, $entity, $form, &$form_state)"
"hook_field_attach_update","Act on field_attach_update().","hook_field_attach_update($entity_type, $entity)"
"hook_field_attach_validate","Act on field_attach_validate().","hook_field_attach_validate($entity_type, $entity, &$errors)"
"hook_field_attach_view_alter","Perform alterations on field_attach_view() or field_view_field().","hook_field_attach_view_alter(&$output, $context)"
"hook_field_available_languages_alter","Alter field_available_languages() values.","hook_field_available_languages_alter(&$languages, $context)"
"hook_field_create_field","Act on a field being created.","hook_field_create_field($field)"
"hook_field_create_instance","Act on a field instance being created.","hook_field_create_instance($instance)"
"hook_field_delete","Define custom delete behavior for this module&#039;s field data.","hook_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items)"
"hook_field_delete_field","Act on a field being deleted.","hook_field_delete_field($field)"
"hook_field_delete_instance","Act on a field instance being deleted.","hook_field_delete_instance($instance)"
"hook_field_delete_revision","Define custom revision delete behavior for this module&#039;s field types.","hook_field_delete_revision($entity_type, $entity, $field, $instance, $langcode, &$items)"
"hook_field_display_alter","Alters the display settings of a field before it gets displayed.","hook_field_display_alter(&$display, $context)"
"hook_field_display_ENTITY_TYPE_alter","Alters the display settings of a field on a given entity type before it gets displayed.","hook_field_display_ENTITY_TYPE_alter(&$display, $context)"
"hook_field_extra_fields","Exposes &quot;pseudo-field&quot; components on fieldable entities.","hook_field_extra_fields()"
"hook_field_extra_fields_alter","Alter &quot;pseudo-field&quot; components on fieldable entities.","hook_field_extra_fields_alter(&$info)"
"hook_field_extra_fields_display_alter","Alters the display settings of pseudo-fields before an entity is displayed.","hook_field_extra_fields_display_alter(&$displays, $context)"
"hook_field_formatter_info","Expose Field API formatter types.","hook_field_formatter_info()"
"hook_field_formatter_info_alter","Perform alterations on Field API formatter types.","hook_field_formatter_info_alter(&$info)"
"hook_field_formatter_prepare_view","Allow formatters to load information for field values being displayed.","hook_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays)"
"hook_field_formatter_settings_form","Specify the form elements for a formatter&#039;s settings.","hook_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)"
"hook_field_formatter_settings_summary","Return a short summary for the current formatter settings of an instance.","hook_field_formatter_settings_summary($field, $instance, $view_mode)"
"hook_field_formatter_view","Build a renderable array for a field value.","hook_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"hook_field_info","Define Field API field types.","hook_field_info()"
"hook_field_info_alter","Perform alterations on Field API field types.","hook_field_info_alter(&$info)"
"hook_field_info_max_weight","Returns the maximum weight for the entity components handled by the module.","hook_field_info_max_weight($entity_type, $bundle, $context)"
"hook_field_insert","Define custom insert behavior for this module&#039;s field data.","hook_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items)"
"hook_field_instance_settings_form","Add settings to an instance field settings form.","hook_field_instance_settings_form($field, $instance)"
"hook_field_is_empty","Define what constitutes an empty item for a field type.","hook_field_is_empty($item, $field)"
"hook_field_language_alter","Perform alterations on field_language() values.","hook_field_language_alter(&$display_language, $context)"
"hook_field_load","Define custom load behavior for this module&#039;s field types.","hook_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age)"
"hook_field_prepare_translation","Define custom prepare_translation behavior for this module&#039;s field types.","hook_field_prepare_translation($entity_type, $entity, $field, $instance, $langcode, &$items, $source_entity, $source_langcode)"
"hook_field_prepare_view","Prepare field values prior to display.","hook_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items)"
"hook_field_presave","Define custom presave behavior for this module&#039;s field types.","hook_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)"
"hook_field_purge_field","Acts when a field record is being purged.","hook_field_purge_field($field)"
"hook_field_purge_instance","Acts when a field instance is being purged.","hook_field_purge_instance($instance)"
"hook_field_read_field","Act on field records being read from the database.","hook_field_read_field($field)"
"hook_field_read_instance","Act on a field record being read from the database.","hook_field_read_instance($instance)"
"hook_field_schema","Define the Field API schema for a field structure.","hook_field_schema($field)"
"hook_field_settings_form","Add settings to a field settings form.","hook_field_settings_form($field, $instance, $has_data)"
"hook_field_storage_create_field","Act on creation of a new field.","hook_field_storage_create_field($field)"
"hook_field_storage_delete","Delete all field data for an entity.","hook_field_storage_delete($entity_type, $entity, $fields)"
"hook_field_storage_delete_field","Act on deletion of a field.","hook_field_storage_delete_field($field)"
"hook_field_storage_delete_instance","Act on deletion of a field instance.","hook_field_storage_delete_instance($instance)"
"hook_field_storage_delete_revision","Delete a single revision of field data for an entity.","hook_field_storage_delete_revision($entity_type, $entity, $fields)"
"hook_field_storage_details","Reveal the internal details about the storage for a field.","hook_field_storage_details($field)"
"hook_field_storage_details_alter","Perform alterations on Field API storage details.","hook_field_storage_details_alter(&$details, $field)"
"hook_field_storage_info","Expose Field API storage backends.","hook_field_storage_info()"
"hook_field_storage_info_alter","Perform alterations on Field API storage types.","hook_field_storage_info_alter(&$info)"
"hook_field_storage_load","Load field data for a set of entities.","hook_field_storage_load($entity_type, $entities, $age, $fields, $options)"
"hook_field_storage_pre_insert","Act before the storage backends insert field data.","hook_field_storage_pre_insert($entity_type, $entity, &$skip_fields)"
"hook_field_storage_pre_load","Act before the storage backends load field data.","hook_field_storage_pre_load($entity_type, $entities, $age, &$skip_fields, $options)"
"hook_field_storage_pre_update","Act before the storage backends update field data.","hook_field_storage_pre_update($entity_type, $entity, &$skip_fields)"
"hook_field_storage_purge","Remove field storage information when field data is purged.","hook_field_storage_purge($entity_type, $entity, $field, $instance)"
"hook_field_storage_purge_field","Remove field storage information when a field record is purged.","hook_field_storage_purge_field($field)"
"hook_field_storage_purge_field_instance","Remove field storage information when a field instance is purged.","hook_field_storage_purge_field_instance($instance)"
"hook_field_storage_query","Execute an EntityFieldQuery.","hook_field_storage_query($query)"
"hook_field_storage_update_field","Update the storage information for a field.","hook_field_storage_update_field($field, $prior_field, $has_data)"
"hook_field_storage_write","Write field data for an entity.","hook_field_storage_write($entity_type, $entity, $op, $fields)"
"hook_field_update","Define custom update behavior for this module&#039;s field data.","hook_field_update($entity_type, $entity, $field, $instance, $langcode, &$items)"
"hook_field_update_field","Act on a field being updated.","hook_field_update_field($field, $prior_field, $has_data)"
"hook_field_update_forbid","Forbid a field update from occurring.","hook_field_update_forbid($field, $prior_field, $has_data)"
"hook_field_update_instance","Act on a field instance being updated.","hook_field_update_instance($instance, $prior_instance)"
"hook_field_validate","Validate this module&#039;s field data.","hook_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"hook_field_widget_error","Flag a field-level validation error.","hook_field_widget_error($element, $error, $form, &$form_state)"
"hook_field_widget_form","Return the form for a single field widget.","hook_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"hook_field_widget_form_alter","Alter forms for field widgets provided by other modules.","hook_field_widget_form_alter(&$element, &$form_state, $context)"
"hook_field_widget_info","Expose Field API widget types.","hook_field_widget_info()"
"hook_field_widget_info_alter","Perform alterations on Field API widget types.","hook_field_widget_info_alter(&$info)"
"hook_field_widget_properties_alter","Alters the widget properties of a field instance before it gets displayed.","hook_field_widget_properties_alter(&$widget, $context)"
"hook_field_widget_properties_ENTITY_TYPE_alter","Alters the widget properties of a field instance on a given entity type
before it gets displayed.","hook_field_widget_properties_ENTITY_TYPE_alter(&$widget, $context)"
"hook_field_widget_settings_form","Add settings to a widget settings form.","hook_field_widget_settings_form($field, $instance)"
"hook_field_widget_WIDGET_TYPE_form_alter","Alter widget forms for a specific widget provided by another module.","hook_field_widget_WIDGET_TYPE_form_alter(&$element, &$form_state, $context)"
"hook_filetransfer_info","Register information about FileTransfer classes provided by a module.","hook_filetransfer_info()"
"hook_filetransfer_info_alter","Alter the FileTransfer class registry.","hook_filetransfer_info_alter(&$filetransfer_info)"
"hook_file_copy","Respond to a file that has been copied.","hook_file_copy($file, $source)"
"hook_file_delete","Respond to a file being deleted.","hook_file_delete($file)"
"hook_file_download","Control access to private file downloads and specify HTTP headers.","hook_file_download($uri)"
"hook_file_download_access","Control download access to files.","hook_file_download_access($file_item, $entity_type, $entity)"
"hook_file_download_access_alter","Alter the access rules applied to a file download.","hook_file_download_access_alter(&$grants, $file_item, $entity_type, $entity)"
"hook_file_insert","Respond to a file being added.","hook_file_insert($file)"
"hook_file_load","Load additional information into file objects.","hook_file_load($files)"
"hook_file_mimetype_mapping_alter","Alter MIME type mappings used to determine MIME type from a file extension.","hook_file_mimetype_mapping_alter(&$mapping)"
"hook_file_move","Respond to a file that has been moved.","hook_file_move($file, $source)"
"hook_file_presave","Act on a file being inserted or updated.","hook_file_presave($file)"
"hook_file_update","Respond to a file being updated.","hook_file_update($file)"
"hook_file_url_alter","Alter the URL to a file.","hook_file_url_alter(&$uri)"
"hook_file_validate","Check that files meet a given criteria.","hook_file_validate($file)"
"hook_filter_format_disable","Perform actions when a text format has been disabled.","hook_filter_format_disable($format)"
"hook_filter_format_insert","Perform actions when a new text format has been created.","hook_filter_format_insert($format)"
"hook_filter_format_update","Perform actions when a text format has been updated.","hook_filter_format_update($format)"
"hook_filter_info","Define content filters.","hook_filter_info()"
"hook_filter_info_alter","Perform alterations on filter definitions.","hook_filter_info_alter(&$info)"
"hook_flush_caches","Add a list of cache tables to be cleared.","hook_flush_caches()"
"hook_form","Display a node editing form.","hook_form($node, &$form_state)"
"hook_forms","Map form_ids to form builder functions.","hook_forms($form_id, $args)"
"hook_form_alter","Perform alterations before a form is rendered.","hook_form_alter(&$form, &$form_state, $form_id)"
"hook_form_BASE_FORM_ID_alter","Provide a form-specific alteration for shared (&#039;base&#039;) forms.","hook_form_BASE_FORM_ID_alter(&$form, &$form_state, $form_id)"
"hook_form_FORM_ID_alter","Provide a form-specific alteration instead of the global hook_form_alter().","hook_form_FORM_ID_alter(&$form, &$form_state, $form_id)"
"hook_form_system_theme_settings_alter","Allow themes to alter the theme-specific settings form.","hook_form_system_theme_settings_alter(&$form, &$form_state)"
"hook_help","Provide online user help.","hook_help($path, $arg)"
"hook_hook_info","Defines one or more hooks that are exposed by a module.","hook_hook_info()"
"hook_hook_info_alter","Alter information from hook_hook_info().","hook_hook_info_alter(&$hooks)"
"hook_html_head_alter","Alter XHTML HEAD tags before they are rendered by drupal_get_html_head().","hook_html_head_alter(&$head_elements)"
"hook_image_default_styles","Provide module-based image styles for reuse throughout Drupal.","hook_image_default_styles()"
"hook_image_effect_info","Define information about image effects provided by a module.","hook_image_effect_info()"
"hook_image_effect_info_alter","Alter the information provided in hook_image_effect_info().","hook_image_effect_info_alter(&$effects)"
"hook_image_styles_alter","Modify any image styles provided by other modules or the user.","hook_image_styles_alter(&$styles)"
"hook_image_style_delete","Respond to image style deletion.","hook_image_style_delete($style)"
"hook_image_style_flush","Respond to image style flushing.","hook_image_style_flush($style)"
"hook_image_style_save","Respond to image style updating.","hook_image_style_save($style)"
"hook_image_toolkits","Define image toolkits provided by this module.","hook_image_toolkits()"
"hook_init","Perform setup tasks for non-cached page requests.","hook_init()"
"hook_insert","Respond to creation of a new node.","hook_insert($node)"
"hook_install","Perform setup tasks when the module is installed.","hook_install()"
"hook_install_tasks","Return an array of tasks to be performed by an installation profile.","hook_install_tasks(&$install_state)"
"hook_install_tasks_alter","Alter the full list of installation tasks.","hook_install_tasks_alter(&$tasks, $install_state)"
"hook_js_alter","Perform necessary alterations to the JavaScript before it is presented on
the page.","hook_js_alter(&$javascript)"
"hook_language_fallback_candidates_alter","Perform alterations on the language fallback candidates.","hook_language_fallback_candidates_alter(array &$fallback_candidates)"
"hook_language_init","Allows modules to act after language initialization has been performed.","hook_language_init()"
"hook_language_negotiation_info","Define language negotiation providers.","hook_language_negotiation_info()"
"hook_language_negotiation_info_alter","Perform alterations on language negoiation providers.","hook_language_negotiation_info_alter(array &$language_providers)"
"hook_language_switch_links_alter","Perform alterations on language switcher links.","hook_language_switch_links_alter(array &$links, $type, $path)"
"hook_language_types_info","Define language types.","hook_language_types_info()"
"hook_language_types_info_alter","Perform alterations on language types.","hook_language_types_info_alter(array &$language_types)"
"hook_library","Registers JavaScript/CSS libraries associated with a module.","hook_library()"
"hook_library_alter","Alters the JavaScript/CSS library registry.","hook_library_alter(&$libraries, $module)"
"hook_load","Act on nodes being loaded from the database.","hook_load($nodes)"
"hook_locale","Allows modules to define their own text groups that can be translated.","hook_locale($op = 'groups')"
"hook_mail","Prepare a message based on parameters; called from drupal_mail().","hook_mail($key, &$message, $params)"
"hook_mail_alter","Alter an email message created with the drupal_mail() function.","hook_mail_alter(&$message)"
"hook_menu","Define menu items and page callbacks.","hook_menu()"
"hook_menu_alter","Alter the data being saved to the {menu_router} table after hook_menu is invoked.","hook_menu_alter(&$items)"
"hook_menu_breadcrumb_alter","Alter links in the active trail before it is rendered as the breadcrumb.","hook_menu_breadcrumb_alter(&$active_trail, $item)"
"hook_menu_contextual_links_alter","Alter contextual links before they are rendered.","hook_menu_contextual_links_alter(&$links, $router_item, $root_path)"
"hook_menu_delete","Respond to a custom menu deletion.","hook_menu_delete($menu)"
"hook_menu_get_item_alter","Alter a menu router item right after it has been retrieved from the database or cache.","hook_menu_get_item_alter(&$router_item, $path, $original_map)"
"hook_menu_insert","Respond to a custom menu creation.","hook_menu_insert($menu)"
"hook_menu_link_alter","Alter the data being saved to the {menu_links} table by menu_link_save().","hook_menu_link_alter(&$item)"
"hook_menu_link_delete","Inform modules that a menu link has been deleted.","hook_menu_link_delete($link)"
"hook_menu_link_insert","Inform modules that a menu link has been created.","hook_menu_link_insert($link)"
"hook_menu_link_update","Inform modules that a menu link has been updated.","hook_menu_link_update($link)"
"hook_menu_local_tasks_alter","Alter tabs and actions displayed on the page before they are rendered.","hook_menu_local_tasks_alter(&$data, $router_item, $root_path)"
"hook_menu_site_status_alter","Control site status before menu dispatching.","hook_menu_site_status_alter(&$menu_site_status, $path)"
"hook_menu_update","Respond to a custom menu update.","hook_menu_update($menu)"
"hook_modules_disabled","Perform necessary actions after modules are disabled.","hook_modules_disabled($modules)"
"hook_modules_enabled","Perform necessary actions after modules are enabled.","hook_modules_enabled($modules)"
"hook_modules_installed","Perform necessary actions after modules are installed.","hook_modules_installed($modules)"
"hook_modules_uninstalled","Perform necessary actions after modules are uninstalled.","hook_modules_uninstalled($modules)"
"hook_module_implements_alter","Alter the registry of modules implementing a hook.","hook_module_implements_alter(&$implementations, $hook)"
"hook_multilingual_settings_changed","Allow modules to react to language settings changes.","hook_multilingual_settings_changed()"
"hook_node_access","Control access to a node.","hook_node_access($node, $op, $account)"
"hook_node_access_records","Set permissions for a node to be written to the database.","hook_node_access_records($node)"
"hook_node_access_records_alter","Alter permissions for a node before it is written to the database.","hook_node_access_records_alter(&$grants, $node)"
"hook_node_delete","Respond to node deletion.","hook_node_delete($node)"
"hook_node_grants","Inform the node access system what permissions the user has.","hook_node_grants($account, $op)"
"hook_node_grants_alter","Alter user access rules when trying to view, edit or delete a node.","hook_node_grants_alter(&$grants, $account, $op)"
"hook_node_info","Define module-provided node types.","hook_node_info()"
"hook_node_insert","Respond to creation of a new node.","hook_node_insert($node)"
"hook_node_load","Act on arbitrary nodes being loaded from the database.","hook_node_load($nodes, $types)"
"hook_node_operations","Add mass node operations.","hook_node_operations()"
"hook_node_prepare","Act on a node object about to be shown on the add/edit form.","hook_node_prepare($node)"
"hook_node_presave","Act on a node being inserted or updated.","hook_node_presave($node)"
"hook_node_revision_delete","Respond to deletion of a node revision.","hook_node_revision_delete($node)"
"hook_node_search_result","Act on a node being displayed as a search result.","hook_node_search_result($node)"
"hook_node_submit","Act on a node after validated form values have been copied to it.","hook_node_submit($node, $form, &$form_state)"
"hook_node_type_delete","Respond to node type deletion.","hook_node_type_delete($info)"
"hook_node_type_insert","Respond to node type creation.","hook_node_type_insert($info)"
"hook_node_type_update","Respond to node type updates.","hook_node_type_update($info)"
"hook_node_update","Respond to updates to a node.","hook_node_update($node)"
"hook_node_update_index","Act on a node being indexed for searching.","hook_node_update_index($node)"
"hook_node_validate","Perform node validation before a node is created or updated.","hook_node_validate($node, $form, &$form_state)"
"hook_node_view","Act on a node that is being assembled before rendering.","hook_node_view($node, $view_mode, $langcode)"
"hook_node_view_alter","Alter the results of node_view().","hook_node_view_alter(&$build)"
"hook_openid","Allow modules to modify the OpenID request parameters.","hook_openid($op, $request)"
"hook_openid_discovery_method_info","Allow modules to declare OpenID discovery methods.","hook_openid_discovery_method_info()"
"hook_openid_discovery_method_info_alter","Allow modules to alter discovery methods.","hook_openid_discovery_method_info_alter(&$methods)"
"hook_openid_normalization_method_info","Allow modules to declare OpenID normalization methods.","hook_openid_normalization_method_info()"
"hook_openid_normalization_method_info_alter","Allow modules to alter normalization methods.","hook_openid_normalization_method_info_alter(&$methods)"
"hook_openid_response","Allow modules to act upon a successful OpenID login.","hook_openid_response($response, $account)"
"hook_options_list","Returns the list of options to be displayed for a field.","hook_options_list($field, $instance, $entity_type, $entity)"
"hook_overlay_child_initialize","Allow modules to act when an overlay child window is initialized.","hook_overlay_child_initialize()"
"hook_overlay_parent_initialize","Allow modules to act when an overlay parent window is initialized.","hook_overlay_parent_initialize()"
"hook_page_alter","Perform alterations before a page is rendered.","hook_page_alter(&$page)"
"hook_page_build","Add elements to a page before it is rendered.","hook_page_build(&$page)"
"hook_page_delivery_callback_alter","Alters the delivery callback used to send the result of the page callback to the browser.","hook_page_delivery_callback_alter(&$callback)"
"hook_path_delete","Respond to a path being deleted.","hook_path_delete($path)"
"hook_path_insert","Respond to a path being inserted.","hook_path_insert($path)"
"hook_path_update","Respond to a path being updated.","hook_path_update($path)"
"hook_permission","Define user permissions.","hook_permission()"
"hook_prepare","Act on a node object about to be shown on the add/edit form.","hook_prepare($node)"
"hook_preprocess","Preprocess theme variables for templates.","hook_preprocess(&$variables, $hook)"
"hook_preprocess_HOOK","Preprocess theme variables for a specific theme hook.","hook_preprocess_HOOK(&$variables)"
"hook_process","Process theme variables for templates.","hook_process(&$variables, $hook)"
"hook_process_HOOK","Process theme variables for a specific theme hook.","hook_process_HOOK(&$variables)"
"hook_query_alter","Perform alterations to a structured query.","hook_query_alter(QueryAlterableInterface $query)"
"hook_query_TAG_alter","Perform alterations to a structured query for a given tag.","hook_query_TAG_alter(QueryAlterableInterface $query)"
"hook_ranking","Provide additional methods of scoring for core search results for nodes.","hook_ranking()"
"hook_rdf_mapping","Allow modules to define RDF mappings for field bundles.","hook_rdf_mapping()"
"hook_rdf_namespaces","Allow modules to define namespaces for RDF mappings.","hook_rdf_namespaces()"
"hook_registry_files_alter","Perform necessary alterations to the list of files parsed by the registry.","hook_registry_files_alter(&$files, $modules)"
"hook_requirements","Check installation requirements and do status reporting.","hook_requirements($phase)"
"hook_schema","Define the current version of the database schema.","hook_schema()"
"hook_schema_alter","Perform alterations to existing database schemas.","hook_schema_alter(&$schema)"
"hook_search_access","Define access to a custom search routine.","hook_search_access()"
"hook_search_admin","Add elements to the search settings form.","hook_search_admin()"
"hook_search_execute","Execute a search for a set of key words.","hook_search_execute($keys = NULL, $conditions = NULL)"
"hook_search_info","Define a custom search type.","hook_search_info()"
"hook_search_page","Override the rendering of search results.","hook_search_page($results)"
"hook_search_preprocess","Preprocess text for search.","hook_search_preprocess($text)"
"hook_search_reset","Take action when the search index is going to be rebuilt.","hook_search_reset()"
"hook_search_status","Report the status of indexing.","hook_search_status()"
"hook_shortcut_default_set","Return the name of a default shortcut set for the provided user account.","hook_shortcut_default_set($account)"
"hook_simpletest_alter","Alter the list of tests.","hook_simpletest_alter(&$groups)"
"hook_stream_wrappers","Registers PHP stream wrapper implementations associated with a module.","hook_stream_wrappers()"
"hook_stream_wrappers_alter","Alters the list of PHP stream wrapper implementations.","hook_stream_wrappers_alter(&$wrappers)"
"hook_system_info_alter","Alter the information parsed from module and theme .info files","hook_system_info_alter(&$info, $file, $type)"
"hook_system_themes_page_alter","Alters theme operation links.","hook_system_themes_page_alter(&$theme_groups)"
"hook_system_theme_info","Return additional themes provided by modules.","hook_system_theme_info()"
"hook_taxonomy_term_delete","Respond to the deletion of taxonomy terms.","hook_taxonomy_term_delete($term)"
"hook_taxonomy_term_insert","Act on taxonomy terms when inserted.","hook_taxonomy_term_insert($term)"
"hook_taxonomy_term_load","Act on taxonomy terms when loaded.","hook_taxonomy_term_load($terms)"
"hook_taxonomy_term_presave","Act on taxonomy terms before they are saved.","hook_taxonomy_term_presave($term)"
"hook_taxonomy_term_update","Act on taxonomy terms when updated.","hook_taxonomy_term_update($term)"
"hook_taxonomy_term_view","Act on a taxonomy term that is being assembled before rendering.","hook_taxonomy_term_view($term, $view_mode, $langcode)"
"hook_taxonomy_term_view_alter","Alter the results of taxonomy_term_view().","hook_taxonomy_term_view_alter(&$build)"
"hook_taxonomy_vocabulary_delete","Respond to the deletion of taxonomy vocabularies.","hook_taxonomy_vocabulary_delete($vocabulary)"
"hook_taxonomy_vocabulary_insert","Act on taxonomy vocabularies when inserted.","hook_taxonomy_vocabulary_insert($vocabulary)"
"hook_taxonomy_vocabulary_load","Act on taxonomy vocabularies when loaded.","hook_taxonomy_vocabulary_load($vocabularies)"
"hook_taxonomy_vocabulary_presave","Act on taxonomy vocabularies before they are saved.","hook_taxonomy_vocabulary_presave($vocabulary)"
"hook_taxonomy_vocabulary_update","Act on taxonomy vocabularies when updated.","hook_taxonomy_vocabulary_update($vocabulary)"
"hook_test_finished","An individual test has finished.","hook_test_finished($results)"
"hook_test_group_finished","A test group has finished.","hook_test_group_finished()"
"hook_test_group_started","A test group has started.","hook_test_group_started()"
"hook_theme","Register a module (or theme&#039;s) theme implementations.","hook_theme($existing, $type, $theme, $path)"
"hook_themes_disabled","Respond to themes being disabled.","hook_themes_disabled($theme_list)"
"hook_themes_enabled","Respond to themes being enabled.","hook_themes_enabled($theme_list)"
"hook_theme_registry_alter","Alter the theme registry information returned from hook_theme().","hook_theme_registry_alter(&$theme_registry)"
"hook_tokens","Provide replacement values for placeholder tokens.","hook_tokens($type, $tokens, array $data = array(), array $options = array())"
"hook_tokens_alter","Alter replacement values for placeholder tokens.","hook_tokens_alter(array &$replacements, array $context)"
"hook_token_info","Provide information about available placeholder tokens and token types.","hook_token_info()"
"hook_token_info_alter","Alter the metadata about available placeholder tokens and token types.","hook_token_info_alter(&$data)"
"hook_translated_menu_link_alter","Alter a menu link after it has been translated and before it is rendered.","hook_translated_menu_link_alter(&$item, $map)"
"hook_trigger_info","Declare triggers (events) for users to assign actions to.","hook_trigger_info()"
"hook_trigger_info_alter","Alter triggers declared by hook_trigger_info().","hook_trigger_info_alter(&$triggers)"
"hook_uninstall","Remove any information that the module sets.","hook_uninstall()"
"hook_update","Respond to updates to a node.","hook_update($node)"
"hook_updater_info","Provide information on Updaters (classes that can update Drupal).","hook_updater_info()"
"hook_updater_info_alter","Alter the Updater information array.","hook_updater_info_alter(&$updaters)"
"hook_update_dependencies","Return an array of information about module update dependencies.","hook_update_dependencies()"
"hook_update_index","Update the search index for this module.","hook_update_index()"
"hook_update_last_removed","Return a number which is no longer available as hook_update_N().","hook_update_last_removed()"
"hook_update_N","Perform a single update.","hook_update_N(&$sandbox)"
"hook_update_projects_alter","Alter the list of projects before fetching data and comparing versions.","hook_update_projects_alter(&$projects)"
"hook_update_status_alter","Alter the information about available updates for projects.","hook_update_status_alter(&$projects)"
"hook_url_inbound_alter","Alters inbound URL requests.","hook_url_inbound_alter(&$path, $original_path, $path_language)"
"hook_url_outbound_alter","Alters outbound URLs.","hook_url_outbound_alter(&$path, &$options, $original_path)"
"hook_username_alter","Alter the username that is displayed for a user.","hook_username_alter(&$name, $account)"
"hook_user_cancel","Act on user account cancellations.","hook_user_cancel($edit, $account, $method)"
"hook_user_cancel_methods_alter","Modify account cancellation methods.","hook_user_cancel_methods_alter(&$methods)"
"hook_user_categories","Retrieve a list of user setting or profile information categories.","hook_user_categories()"
"hook_user_delete","Respond to user deletion.","hook_user_delete($account)"
"hook_user_insert","A user account was created.","hook_user_insert(&$edit, $account, $category)"
"hook_user_load","Act on user objects when loaded from the database.","hook_user_load($users)"
"hook_user_login","The user just logged in.","hook_user_login(&$edit, $account)"
"hook_user_logout","The user just logged out.","hook_user_logout($account)"
"hook_user_operations","Add mass user operations.","hook_user_operations()"
"hook_user_presave","A user account is about to be created or updated.","hook_user_presave(&$edit, $account, $category)"
"hook_user_role_delete","Respond to user role deletion.","hook_user_role_delete($role)"
"hook_user_role_insert","Respond to creation of a new user role.","hook_user_role_insert($role)"
"hook_user_role_presave","Act on a user role being inserted or updated.","hook_user_role_presave($role)"
"hook_user_role_update","Respond to updates to a user role.","hook_user_role_update($role)"
"hook_user_update","A user account was updated.","hook_user_update(&$edit, $account, $category)"
"hook_user_view","The user&#039;s account information is being displayed.","hook_user_view($account, $view_mode, $langcode)"
"hook_user_view_alter","The user was built; the module may modify the structured content.","hook_user_view_alter(&$build)"
"hook_validate","Perform node validation before a node is created or updated.","hook_validate($node, $form, &$form_state)"
"hook_verify_update_archive","Verify an archive after it has been downloaded and extracted.","hook_verify_update_archive($project, $archive_file, $directory)"
"hook_view","Display a node.","hook_view($node, $view_mode)"
"hook_watchdog","Log an event message.","hook_watchdog(array $log_entry)"
"hook_xmlrpc","Register XML-RPC callbacks.","hook_xmlrpc()"
"hook_xmlrpc_alter","Alters the definition of XML-RPC methods before they are called.","hook_xmlrpc_alter(&$methods)"
"image_crop","Crops an image to a rectangle specified by the given dimensions.","image_crop(stdClass $image, $x, $y, $width, $height)"
"image_crop_effect","Image effect callback; Crop an image resource.","image_crop_effect(&$image, $data)"
"image_crop_form","Form structure for the image crop form.","image_crop_form($data)"
"image_default_style_revert","Reverts the changes made by users to a default image style.","image_default_style_revert($style)"
"image_default_style_save","Saves a default image style to the database.","image_default_style_save($style)"
"image_desaturate","Converts an image to grayscale.","image_desaturate(stdClass $image)"
"image_desaturate_effect","Image effect callback; Desaturate (grayscale) an image resource.","image_desaturate_effect(&$image, $data)"
"image_dimensions_scale","Scales image dimensions while maintaining aspect ratio.","image_dimensions_scale(array &$dimensions, $width = NULL, $height = NULL, $upscale = FALSE)"
"image_effects","Loads all image effects from the database.","image_effects()"
"image_effect_apply","Applies an image effect to the image object.","image_effect_apply($image, $effect)"
"image_effect_color_validate","Element validate handler to ensure a hexadecimal color value.","image_effect_color_validate($element, &$form_state)"
"image_effect_definitions","Returns a set of image effects.","image_effect_definitions()"
"image_effect_definition_load","Loads the definition for an image effect.","image_effect_definition_load($effect, $style_name = NULL)"
"image_effect_delete","Deletes an image effect.","image_effect_delete($effect)"
"image_effect_delete_form","Form builder; Form for deleting an image effect.","image_effect_delete_form($form, &$form_state, $style, $effect)"
"image_effect_delete_form_submit","Submit handler to delete an image effect.","image_effect_delete_form_submit($form, &$form_state)"
"image_effect_form","Form builder; Form for adding and editing image effects.","image_effect_form($form, &$form_state, $style, $effect)"
"image_effect_form_submit","Submit handler for updating an image effect.","image_effect_form_submit($form, &$form_state)"
"image_effect_integer_validate","Element validate handler to ensure an integer pixel value.","image_effect_integer_validate($element, &$form_state)"
"image_effect_load","Loads a single image effect.","image_effect_load($ieid, $style_name, $include = NULL)"
"image_effect_save","Saves an image effect.","image_effect_save($effect)"
"image_effect_scale_validate","Element validate handler to ensure that either a height or a width is
specified.","image_effect_scale_validate($element, &$form_state)"
"image_field_delete","Implements hook_field_delete().","image_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items)"
"image_field_delete_field","Implements hook_field_delete_field().","image_field_delete_field($field)"
"image_field_delete_instance","Implements hook_field_delete_instance().","image_field_delete_instance($instance)"
"image_field_delete_revision","Implements hook_field_delete_revision().","image_field_delete_revision($entity_type, $entity, $field, $instance, $langcode, &$items)"
"image_field_formatter_info","Implements hook_field_formatter_info().","image_field_formatter_info()"
"image_field_formatter_settings_form","Implements hook_field_formatter_settings_form().","image_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)"
"image_field_formatter_settings_summary","Implements hook_field_formatter_settings_summary().","image_field_formatter_settings_summary($field, $instance, $view_mode)"
"image_field_formatter_view","Implements hook_field_formatter_view().","image_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"image_field_info","Implements hook_field_info().","image_field_info()"
"image_field_insert","Implements hook_field_insert().","image_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items)"
"image_field_instance_settings_form","Implements hook_field_instance_settings_form().","image_field_instance_settings_form($field, $instance)"
"image_field_is_empty","Implements hook_field_is_empty().","image_field_is_empty($item, $field)"
"image_field_load","Implements hook_field_load().","image_field_load($entity_type, $entities, $field, $instances, $langcode, &$items, $age)"
"image_field_prepare_view","Implements hook_field_prepare_view().","image_field_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items)"
"image_field_presave","Implements hook_field_presave().","image_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)"
"image_field_schema","Implements hook_field_schema().","image_field_schema($field)"
"image_field_settings_form","Implements hook_field_settings_form().","image_field_settings_form($field, $instance)"
"image_field_update","Implements hook_field_update().","image_field_update($entity_type, $entity, $field, $instance, $langcode, &$items)"
"image_field_update_field","Implements hook_field_update_field().","image_field_update_field($field, $prior_field, $has_data)"
"image_field_update_instance","Implements hook_field_update_instance().","image_field_update_instance($instance, $prior_instance)"
"image_field_widget_form","Implements hook_field_widget_form().","image_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"image_field_widget_info","Implements hook_field_widget_info().","image_field_widget_info()"
"image_field_widget_process","An element #process callback for the image_image field type.","image_field_widget_process($element, &$form_state, $form)"
"image_field_widget_settings_form","Implements hook_field_widget_settings_form().","image_field_widget_settings_form($field, $instance)"
"image_file_delete","Implements hook_file_delete().","image_file_delete($file)"
"image_file_download","Implements hook_file_download().","image_file_download($uri)"
"image_file_move","Implements hook_file_move().","image_file_move($file, $source)"
"image_filter_keyword","Accepts a keyword (center, top, left, etc) and returns it as a pixel offset.","image_filter_keyword($value, $current_pixels, $new_pixels)"
"image_flush_caches","Implements hook_flush_caches().","image_flush_caches()"
"image_form_system_file_system_settings_alter","Implements hook_form_FORM_ID_alter().","image_form_system_file_system_settings_alter(&$form, &$form_state)"
"image_gd_check_settings","Verify GD2 settings (that the right version is actually installed).","image_gd_check_settings()"
"image_gd_create_tmp","Create a truecolor image preserving transparency from a provided image.","image_gd_create_tmp(stdClass $image, $width, $height)"
"image_gd_crop","Crop an image using the GD toolkit.","image_gd_crop(stdClass $image, $x, $y, $width, $height)"
"image_gd_desaturate","Convert an image resource to grayscale.","image_gd_desaturate(stdClass $image)"
"image_gd_get_info","Get details about an image.","image_gd_get_info(stdClass $image)"
"image_gd_load","GD helper function to create an image resource from a file.","image_gd_load(stdClass $image)"
"image_gd_resize","Scale an image to the specified size using GD.","image_gd_resize(stdClass $image, $width, $height)"
"image_gd_rotate","Rotate an image the given number of degrees.","image_gd_rotate(stdClass $image, $degrees, $background = NULL)"
"image_gd_save","GD helper to write an image resource to a destination file.","image_gd_save(stdClass $image, $destination)"
"image_gd_settings","Retrieve settings for the GD2 toolkit.","image_gd_settings()"
"image_gd_settings_validate","Validate the submitted GD settings.","image_gd_settings_validate($form, &$form_state)"
"image_get_available_toolkits","Gets a list of available toolkits.","image_get_available_toolkits()"
"image_get_info","Gets details about an image.","image_get_info($filepath, $toolkit = FALSE)"
"image_get_toolkit","Gets the name of the currently used toolkit.","image_get_toolkit()"
"image_help","Implements hook_help().","image_help($path, $arg)"
"image_image_default_styles","Implements hook_image_default_styles().","image_image_default_styles()"
"image_image_effect_info","Implements hook_image_effect_info().","image_image_effect_info()"
"image_image_style_delete","Implements hook_image_style_delete().","image_image_style_delete($style)"
"image_image_style_save","Implements hook_image_style_save().","image_image_style_save($style)"
"image_install","Implements hook_install().","image_install()"
"image_load","Loads an image file and returns an image object.","image_load($file, $toolkit = FALSE)"
"image_menu","Implements hook_menu().","image_menu()"
"image_module_test_file_download",,"image_module_test_file_download($uri)"
"image_module_test_image_effect_info","Implements hook_image_effect_info().","image_module_test_image_effect_info()"
"image_module_test_image_effect_info_alter","Implements hook_image_effect_info_alter().","image_module_test_image_effect_info_alter(&$effects)"
"image_module_test_null_effect","Image effect callback; Null.","image_module_test_null_effect(array &$image, array $data)"
"image_path_flush","Clears cached versions of a specific file in all styles.","image_path_flush($path)"
"image_permission","Implements hook_permission().","image_permission()"
"image_requirements","Implements hook_requirements() to check the PHP GD Library.","image_requirements($phase)"
"image_resize","Resizes an image to the given dimensions (ignoring aspect ratio).","image_resize(stdClass $image, $width, $height)"
"image_resize_dimensions","Image dimensions callback; Resize.","image_resize_dimensions(array &$dimensions, array $data)"
"image_resize_effect","Image effect callback; Resize an image resource.","image_resize_effect(&$image, $data)"
"image_resize_form","Form structure for the image resize form.","image_resize_form($data)"
"image_rotate","Rotates an image by the given number of degrees.","image_rotate(stdClass $image, $degrees, $background = NULL)"
"image_rotate_dimensions","Image dimensions callback; Rotate.","image_rotate_dimensions(array &$dimensions, array $data)"
"image_rotate_effect","Image effect callback; Rotate an image resource.","image_rotate_effect(&$image, $data)"
"image_rotate_form","Form structure for the image rotate form.","image_rotate_form($data)"
"image_save","Closes the image and saves the changes to a file.","image_save(stdClass $image, $destination = NULL)"
"image_scale","Scales an image while maintaining aspect ratio.","image_scale(stdClass $image, $width = NULL, $height = NULL, $upscale = FALSE)"
"image_scale_and_crop","Scales an image to the exact width and height given.","image_scale_and_crop(stdClass $image, $width, $height)"
"image_scale_and_crop_effect","Image effect callback; Scale and crop an image resource.","image_scale_and_crop_effect(&$image, $data)"
"image_scale_dimensions","Image dimensions callback; Scale.","image_scale_dimensions(array &$dimensions, array $data)"
"image_scale_effect","Image effect callback; Scale an image resource.","image_scale_effect(&$image, $data)"
"image_scale_form","Form structure for the image scale form.","image_scale_form($data)"
"image_schema","Implements hook_schema().","image_schema()"
"image_styles","Gets an array of all styles and their settings.","image_styles()"
"image_style_add_form","Form builder; Form for adding a new image style.","image_style_add_form($form, &$form_state)"
"image_style_add_form_submit","Submit handler for adding a new image style.","image_style_add_form_submit($form, &$form_state)"
"image_style_create_derivative","Creates a new image derivative based on an image style.","image_style_create_derivative($style, $source, $destination)"
"image_style_delete","Deletes an image style.","image_style_delete($style, $replacement_style_name = '')"
"image_style_delete_form","Form builder; Form for deleting an image style.","image_style_delete_form($form, &$form_state, $style)"
"image_style_delete_form_submit","Submit handler to delete an image style.","image_style_delete_form_submit($form, &$form_state)"
"image_style_deliver","Page callback: Generates a derivative, given a style and image path.","image_style_deliver($style, $scheme)"
"image_style_effects","Loads all the effects for an image style.","image_style_effects($style)"
"image_style_flush","Flushes cached media for a style.","image_style_flush($style)"
"image_style_form","Form builder; Edit an image style name and effects order.","image_style_form($form, &$form_state, $style)"
"image_style_form_add_submit","Submit handler for adding a new image effect to an image style.","image_style_form_add_submit($form, &$form_state)"
"image_style_form_add_validate","Validate handler for adding a new image effect to an image style.","image_style_form_add_validate($form, &$form_state)"
"image_style_form_override_submit","Submit handler for overriding a module-defined style.","image_style_form_override_submit($form, &$form_state)"
"image_style_form_submit","Submit handler for saving an image style.","image_style_form_submit($form, &$form_state)"
"image_style_list","Menu callback; Listing of all current image styles.","image_style_list()"
"image_style_load","Loads a style by style name or ID.","image_style_load($name = NULL, $isid = NULL, $include = NULL)"
"image_style_name_validate","Element validate function to ensure unique, URL safe style names.","image_style_name_validate($element, $form_state)"
"image_style_options","Gets an array of image styles suitable for using as select list options.","image_style_options($include_empty = TRUE, $output = CHECK_PLAIN)"
"image_style_path","Returns the URI of an image when using a style.","image_style_path($style_name, $uri)"
"image_style_path_token","Generates a token to protect an image style derivative.","image_style_path_token($style_name, $uri)"
"image_style_revert_form","Confirmation form to revert a database style to its default.","image_style_revert_form($form, &$form_state, $style)"
"image_style_revert_form_submit","Submit handler to convert an overridden style to its default.","image_style_revert_form_submit($form, &$form_state)"
"image_style_save","Saves an image style.","image_style_save($style)"
"image_style_transform_dimensions","Determines the dimensions of the styled image.","image_style_transform_dimensions($style_name, array &$dimensions)"
"image_style_url","Returns the URL for an image derivative given a style and image path.","image_style_url($style_name, $path)"
"image_system_file_system_settings_submit","Form submission handler for system_file_system_settings().","image_system_file_system_settings_submit($form, &$form_state)"
"image_test_crop","Image tookit&#039;s crop operation.","image_test_crop(stdClass $image, $x, $y, $width, $height)"
"image_test_desaturate","Image tookit&#039;s desaturate operation.","image_test_desaturate(stdClass $image)"
"image_test_get_all_calls","Get an array with the all the calls to the toolkits since image_test_reset()
was called.","image_test_get_all_calls()"
"image_test_get_info","Image toolkit&#039;s get_info operation.","image_test_get_info(stdClass $image)"
"image_test_image_toolkits","Implements hook_image_toolkits().","image_test_image_toolkits()"
"image_test_load","Image tookit&#039;s load operation.","image_test_load(stdClass $image)"
"image_test_reset","Reset/initialize the history of calls to the toolkit functions.","image_test_reset()"
"image_test_resize","Image tookit&#039;s resize operation.","image_test_resize(stdClass $image, $width, $height)"
"image_test_rotate","Image tookit&#039;s rotate operation.","image_test_rotate(stdClass $image, $degrees, $background = NULL)"
"image_test_save","Image tookit&#039;s save operation.","image_test_save(stdClass $image, $destination)"
"image_test_settings","Image tookit&#039;s settings operation.","image_test_settings()"
"image_theme","Implements hook_theme().","image_theme()"
"image_toolkit_invoke","Invokes the given method using the currently selected toolkit.","image_toolkit_invoke($method, stdClass $image, array $params = array())"
"image_uninstall","Implements hook_uninstall().","image_uninstall()"
"image_update_7000","Install the schema for users upgrading from the contributed module.","image_update_7000()"
"image_update_7001","Rename possibly misnamed {image_effect} table to {image_effects}.","image_update_7001()"
"image_update_7002","Add width and height columns to image field schema and populate.","image_update_7002(array &$sandbox)"
"image_update_7003","Remove the variables that set alt and title length since they were not
used for database column size and could cause PDO exceptions.","image_update_7003()"
"image_update_7004","Use a large setting (512 and 1024 characters) for the length of the image alt
and title fields.","image_update_7004()"
"image_update_7005","Add a column to the &#039;image_style&#039; table to store administrative labels.","image_update_7005()"
"image_update_dependencies","Implements hook_update_dependencies().","image_update_dependencies()"
"install_already_done_error","Indicates that Drupal has already been installed.","install_already_done_error()"
"install_begin_request","Begins an installation request, modifying the installation state as needed.","install_begin_request(&$install_state)"
"install_bootstrap_full","Performs a full bootstrap of Drupal during installation.","install_bootstrap_full(&$install_state)"
"install_check_requirements","Checks installation requirements and reports any errors.","install_check_requirements($install_state)"
"install_configure_form","Form constructor for a form to configure the new site.","install_configure_form($form, &$form_state, &$install_state)"
"install_configure_form_submit","Form submission handler for install_configure_form().","install_configure_form_submit($form, &$form_state)"
"install_configure_form_validate","Form validation handler for install_configure_form().","install_configure_form_validate($form, &$form_state)"
"install_database_errors","Checks a database connection and returns any errors.","install_database_errors($database, $settings_file)"
"install_display_output","Displays themed installer output and ends the page request.","install_display_output($output, $install_state)"
"install_drupal","Installs Drupal either interactively or via an array of passed-in settings.","install_drupal($settings = array())"
"install_find_locales","Find all .po files for the current profile.","install_find_locales($profilename)"
"install_find_profiles","Finds all .profile files.","install_find_profiles()"
"install_finished","Finishes importing files at end of installation.","install_finished(&$install_state)"
"install_full_redirect_url","Returns the complete URL redirected to during an installation request.","install_full_redirect_url($install_state)"
"install_goto","Sends the user to a different installer page.","install_goto($path)"
"install_import_locales","Imports languages via a batch process during installation.","install_import_locales(&$install_state)"
"install_import_locales_remaining","Installation task; import remaining languages via a batch process.","install_import_locales_remaining(&$install_state)"
"install_load_profile","Loads information about the chosen profile during installation.","install_load_profile(&$install_state)"
"install_no_profile_error","Indicates that there are no profiles available.","install_no_profile_error()"
"install_profile_info","Retrieves information about an installation profile from its .info file.","install_profile_info($profile, $locale = 'en')"
"install_profile_modules","Installs required modules via a batch process.","install_profile_modules(&$install_state)"
"install_redirect_url","Returns the URL that should be redirected to during an installation request.","install_redirect_url($install_state)"
"install_run_task","Runs an individual installation task.","install_run_task($task, &$install_state)"
"install_run_tasks","Runs all tasks for the current installation request.","install_run_tasks(&$install_state)"
"install_select_locale","Installation task; select which locale to use for the current profile.","install_select_locale(&$install_state)"
"install_select_locale_form","Form constructor for the language selection form.","install_select_locale_form($form, &$form_state, $locales, $profilename)"
"install_select_profile","Selects which profile to install.","install_select_profile(&$install_state)"
"install_select_profile_form","Form constructor for the profile selection form.","install_select_profile_form($form, &$form_state, $profile_files)"
"install_settings_form","Form constructor for a form to configure and rewrite settings.php.","install_settings_form($form, &$form_state, &$install_state)"
"install_settings_form_submit","Form submission handler for install_settings_form().","install_settings_form_submit($form, &$form_state)"
"install_settings_form_validate","Form validation handler for install_settings_form().","install_settings_form_validate($form, &$form_state)"
"install_state_defaults","Returns an array of default settings for the global installation state.","install_state_defaults()"
"install_system_module","Installation task; install the Drupal system module.","install_system_module(&$install_state)"
"install_tasks","Returns a list of all tasks the installer currently knows about.","install_tasks($install_state)"
"install_tasks_to_display","Returns a list of tasks that should be displayed to the end user.","install_tasks_to_display($install_state)"
"install_tasks_to_perform","Returns a list of tasks to perform during the current installation request.","install_tasks_to_perform($install_state)"
"install_verify_completed_task","Verifies and returns the last installation task that was completed.","install_verify_completed_task()"
"install_verify_pdo","Verifies the PDO library.","install_verify_pdo()"
"install_verify_requirements","Verifies the requirements for installing Drupal.","install_verify_requirements(&$install_state)"
"install_verify_settings","Verifies the existing settings in settings.php.","install_verify_settings()"
"int2vancode","Generate vancode.","int2vancode($i = 0)"
"ip_address","Returns the IP address of the client machine.","ip_address()"
"l","Formats an internal or external URL link as an HTML anchor tag.","l($text, $path, array $options = array())"
"language_default","Returns the default language used on the site","language_default($property = NULL)"
"language_fallback_get_candidates","Returns the possible fallback languages ordered by language weight.","language_fallback_get_candidates($type = LANGUAGE_TYPE_CONTENT)"
"language_from_default","Returns the default language negotiation provider.","language_from_default()"
"language_initialize","Chooses a language based on language negotiation provider settings.","language_initialize($type)"
"language_list","Returns a list of installed languages, indexed by the specified key.","language_list($field = 'language')"
"language_negotiation_get","Checks whether a language negotiation provider is enabled for a language type.","language_negotiation_get($type, $provider_id = NULL)"
"language_negotiation_get_any","Checks if the language negotiation provider is enabled for any language type.","language_negotiation_get_any($provider_id)"
"language_negotiation_get_switch_links","Returns the language switch links for the given language.","language_negotiation_get_switch_links($type, $path)"
"language_negotiation_info","Returns all the defined language negotiation providers.","language_negotiation_info()"
"language_negotiation_purge","Removes any unused language negotiation providers from the configuration.","language_negotiation_purge()"
"language_negotiation_set","Saves a list of language negotiation providers.","language_negotiation_set($type, $language_providers)"
"language_provider_invoke","Helper function used to cache the language negotiation providers results.","language_provider_invoke($provider_id, $provider = NULL)"
"language_provider_weight","Returns the passed language negotiation provider weight or a default value.","language_provider_weight($provider)"
"language_types","Returns an array of the available language types.","language_types()"
"language_types_configurable","Returns only the configurable language types.","language_types_configurable($stored = TRUE)"
"language_types_disable","Disables the given language types.","language_types_disable($types)"
"language_types_info","Returns all the defined language types.","language_types_info()"
"language_types_set","Updates the language type configuration.","language_types_set()"
"language_url_split_prefix","Splits the given path into prefix and actual path.","language_url_split_prefix($path, $languages)"
"list_allowed_values","Returns the array of allowed values for a list field.","list_allowed_values($field, $instance = NULL, $entity_type = NULL, $entity = NULL)"
"list_allowed_values_setting_validate","Element validate callback; check that the entered values are valid.","list_allowed_values_setting_validate($element, &$form_state)"
"list_allowed_values_string","Generates a string representation of an array of &#039;allowed values&#039;.","list_allowed_values_string($values)"
"list_boolean_allowed_values_callback","Form element #value_callback: assembles the allowed values for &#039;boolean&#039; fields.","list_boolean_allowed_values_callback($element, $input, $form_state)"
"list_extract_allowed_values","Parses a string of &#039;allowed values&#039; into an array.","list_extract_allowed_values($string, $field_type, $generate_keys)"
"list_field_formatter_info","Implements hook_field_formatter_info().","list_field_formatter_info()"
"list_field_formatter_view","Implements hook_field_formatter_view().","list_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"list_field_info","Implements hook_field_info().","list_field_info()"
"list_field_is_empty","Implements hook_field_is_empty().","list_field_is_empty($item, $field)"
"list_field_schema","Implements hook_field_schema().","list_field_schema($field)"
"list_field_settings_form","Implements hook_field_settings_form().","list_field_settings_form($field, $instance, $has_data)"
"list_field_update_field","Implements hook_field_update_field().","list_field_update_field($field, $prior_field, $has_data)"
"list_field_update_forbid","Implements hook_field_update_forbid().","list_field_update_forbid($field, $prior_field, $has_data)"
"list_field_validate","Implements hook_field_validate().","list_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"list_field_widget_info_alter","Implements hook_field_widget_info_alter().","list_field_widget_info_alter(&$info)"
"list_help","Implements hook_help().","list_help($path, $arg)"
"list_options_list","Implements hook_options_list().","list_options_list($field, $instance, $entity_type, $entity)"
"list_test_allowed_values_callback","Allowed values callback.","list_test_allowed_values_callback($field)"
"list_test_dynamic_values_callback","An entity-bound allowed values callback.","list_test_dynamic_values_callback($field, $instance, $entity_type, $entity, &$cacheable)"
"list_themes","Returns a list of all currently available themes.","list_themes($refresh = FALSE)"
"list_update_7001","Rename the list field types and change &#039;allowed_values&#039; format.","list_update_7001()"
"list_update_7002","Re-apply list_update_7001() for deleted fields.","list_update_7002()"
"locale","Provides interface translation services.","locale($string = NULL, $context = NULL, $langcode = NULL)"
"locale_add_language","API function to add a language.","locale_add_language($langcode, $name = NULL, $native = NULL, $direction = LANGUAGE_LTR, $domain = '', $prefix = '', $enabled = TRUE, $default = FALSE)"
"locale_batch_by_component","Prepare a batch to run when installing modules or enabling themes.","locale_batch_by_component($components, $finished = '_locale_batch_system_finished')"
"locale_batch_by_language","Prepare a batch to import translations for all enabled
modules in a given language.","locale_batch_by_language($langcode, $finished = NULL, $skip = array())"
"locale_block_info","Implements hook_block_info().","locale_block_info()"
"locale_block_view","Implements hook_block_view().","locale_block_view($type)"
"locale_css_alter","Implements hook_css_alter().","locale_css_alter(&$css)"
"locale_date_format_form","Provide date localization configuration options to users.","locale_date_format_form($form, &$form_state, $langcode)"
"locale_date_format_form_submit","Submit handler for configuring localized date formats on the locale_date_format_form.","locale_date_format_form_submit($form, &$form_state)"
"locale_date_format_language_overview_page","Display edit date format links for each language.","locale_date_format_language_overview_page()"
"locale_date_format_reset_form","Reset locale specific date formats to the global defaults.","locale_date_format_reset_form($form, &$form_state, $langcode)"
"locale_date_format_reset_form_submit","Reset date formats for a specific language to global defaults.","locale_date_format_reset_form_submit($form, &$form_state)"
"locale_date_format_save","Save locale specific date formats to the database.","locale_date_format_save($langcode, $type, $format)"
"locale_entity_info_alter","Implements hook_entity_info_alter().","locale_entity_info_alter(&$entity_info)"
"locale_field_comment_form_submit","Form submit handler for comment_form().","locale_field_comment_form_submit($form, &$form_state)"
"locale_field_entity_form_submit","Handles field language on submit for the given entity type.","locale_field_entity_form_submit($entity_type, $form, &$form_state)"
"locale_field_language_alter","Implements hook_field_language_alter().","locale_field_language_alter(&$display_language, $context)"
"locale_field_language_fallback","Applies language fallback rules to the fields attached to the given entity.","locale_field_language_fallback(&$display_language, $entity, $langcode)"
"locale_field_node_form_submit","Form submit handler for node_form().","locale_field_node_form_submit($form, &$form_state)"
"locale_form_alter","Implements hook_form_alter().","locale_form_alter(&$form, &$form_state, $form_id)"
"locale_form_comment_form_alter","Implements hook_form_FORM_ID_alter().","locale_form_comment_form_alter(&$form, &$form_state, $form_id)"
"locale_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter().","locale_form_node_form_alter(&$form, &$form_state)"
"locale_form_node_type_form_alter","Implements hook_form_FORM_ID_alter().","locale_form_node_type_form_alter(&$form, &$form_state)"
"locale_form_path_admin_form_alter","Implements hook_form_FORM_ID_alter().","locale_form_path_admin_form_alter(&$form, &$form_state)"
"locale_get_localized_date_format","Select locale date format details from database.","locale_get_localized_date_format($languages)"
"locale_get_plural","Returns plural form index for a specific number.","locale_get_plural($count, $langcode = NULL)"
"locale_help","Implements hook_help().","locale_help($path, $arg)"
"locale_init","Implements hook_init().","locale_init()"
"locale_install","Implements hook_install().","locale_install()"
"locale_js_alter","Implements hook_js_alter().","locale_js_alter(&$javascript)"
"locale_languages_add_screen","User interface for the language addition screen.","locale_languages_add_screen()"
"locale_languages_configure_form","Setting for language negotiation options","locale_languages_configure_form()"
"locale_languages_configure_form_submit","Submit handler for language negotiation settings.","locale_languages_configure_form_submit($form, &$form_state)"
"locale_languages_custom_form","Custom language addition form.","locale_languages_custom_form($form)"
"locale_languages_delete_form","User interface for the language deletion confirmation screen.","locale_languages_delete_form($form, &$form_state, $langcode)"
"locale_languages_delete_form_submit","Process language deletion submissions.","locale_languages_delete_form_submit($form, &$form_state)"
"locale_languages_edit_form","Editing screen for a particular language.","locale_languages_edit_form($form, &$form_state, $langcode)"
"locale_languages_edit_form_submit","Process the language editing form submission.","locale_languages_edit_form_submit($form, &$form_state)"
"locale_languages_edit_form_validate","Validate the language editing form. Reused for custom language addition too.","locale_languages_edit_form_validate($form, &$form_state)"
"locale_languages_overview_form","User interface for the language overview screen.","locale_languages_overview_form()"
"locale_languages_overview_form_submit","Process language overview form submissions, updating existing languages.","locale_languages_overview_form_submit($form, &$form_state)"
"locale_languages_predefined_form","Predefined language setup form.","locale_languages_predefined_form($form)"
"locale_languages_predefined_form_submit","Process the language addition form submission.","locale_languages_predefined_form_submit($form, &$form_state)"
"locale_languages_predefined_form_validate","Validate the language addition form.","locale_languages_predefined_form_validate($form, &$form_state)"
"locale_language_from_browser","Identify language from the Accept-language HTTP header we got.","locale_language_from_browser($languages)"
"locale_language_from_interface","Identifies the language from the current interface language.","locale_language_from_interface()"
"locale_language_from_session","Identify language from a request/session parameter.","locale_language_from_session($languages)"
"locale_language_from_url","Identify language via URL prefix or domain.","locale_language_from_url($languages)"
"locale_language_from_user","Identify language from the user preferences.","locale_language_from_user($languages)"
"locale_language_list","Returns array of language names","locale_language_list($field = 'name', $all = FALSE)"
"locale_language_name","Returns a language name","locale_language_name($lang)"
"locale_language_negotiation_info","Implements hook_language_negotiation_info().","locale_language_negotiation_info()"
"locale_language_providers_session_form","The URL language provider configuration form.","locale_language_providers_session_form($form, &$form_state)"
"locale_language_providers_url_form","The URL language provider configuration form.","locale_language_providers_url_form($form, &$form_state)"
"locale_language_selector_form","Form builder callback to display language selection widget.","locale_language_selector_form(&$form, &$form_state, $user)"
"locale_language_switcher_session","Return the session language switcher block.","locale_language_switcher_session($type, $path)"
"locale_language_switcher_url","Return the URL language switcher block. Translation links may be provided by
other modules.","locale_language_switcher_url($type, $path)"
"locale_language_types_info","Implements hook_language_types_info().","locale_language_types_info()"
"locale_language_url_fallback","Determines the language to be assigned to URLs when none is detected.","locale_language_url_fallback($language = NULL, $language_type = LANGUAGE_TYPE_INTERFACE)"
"locale_language_url_rewrite_session","Rewrite URLs for the Session language provider.","locale_language_url_rewrite_session(&$path, &$options)"
"locale_language_url_rewrite_url","Rewrite URLs for the URL language provider.","locale_language_url_rewrite_url(&$path, &$options)"
"locale_library_alter","Implement hook_library_alter().","locale_library_alter(&$libraries, $module)"
"locale_locale","Implements hook_locale().","locale_locale($op = 'groups')"
"locale_menu","Implements hook_menu().","locale_menu()"
"locale_modules_disabled","Implements hook_modules_disabled().","locale_modules_disabled($modules)"
"locale_modules_enabled","Implements hook_modules_enabled().","locale_modules_enabled($modules)"
"locale_modules_installed","Implements hook_modules_installed().","locale_modules_installed($modules)"
"locale_multilingual_node_type","Return whether the given content type has multilingual support.","locale_multilingual_node_type($type_name)"
"locale_permission","Implements hook_permission().","locale_permission()"
"locale_reset","Reset static variables used by locale().","locale_reset()"
"locale_schema","Implements hook_schema().","locale_schema()"
"locale_string_is_safe","Check that a string is safe to be added or imported as a translation.","locale_string_is_safe($string)"
"locale_system_update","Imports translations when new modules or themes are installed.","locale_system_update($components)"
"locale_test_boot","Implements hook_boot().","locale_test_boot()"
"locale_test_init","Implements hook_init().","locale_test_init()"
"locale_test_language_negotiation_info","Implements hook_language_negotiation_info().","locale_test_language_negotiation_info()"
"locale_test_language_negotiation_info_alter","Implements hook_language_negotiation_info_alter().","locale_test_language_negotiation_info_alter(array &$language_providers)"
"locale_test_language_provider","Test language provider.","locale_test_language_provider($languages)"
"locale_test_language_types_info","Implements hook_language_types_info().","locale_test_language_types_info()"
"locale_test_language_types_info_alter","Implements hook_language_types_info_alter().","locale_test_language_types_info_alter(array &$language_types)"
"locale_test_locale","Implements hook_locale().","locale_test_locale($op = 'groups')"
"locale_test_menu","Implements hook_menu().","locale_test_menu()"
"locale_test_plural_format_page","Returns markup for locale_get_plural testing.","locale_test_plural_format_page()"
"locale_test_store_language_negotiation","Store the last negotiated languages.","locale_test_store_language_negotiation()"
"locale_theme","Implements hook_theme().","locale_theme()"
"locale_themes_enabled","Implements hook_themes_enabled().","locale_themes_enabled($themes)"
"locale_translate_delete_form","User interface for the string deletion confirmation screen.","locale_translate_delete_form($form, &$form_state, $source)"
"locale_translate_delete_form_submit","Process string deletion submissions.","locale_translate_delete_form_submit($form, &$form_state)"
"locale_translate_delete_page","String deletion confirmation page.","locale_translate_delete_page($lid)"
"locale_translate_edit_form","User interface for string editing.","locale_translate_edit_form($form, &$form_state, $lid)"
"locale_translate_edit_form_submit","Process string editing form submissions.","locale_translate_edit_form_submit($form, &$form_state)"
"locale_translate_edit_form_validate","Validate string editing form submissions.","locale_translate_edit_form_validate($form, &$form_state)"
"locale_translate_export_pot_form","Translation template export form.","locale_translate_export_pot_form()"
"locale_translate_export_po_form","Form to export PO files for the languages provided.","locale_translate_export_po_form($form, &$form_state, $names)"
"locale_translate_export_po_form_submit","Process a translation (or template) export form submission.","locale_translate_export_po_form_submit($form, &$form_state)"
"locale_translate_export_screen","User interface for the translation export screen.","locale_translate_export_screen()"
"locale_translate_import_form","User interface for the translation import screen.","locale_translate_import_form($form)"
"locale_translate_import_form_submit","Process the locale import form submission.","locale_translate_import_form_submit($form, &$form_state)"
"locale_translate_overview_screen","Overview screen for translations.","locale_translate_overview_screen()"
"locale_translate_seek_screen","String search screen.","locale_translate_seek_screen()"
"locale_translation_filters","List locale translation filters that can be applied.","locale_translation_filters()"
"locale_translation_filter_form","Return form for locale translation filters.","locale_translation_filter_form()"
"locale_translation_filter_form_submit","Process result from locale translation filter form.","locale_translation_filter_form_submit($form, &$form_state)"
"locale_translation_filter_form_validate","Validate result from locale translation filter form.","locale_translation_filter_form_validate($form, &$form_state)"
"locale_uninstall","Implements hook_uninstall().","locale_uninstall()"
"locale_update_7000","Add context field index and allow longer location.","locale_update_7000()"
"locale_update_7001","Upgrade language negotiation settings.","locale_update_7001()"
"locale_update_7002","Updates URL language negotiation by adding the URL fallback detection method.","locale_update_7002()"
"locale_update_7003","Update &quot;language_count&quot; variable.","locale_update_7003()"
"locale_update_7004","Remove duplicates in {locales_source}.","locale_update_7004()"
"locale_update_7005","Increase {locales_languages}.formula column&#039;s length.","locale_update_7005()"
"locale_url_outbound_alter","Implements hook_url_outbound_alter().","locale_url_outbound_alter(&$path, &$options, $original_path)"
"lock_acquire","Acquire (or renew) a lock, but do not block if it fails.","lock_acquire($name, $timeout = 30.0)"
"lock_initialize","Initialize the locking system.","lock_initialize()"
"lock_may_be_available","Check if lock acquired by a different process may be available.","lock_may_be_available($name)"
"lock_release","Release a lock previously acquired by lock_acquire().","lock_release($name)"
"lock_release_all","Release all previously acquired locks.","lock_release_all($lock_id = NULL)"
"lock_wait","Wait for a lock to be available.","lock_wait($name, $delay = 30)"
"map_month","Helper function for usage with drupal_map_assoc to display month names.","map_month($month)"
"menu_block_info","Implements hook_block_info().","menu_block_info()"
"menu_block_view","Implements hook_block_view().","menu_block_view($delta = '')"
"menu_block_view_alter","Implements hook_block_view_alter().","menu_block_view_alter(&$data, $block)"
"menu_build_tree","Builds a menu tree, translates links, and checks access.","menu_build_tree($menu_name, array $parameters = array())"
"menu_cache_clear","Clears the cached cached data for a single named menu.","menu_cache_clear($menu_name = 'navigation')"
"menu_cache_clear_all","Clears all cached menu data.","menu_cache_clear_all()"
"menu_configure","Menu callback; Build the form presenting menu configuration options.","menu_configure()"
"menu_contextual_links","Retrieves contextual links for a path based on registered local tasks.","menu_contextual_links($module, $parent_path, $args)"
"menu_custom_delete_submit","Submit function for the &#039;Delete&#039; button on the menu editing form.","menu_custom_delete_submit($form, &$form_state)"
"menu_delete","Delete a custom menu and all contained links.","menu_delete($menu)"
"menu_delete_links","Deletes all links for a menu.","menu_delete_links($menu_name)"
"menu_delete_menu_confirm","Build a confirm form for deletion of a custom menu.","menu_delete_menu_confirm($form, &$form_state, $menu)"
"menu_delete_menu_confirm_submit","Delete a custom menu and all links in it.","menu_delete_menu_confirm_submit($form, &$form_state)"
"menu_delete_menu_page","Menu callback; check access and get a confirm form for deletion of a custom menu.","menu_delete_menu_page($menu)"
"menu_edit_item","Menu callback; Build the menu link editing form.","menu_edit_item($form, &$form_state, $type, $item, $menu)"
"menu_edit_item_submit","Process menu and menu item add/edit form submissions.","menu_edit_item_submit($form, &$form_state)"
"menu_edit_item_validate","Validate form values for a menu link being added or edited.","menu_edit_item_validate($form, &$form_state)"
"menu_edit_menu","Menu callback; Build the form that handles the adding/editing of a custom menu.","menu_edit_menu($form, &$form_state, $type, $menu = array())"
"menu_edit_menu_name_exists","Returns whether a menu name already exists.","menu_edit_menu_name_exists($value)"
"menu_edit_menu_submit","Submit function for adding or editing a custom menu.","menu_edit_menu_submit($form, &$form_state)"
"menu_enable","Implements hook_enable().","menu_enable()"
"menu_execute_active_handler","Execute the page callback associated with the current path.","menu_execute_active_handler($path = NULL, $deliver = TRUE)"
"menu_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter().","menu_form_node_form_alter(&$form, $form_state)"
"menu_form_node_type_form_alter","Implements hook_form_FORM_ID_alter().","menu_form_node_type_form_alter(&$form, $form_state)"
"menu_get_active_breadcrumb","Gets the breadcrumb for the current page, as determined by the active trail.","menu_get_active_breadcrumb()"
"menu_get_active_help","Returns the help associated with the active menu item.","menu_get_active_help()"
"menu_get_active_menu_names","Gets the active menu for the current page.","menu_get_active_menu_names()"
"menu_get_active_title","Gets the title of the current page, as determined by the active trail.","menu_get_active_title()"
"menu_get_active_trail","Gets the active trail (path to root menu root) of the current page.","menu_get_active_trail()"
"menu_get_ancestors","Returns the ancestors (and relevant placeholders) for any given path.","menu_get_ancestors($parts)"
"menu_get_custom_theme","Gets the custom theme for the current page, if there is one.","menu_get_custom_theme($initialize = FALSE)"
"menu_get_item","Gets a router item.","menu_get_item($path = NULL, $router_item = NULL)"
"menu_get_menus","Return an associative array of the custom menus names.","menu_get_menus($all = TRUE)"
"menu_get_names","Build a list of named menus.","menu_get_names()"
"menu_get_object","Gets a loaded object from a router item.","menu_get_object($type = 'node', $position = 1, $path = NULL)"
"menu_get_router","Gets the menu router.","menu_get_router()"
"menu_help","Implements hook_help().","menu_help($path, $arg)"
"menu_install","Implements hook_install().","menu_install()"
"menu_item_delete_form","Build a confirm form for deletion of a single menu link.","menu_item_delete_form($form, &$form_state, $item)"
"menu_item_delete_form_submit","Process menu delete form submissions.","menu_item_delete_form_submit($form, &$form_state)"
"menu_item_delete_page","Menu callback; Check access and present a confirm form for deleting a menu link.","menu_item_delete_page($item)"
"menu_item_delete_submit","Submit function for the delete button on the menu item editing form.","menu_item_delete_submit($form, &$form_state)"
"menu_links_clone","Clones an array of menu links.","menu_links_clone($links, $menu_name = NULL)"
"menu_link_children_relative_depth","Finds the depth of an item&#039;s children relative to its depth.","menu_link_children_relative_depth($item)"
"menu_link_delete","Delete one or several menu links.","menu_link_delete($mlid, $path = NULL)"
"menu_link_get_preferred","Looks up the preferred menu link for a given system path.","menu_link_get_preferred($path = NULL, $selected_menu = NULL)"
"menu_link_load","Gets a translated, access-checked menu link that is ready for rendering.","menu_link_load($mlid)"
"menu_link_maintain","Inserts, updates, or deletes an uncustomized menu link related to a module.","menu_link_maintain($module, $op, $link_path, $link_title)"
"menu_link_save","Saves a menu link.","menu_link_save(&$item, $existing_item = array(), $parent_candidates = array())"
"menu_list_system_menus","Returns an array containing the names of system-defined (default) menus.","menu_list_system_menus()"
"menu_load","Load the data for a single custom menu.","menu_load($menu_name)"
"menu_load_all","Load all custom menu data.","menu_load_all()"
"menu_load_links","Returns an array containing all links for a menu.","menu_load_links($menu_name)"
"menu_local_actions","Returns the rendered local actions at the current level.","menu_local_actions()"
"menu_local_tabs","Returns a renderable element for the primary and secondary tabs.","menu_local_tabs()"
"menu_local_tasks","Collects the local tasks (tabs), action links, and the root path.","menu_local_tasks($level = 0)"
"menu_login_callback","Menu callback to be used as a login path.","menu_login_callback()"
"menu_main_menu","Returns an array of links to be rendered as the Main menu.","menu_main_menu()"
"menu_menu","Implements hook_menu().","menu_menu()"
"menu_navigation_links","Returns an array of links for a navigation menu.","menu_navigation_links($menu_name, $level = 0)"
"menu_node_delete","Implements hook_node_delete().","menu_node_delete($node)"
"menu_node_insert","Implements hook_node_insert().","menu_node_insert($node)"
"menu_node_prepare","Implements hook_node_prepare().","menu_node_prepare($node)"
"menu_node_save","Helper for hook_node_insert() and hook_node_update().","menu_node_save($node)"
"menu_node_submit","Implements hook_node_submit().","menu_node_submit($node, $form, $form_state)"
"menu_node_update","Implements hook_node_update().","menu_node_update($node)"
"menu_overview_form","Form for editing an entire menu tree at once.","menu_overview_form($form, &$form_state, $menu)"
"menu_overview_form_submit","Submit handler for the menu overview form.","menu_overview_form_submit($form, &$form_state)"
"menu_overview_page","Menu callback which shows an overview page of all the custom menus and their descriptions.","menu_overview_page()"
"menu_overview_title","Title callback for the menu overview page and links.","menu_overview_title($menu)"
"menu_parent_options","Return a list of menu items that are valid possible parents for the given menu item.","menu_parent_options($menus, $item, $type = '')"
"menu_parent_options_js","Page callback.
Get all the available menus and menu items as a JavaScript array.","menu_parent_options_js()"
"menu_permission","Implements hook_permission().","menu_permission()"
"menu_primary_local_tasks","Returns the rendered local tasks at the top level.","menu_primary_local_tasks()"
"menu_rebuild","Populates the database tables used by various menu functions.","menu_rebuild()"
"menu_reset_item","Reset a system-defined menu link.","menu_reset_item($link)"
"menu_reset_item_confirm","Menu callback; reset a single modified menu link.","menu_reset_item_confirm($form, &$form_state, $item)"
"menu_reset_item_confirm_submit","Process menu reset item form submissions.","menu_reset_item_confirm_submit($form, &$form_state)"
"menu_reset_static_cache","Resets the menu system static cache.","menu_reset_static_cache()"
"menu_router_build","Collects and alters the menu definitions.","menu_router_build()"
"menu_save","Save a custom menu.","menu_save($menu)"
"menu_schema","Implements hook_schema().","menu_schema()"
"menu_secondary_local_tasks","Returns the rendered local tasks at the second level.","menu_secondary_local_tasks()"
"menu_secondary_menu","Returns an array of links to be rendered as the Secondary links.","menu_secondary_menu()"
"menu_set_active_item","Sets the active path, which determines which page is loaded.","menu_set_active_item($path)"
"menu_set_active_menu_names","Sets (or gets) the active menu for the current page.","menu_set_active_menu_names($menu_names = NULL)"
"menu_set_active_trail","Sets the active trail (path to the menu tree root) of the current page.","menu_set_active_trail($new_trail = NULL)"
"menu_set_custom_theme","Sets a custom theme for the current page, if there is one.","menu_set_custom_theme()"
"menu_set_item","Replaces the statically cached item for a given path.","menu_set_item($path, $router_item)"
"menu_tab_root_path","Returns the router path, or the path for a default local task&#039;s parent.","menu_tab_root_path()"
"menu_tail_load","Loads the path as one string relative to the current index.","menu_tail_load($arg, &$map, $index)"
"menu_tail_to_arg","Returns a string containing the path relative to the current index.","menu_tail_to_arg($arg, $map, $index)"
"menu_test_argument_load","Dummy argument loader for hook_menu() to point to.","menu_test_argument_load($arg1)"
"menu_test_callback","Dummy callback for hook_menu() to point to.","menu_test_callback()"
"menu_test_custom_403_404_callback","Callback for our custom 403 and 404 pages.","menu_test_custom_403_404_callback()"
"menu_test_custom_theme","Implement hook_custom_theme().","menu_test_custom_theme()"
"menu_test_init","Implements hook_init().","menu_test_init()"
"menu_test_menu","Implements hook_menu().","menu_test_menu()"
"menu_test_menu_link_delete","Implements hook_menu_link_delete().","menu_test_menu_link_delete($item)"
"menu_test_menu_link_insert","Implements hook_menu_link_insert().","menu_test_menu_link_insert($item)"
"menu_test_menu_link_update","Implements hook_menu_link_update().","menu_test_menu_link_update($item)"
"menu_test_menu_name","Helper function for the testMenuName() test. Used to change the menu_name
parameter of a menu.","menu_test_menu_name($new_name = '')"
"menu_test_menu_site_status_alter","Implements hook_menu_site_status_alter().","menu_test_menu_site_status_alter(&$menu_site_status, $path)"
"menu_test_menu_trail_callback","Callback that test menu_test_menu_tree_set_path().","menu_test_menu_trail_callback()"
"menu_test_other_argument_load","Dummy argument loader for hook_menu() to point to.","menu_test_other_argument_load($arg1)"
"menu_test_static_variable","Static function for testing hook results.","menu_test_static_variable($value = NULL)"
"menu_test_theme_callback","Theme callback to use when testing the theme callback functionality.","menu_test_theme_callback($argument)"
"menu_test_theme_page_callback","Page callback to use when testing the theme callback functionality.","menu_test_theme_page_callback($inherited = FALSE)"
"menu_test_title_callback","Concatenates a string, by using the t() function and a case number.","menu_test_title_callback($title, $case_no = 3)"
"menu_theme","Implements hook_theme().","menu_theme()"
"menu_tree","Renders a menu tree based on the current path.","menu_tree($menu_name)"
"menu_tree_all_data","Gets the data structure representing a named menu tree.","menu_tree_all_data($menu_name, $link = NULL, $max_depth = NULL)"
"menu_tree_check_access","Checks access and performs dynamic operations for each link in the tree.","menu_tree_check_access(&$tree, $node_links = array())"
"menu_tree_collect_node_links","Collects node links from a given menu tree recursively.","menu_tree_collect_node_links(&$tree, &$node_links)"
"menu_tree_data","Sorts and returns the built data representing a menu tree.","menu_tree_data(array $links, array $parents = array(), $depth = 1)"
"menu_tree_get_path","Gets the path for determining the active trail of the specified menu tree.","menu_tree_get_path($menu_name)"
"menu_tree_output","Returns an output structure for rendering a menu tree.","menu_tree_output($tree)"
"menu_tree_page_data","Gets the data structure for a named menu tree, based on the current page.","menu_tree_page_data($menu_name, $max_depth = NULL, $only_active_trail = FALSE)"
"menu_tree_set_path","Sets the path for determining the active trail of the specified menu tree.","menu_tree_set_path($menu_name, $path = NULL)"
"menu_uninstall","Implements hook_uninstall().","menu_uninstall()"
"menu_unserialize","Unserializes menu data, using a map to replace path elements.","menu_unserialize($data, $map)"
"menu_update_7000","Migrate the &quot;Default menu for content&quot; setting to individual node types.","menu_update_7000()"
"menu_update_7001","Rename &quot;Primary Links&quot; and &quot;Secondary Links&quot; to their Drupal 7 equivalents.","menu_update_7001()"
"menu_update_7002","Rename the primary/secondary menu blocks to match previously renamed menus.","menu_update_7002(&$sandbox)"
"menu_update_7003","Add missing custom menus to active menus list.","menu_update_7003(&$sandbox)"
"mime_header_decode","Decodes MIME/HTTP encoded header values.","mime_header_decode($header)"
"mime_header_encode","Encodes MIME/HTTP header values that contain incorrectly encoded characters.","mime_header_encode($string)"
"minimal_form_install_configure_form_alter","Implements hook_form_FORM_ID_alter() for install_configure_form().","minimal_form_install_configure_form_alter(&$form, $form_state)"
"minimal_install","Implements hook_install().","minimal_install()"
"module_disable","Disables a given set of modules.","module_disable($module_list, $disable_dependents = TRUE)"
"module_enable","Enables or installs a given list of modules.","module_enable($module_list, $enable_dependencies = TRUE)"
"module_exists","Determines whether a given module exists.","module_exists($module)"
"module_hook","Determines whether a module implements a hook.","module_hook($module, $hook)"
"module_hook_info","Retrieves a list of hooks that are declared through hook_hook_info().","module_hook_info()"
"module_implements","Determines which modules are implementing a hook.","module_implements($hook, $sort = FALSE, $reset = FALSE)"
"module_implements_write_cache","Writes the hook implementation cache.","module_implements_write_cache()"
"module_invoke","Invokes a hook in a particular module.","module_invoke($module, $hook)"
"module_invoke_all","Invokes a hook in all enabled modules that implement it.","module_invoke_all($hook)"
"module_list","Returns a list of currently active modules.","module_list($refresh = FALSE, $bootstrap_refresh = FALSE, $sort = FALSE, $fixed_list = NULL)"
"module_load_all","Loads all the modules that have been enabled in the system table.","module_load_all($bootstrap = FALSE)"
"module_load_all_includes","Loads an include file for each module enabled in the {system} table.","module_load_all_includes($type, $name = NULL)"
"module_load_include","Loads a module include file.","module_load_include($type, $module, $name = NULL)"
"module_load_install","Loads a module&#039;s installation hooks.","module_load_install($module)"
"module_test_enable","Implements hook_enable().","module_test_enable()"
"module_test_hook_dynamic_loading_invoke","Page callback for &#039;hook dynamic loading&#039; test.","module_test_hook_dynamic_loading_invoke()"
"module_test_hook_dynamic_loading_invoke_all","Page callback for &#039;hook dynamic loading&#039; test.","module_test_hook_dynamic_loading_invoke_all()"
"module_test_hook_info","Implements hook_hook_info().","module_test_hook_info()"
"module_test_install","Implements hook_install().","module_test_install()"
"module_test_menu","Implements hook_menu().","module_test_menu()"
"module_test_modules_disabled","Implements hook_modules_disabled().","module_test_modules_disabled($modules)"
"module_test_modules_enabled","Implements hook_modules_enabled().","module_test_modules_enabled($modules)"
"module_test_modules_uninstalled","Implements hook_modules_uninstalled().","module_test_modules_uninstalled($modules)"
"module_test_permission","Implements hook_permission().","module_test_permission()"
"module_test_schema","Implements hook_schema().","module_test_schema()"
"module_test_system_info_alter","Implements hook_system_info_alter().","module_test_system_info_alter(&$info, $file, $type)"
"module_test_test_hook","Implements hook_test_hook().","module_test_test_hook()"
"node_access","Determines whether the current user may perform the operation on the node.","node_access($op, $node, $account = NULL)"
"node_access_acquire_grants","Gets the list of node access grants and writes them to the database.","node_access_acquire_grants($node, $delete = TRUE)"
"node_access_entity_test_page","Page callback for node access entity test page.","node_access_entity_test_page()"
"node_access_grants","Fetches an array of permission IDs granted to the given user ID.","node_access_grants($op, $account = NULL)"
"node_access_needs_rebuild","Flags or unflags the node access grants for rebuilding.","node_access_needs_rebuild($rebuild = NULL)"
"node_access_rebuild","Rebuilds the node access database.","node_access_rebuild($batch_mode = FALSE)"
"node_access_test_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter().","node_access_test_form_node_form_alter(&$form, $form_state)"
"node_access_test_menu","Implements hook_menu().","node_access_test_menu()"
"node_access_test_node_access_records","Implements hook_node_access_records().","node_access_test_node_access_records($node)"
"node_access_test_node_delete",,"node_access_test_node_delete($node)"
"node_access_test_node_grants","Implements hook_node_grants().","node_access_test_node_grants($account, $op)"
"node_access_test_node_insert","Implements hook_node_insert().","node_access_test_node_insert($node)"
"node_access_test_node_load","Implements hook_node_load().","node_access_test_node_load($nodes, $types)"
"node_access_test_node_update","Implements hook_nodeapi_update().","node_access_test_node_update($node)"
"node_access_test_page","Page callback for node access test page.","node_access_test_page()"
"node_access_test_permission","Implements hook_permission().","node_access_test_permission()"
"node_access_test_schema","Implements hook_schema().","node_access_test_schema()"
"node_access_view_all_nodes","Determines whether the user has a global viewing grant for all nodes.","node_access_view_all_nodes($account = NULL)"
"node_access_write_grants","Writes a list of grants to the database, deleting any previously saved ones.","node_access_write_grants($node, $grants, $realm = NULL, $delete = TRUE)"
"node_action_info","Implements hook_action_info().","node_action_info()"
"node_add","Returns a node submission form.","node_add($type)"
"node_add_body_field","Adds default body field to a node type.","node_add_body_field($type, $label = 'Body')"
"node_add_page","Page callback: Displays add content links for available content types.","node_add_page()"
"node_admin_content","Page callback: Form constructor for the content administration form.","node_admin_content($form, $form_state)"
"node_admin_nodes","Form builder: Builds the node administration overview.","node_admin_nodes()"
"node_admin_nodes_submit","Process node_admin_nodes form submissions.","node_admin_nodes_submit($form, &$form_state)"
"node_admin_nodes_validate","Validate node_admin_nodes form submissions.","node_admin_nodes_validate($form, &$form_state)"
"node_admin_paths","Implements hook_admin_paths().","node_admin_paths()"
"node_assign_owner_action","Assigns ownership of a node to a user.","node_assign_owner_action($node, $context)"
"node_assign_owner_action_form","Generates the settings form for node_assign_owner_action().","node_assign_owner_action_form($context)"
"node_assign_owner_action_submit","Saves settings form for node_assign_owner_action().","node_assign_owner_action_submit($form, $form_state)"
"node_assign_owner_action_validate","Validates settings form for node_assign_owner_action().","node_assign_owner_action_validate($form, $form_state)"
"node_block_configure","Implements hook_block_configure().","node_block_configure($delta = '')"
"node_block_info","Implements hook_block_info().","node_block_info()"
"node_block_list_alter","Implements hook_block_list_alter().","node_block_list_alter(&$blocks)"
"node_block_save","Implements hook_block_save().","node_block_save($delta = '', $edit = array())"
"node_block_view","Implements hook_block_view().","node_block_view($delta = '')"
"node_build_content","Builds a structured array representing the node&#039;s content.","node_build_content($node, $view_mode = 'full', $langcode = NULL)"
"node_build_filter_query","Applies filters for node administration filters based on session.","node_build_filter_query(SelectQueryInterface $query)"
"node_configure_rebuild_confirm","Menu callback: confirm rebuilding of permissions.","node_configure_rebuild_confirm()"
"node_configure_rebuild_confirm_submit","Handler for wipe confirmation","node_configure_rebuild_confirm_submit($form, &$form_state)"
"node_content_form","Implements hook_form().","node_content_form($node, $form_state)"
"node_cron","Implements hook_cron().","node_cron()"
"node_delete","Deletes a node.","node_delete($nid)"
"node_delete_confirm","Form constructor for the node deletion confirmation form.","node_delete_confirm($form, &$form_state, $node)"
"node_delete_confirm_submit","Executes node deletion.","node_delete_confirm_submit($form, &$form_state)"
"node_delete_multiple","Deletes multiple nodes.","node_delete_multiple($nids)"
"node_entity_info","Implements hook_entity_info().","node_entity_info()"
"node_feed","Generates and prints an RSS feed.","node_feed($nids = FALSE, $channel = array())"
"node_field_display_node_alter","Implements hook_field_display_ENTITY_TYPE_alter().","node_field_display_node_alter(&$display, $context)"
"node_field_extra_fields","Implements hook_field_extra_fields().","node_field_extra_fields()"
"node_file_download_access","Implements hook_file_download_access().","node_file_download_access($field, $entity_type, $entity)"
"node_filters","List node administration filters that can be applied.","node_filters()"
"node_filter_form","Returns the node administration filters form array to node_admin_content().","node_filter_form()"
"node_filter_form_submit","Form submission handler for node_filter_form().","node_filter_form_submit($form, &$form_state)"
"node_form","Form constructor for the node add/edit form.","node_form($form, &$form_state, $node)"
"node_forms","Implements hook_forms().","node_forms()"
"node_form_block_add_block_form_alter","Implements hook_form_FORMID_alter().","node_form_block_add_block_form_alter(&$form, &$form_state)"
"node_form_block_admin_configure_alter","Implements hook_form_FORMID_alter().","node_form_block_admin_configure_alter(&$form, &$form_state)"
"node_form_block_admin_configure_submit","Form submission handler for node_form_block_admin_configure_alter().","node_form_block_admin_configure_submit($form, &$form_state)"
"node_form_block_custom_block_delete_alter","Implements hook_form_FORMID_alter().","node_form_block_custom_block_delete_alter(&$form, &$form_state)"
"node_form_block_custom_block_delete_submit","Form submission handler for node_form_block_custom_block_delete_alter().","node_form_block_custom_block_delete_submit($form, &$form_state)"
"node_form_build_preview","Form submission handler for node_form().","node_form_build_preview($form, &$form_state)"
"node_form_delete_submit","Form submission handler for node_form().","node_form_delete_submit($form, &$form_state)"
"node_form_search_form_alter","Implements hook_form_FORM_ID_alter().","node_form_search_form_alter(&$form, $form_state)"
"node_form_submit","Form submission handler for node_form().","node_form_submit($form, &$form_state)"
"node_form_submit_build_node","Updates the form state&#039;s node entity by processing this submission&#039;s values.","node_form_submit_build_node($form, &$form_state)"
"node_form_validate","Form validation handler for node_form().","node_form_validate($form, &$form_state)"
"node_get_recent","Finds the most recently changed nodes that are available to the current user.","node_get_recent($number = 10)"
"node_help","Implements hook_help().","node_help($path, $arg)"
"node_hook","Determines whether a node hook exists.","node_hook($node, $hook)"
"node_install","Implements hook_install().","node_install()"
"node_invoke","Invokes a node hook.","node_invoke($node, $hook, $a2 = NULL, $a3 = NULL, $a4 = NULL)"
"node_is_page","Returns whether the current page is the full page view of the passed-in node.","node_is_page($node)"
"node_last_changed","Finds the last time a node was changed.","node_last_changed($nid)"
"node_last_viewed","Retrieves the timestamp for the current user&#039;s last view of a specified node.","node_last_viewed($nid)"
"node_list_permissions","Helper function to generate standard node permission list for a given type.","node_list_permissions($type)"
"node_load","Loads a node object from the database.","node_load($nid = NULL, $vid = NULL, $reset = FALSE)"
"node_load_multiple","Loads node entities from the database.","node_load_multiple($nids = array(), $conditions = array(), $reset = FALSE)"
"node_make_sticky_action","Sets the sticky-at-top-of-list property of a node to 1.","node_make_sticky_action($node, $context = array())"
"node_make_unsticky_action","Sets the sticky-at-top-of-list property of a node to 0.","node_make_unsticky_action($node, $context = array())"
"node_mark","Determines the type of marker to be displayed for a given node.","node_mark($nid, $timestamp)"
"node_mass_update","Make mass update of nodes, changing all nodes in the $nodes array
to update them with the field values in $updates.","node_mass_update($nodes, $updates)"
"node_menu","Implements hook_menu().","node_menu()"
"node_menu_local_tasks_alter","Implements hook_menu_local_tasks_alter().","node_menu_local_tasks_alter(&$data, $router_item, $root_path)"
"node_modules_enabled","Implements hook_modules_enabled().","node_modules_enabled($modules)"
"node_modules_uninstalled","Implements hook_modules_uninstalled().","node_modules_uninstalled($modules)"
"node_multiple_delete_confirm","Multiple node deletion confirmation form for node_admin_content().","node_multiple_delete_confirm($form, &$form_state, $nodes)"
"node_multiple_delete_confirm_submit","Form submission handler for node_multiple_delete_confirm().","node_multiple_delete_confirm_submit($form, &$form_state)"
"node_node_access","Implements hook_node_access().","node_node_access($node, $op, $account)"
"node_node_operations","Implements hook_node_operations().","node_node_operations()"
"node_node_type_insert","Implements hook_node_type_insert().","node_node_type_insert($info)"
"node_node_type_update","Implements hook_node_type_update().","node_node_type_update($info)"
"node_object_prepare","Prepares a node object for editing.","node_object_prepare($node)"
"node_overview_types","Displays the content type admin overview page.","node_overview_types()"
"node_page_default","Menu callback: Generates a listing of promoted nodes.","node_page_default()"
"node_page_edit","Menu callback; presents the node editing form.","node_page_edit($node)"
"node_page_title","Title callback: Returns the title of the node.","node_page_title($node)"
"node_page_view","Menu callback: Displays a single node.","node_page_view($node)"
"node_permission","Implements hook_permission().","node_permission()"
"node_permissions_get_configured_types","Returns an array of node types that should be managed by permissions.","node_permissions_get_configured_types()"
"node_preview","Generates a node preview.","node_preview($node)"
"node_promote_action","Sets the promote property of a node to 1.","node_promote_action($node, $context = array())"
"node_publish_action","Sets the status of a node to 1 (published).","node_publish_action($node, $context = array())"
"node_query_entity_field_access_alter","Implements hook_query_TAG_alter().","node_query_entity_field_access_alter(QueryAlterableInterface $query)"
"node_query_node_access_alter","Implements hook_query_TAG_alter().","node_query_node_access_alter(QueryAlterableInterface $query)"
"node_ranking","Implements hook_ranking().","node_ranking()"
"node_rdf_mapping","Implements hook_rdf_mapping().","node_rdf_mapping()"
"node_requirements","Implements hook_requirements().","node_requirements($phase)"
"node_revision_delete","Deletes a node revision.","node_revision_delete($revision_id)"
"node_revision_delete_confirm","Form constructor for the revision deletion confirmation form.","node_revision_delete_confirm($form, $form_state, $node_revision)"
"node_revision_delete_confirm_submit","Form submission handler for node_revision_delete_confirm().","node_revision_delete_confirm_submit($form, &$form_state)"
"node_revision_list","Returns a list of all the existing revision numbers.","node_revision_list($node)"
"node_revision_overview","Generates an overview table of older revisions of a node.","node_revision_overview($node)"
"node_revision_revert_confirm","Asks for confirmation of the reversion to prevent against CSRF attacks.","node_revision_revert_confirm($form, $form_state, $node_revision)"
"node_revision_revert_confirm_submit","Form submission handler for node_revision_revert_confirm().","node_revision_revert_confirm_submit($form, &$form_state)"
"node_save","Saves changes to a node or adds a new node.","node_save($node)"
"node_save_action","Saves a node.","node_save_action($node)"
"node_schema","Implements hook_schema().","node_schema()"
"node_search_access","Implements hook_search_access().","node_search_access()"
"node_search_admin","Implements hook_search_admin().","node_search_admin()"
"node_search_execute","Implements hook_search_execute().","node_search_execute($keys = NULL, $conditions = NULL)"
"node_search_info","Implements hook_search_info().","node_search_info()"
"node_search_reset","Implements hook_search_reset().","node_search_reset()"
"node_search_status","Implements hook_search_status().","node_search_status()"
"node_search_validate","Form validation handler for node_form_alter().","node_search_validate($form, &$form_state)"
"node_show","Generates an array which displays a node detail page.","node_show($node, $message = FALSE)"
"node_submit","Prepares node for saving by populating author and creation date.","node_submit($node)"
"node_tag_new","Updates the &#039;last viewed&#039; timestamp of the specified node for current user.","node_tag_new($node)"
"node_test_entity_view_mode_alter","Implements hook_entity_view_mode_alter().","node_test_entity_view_mode_alter(&$view_mode, $context)"
"node_test_exception_node_insert","Implements hook_node_insert().","node_test_exception_node_insert($node)"
"node_test_node_access_records","Implements hook_node_access_records().","node_test_node_access_records($node)"
"node_test_node_access_records_alter","Implements hook_node_access_records_alter().","node_test_node_access_records_alter(&$grants, $node)"
"node_test_node_grants","Implements hook_node_grants().","node_test_node_grants($account, $op)"
"node_test_node_grants_alter","Implements hook_node_grants_alter().","node_test_node_grants_alter(&$grants, $account, $op)"
"node_test_node_insert","Implements hook_node_insert().","node_test_node_insert($node)"
"node_test_node_load","Implements hook_node_load().","node_test_node_load($nodes, $types)"
"node_test_node_presave","Implements hook_node_presave().","node_test_node_presave($node)"
"node_test_node_update","Implements hook_node_update().","node_test_node_update($node)"
"node_test_node_view","Implements hook_node_view().","node_test_node_view($node, $view_mode)"
"node_theme","Implements hook_theme().","node_theme()"
"node_title_list","Gathers a listing of links to nodes.","node_title_list($result, $title = NULL)"
"node_tokens","Implements hook_tokens().","node_tokens($type, $tokens, array $data = array(), array $options = array())"
"node_token_info","Implements hook_token_info().","node_token_info()"
"node_types_rebuild","Updates the database cache of node types.","node_types_rebuild()"
"node_type_cache_reset","Clears the node type cache.","node_type_cache_reset()"
"node_type_delete","Deletes a node type from the database.","node_type_delete($type)"
"node_type_delete_confirm","Menu callback; delete a single content type.","node_type_delete_confirm($form, &$form_state, $type)"
"node_type_delete_confirm_submit","Process content type delete confirm submissions.","node_type_delete_confirm_submit($form, &$form_state)"
"node_type_form","Form constructor for the node type editing form.","node_type_form($form, &$form_state, $type = NULL)"
"node_type_form_submit","Form submission handler for node_type_form().","node_type_form_submit($form, &$form_state)"
"node_type_form_validate","Form validation handler for node_type_form().","node_type_form_validate($form, &$form_state)"
"node_type_get_base","Returns the node type base of the passed node or node type string.","node_type_get_base($node)"
"node_type_get_name","Returns the node type name of the passed node or node type string.","node_type_get_name($node)"
"node_type_get_names","Returns a list of available node type names.","node_type_get_names()"
"node_type_get_type","Returns the node type of the passed node or node type string.","node_type_get_type($node)"
"node_type_get_types","Returns a list of all the available node types.","node_type_get_types()"
"node_type_load","Menu argument loader: loads a node type by string.","node_type_load($name)"
"node_type_page_title","Title callback: Returns the unsanitized title of the node type edit form.","node_type_page_title($type)"
"node_type_reset","Resets relevant fields of a module-defined node type to their default values.","node_type_reset($type)"
"node_type_save","Saves a node type to the database.","node_type_save($info)"
"node_type_set_defaults","Sets the default values for a node type.","node_type_set_defaults($info = array())"
"node_type_update_nodes","Updates all nodes of one type to be of another type.","node_type_update_nodes($old_type, $type)"
"node_unpromote_action","Sets the promote property of a node to 0.","node_unpromote_action($node, $context = array())"
"node_unpublish_action","Sets the status of a node to 0 (unpublished).","node_unpublish_action($node, $context = array())"
"node_unpublish_by_keyword_action","Unpublishes a node containing certain keywords.","node_unpublish_by_keyword_action($node, $context)"
"node_unpublish_by_keyword_action_form","Generates settings form for node_unpublish_by_keyword_action().","node_unpublish_by_keyword_action_form($context)"
"node_unpublish_by_keyword_action_submit","Saves settings form for node_unpublish_by_keyword_action().","node_unpublish_by_keyword_action_submit($form, $form_state)"
"node_update_7000","Upgrade the node type table and fix node type &#039;module&#039; attribute to avoid name-space conflicts.","node_update_7000()"
"node_update_7001","Rename {node_revisions} table to {node_revision}.","node_update_7001()"
"node_update_7002","Extend the node_promote_status index to include all fields required for the node page query.","node_update_7002()"
"node_update_7003","Remove the node_counter if the statistics module is uninstalled.","node_update_7003()"
"node_update_7004","Extend the existing default preview and teaser settings to all node types.","node_update_7004()"
"node_update_7005","Add status/comment/promote and sticky columns to the {node_revision} table.","node_update_7005()"
"node_update_7006","Convert body and teaser from node properties to fields, and migrate status/comment/promote and sticky columns to the {node_revision} table.","node_update_7006(&$sandbox)"
"node_update_7007","Remove column min_word_count.","node_update_7007()"
"node_update_7008","Split the &#039;administer nodes&#039; permission from &#039;access content overview&#039;.","node_update_7008()"
"node_update_7009","Convert node languages from the empty string to LANGUAGE_NONE.","node_update_7009()"
"node_update_7010","Add the {block_node_type} table.","node_update_7010()"
"node_update_7011","Update the database from Drupal 6 to match the schema.","node_update_7011()"
"node_update_7012","Switches body fields to untranslatable while upgrading from D6 and makes them language neutral.","node_update_7012()"
"node_update_7013","Change {node}.vid default value from 0 to NULL to avoid deadlock issues on MySQL.","node_update_7013()"
"node_update_7014","Add an index on {node}.language.","node_update_7014()"
"node_update_dependencies","Implements hook_update_dependencies().","node_update_dependencies()"
"node_update_index","Implements hook_update_index().","node_update_index()"
"node_uri","Implements callback_entity_info_uri().","node_uri($node)"
"node_user_cancel","Implements hook_user_cancel().","node_user_cancel($edit, $account, $method)"
"node_user_delete","Implements hook_user_delete().","node_user_delete($account)"
"node_validate","Implements hook_validate().","node_validate($node, $form, &$form_state)"
"node_view","Generates an array for rendering the given node.","node_view($node, $view_mode = 'full', $langcode = NULL)"
"node_view_multiple","Constructs a drupal_render() style array from an array of loaded nodes.","node_view_multiple($nodes, $view_mode = 'teaser', $weight = 0, $langcode = NULL)"
"number_field_formatter_info","Implements hook_field_formatter_info().","number_field_formatter_info()"
"number_field_formatter_settings_form","Implements hook_field_formatter_settings_form().","number_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)"
"number_field_formatter_settings_summary","Implements hook_field_formatter_settings_summary().","number_field_formatter_settings_summary($field, $instance, $view_mode)"
"number_field_formatter_view","Implements hook_field_formatter_view().","number_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"number_field_info","Implements hook_field_info().","number_field_info()"
"number_field_instance_settings_form","Implements hook_field_instance_settings_form().","number_field_instance_settings_form($field, $instance)"
"number_field_is_empty","Implements hook_field_is_empty().","number_field_is_empty($item, $field)"
"number_field_presave","Implements hook_field_presave().","number_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)"
"number_field_schema","Implements hook_field_schema().","number_field_schema($field)"
"number_field_settings_form","Implements hook_field_settings_form().","number_field_settings_form($field, $instance, $has_data)"
"number_field_validate","Implements hook_field_validate().","number_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"number_field_widget_error","Implements hook_field_widget_error().","number_field_widget_error($element, $error, $form, &$form_state)"
"number_field_widget_form","Implements hook_field_widget_form().","number_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"number_field_widget_info","Implements hook_field_widget_info().","number_field_widget_info()"
"number_field_widget_validate","FAPI validation of an individual number element.","number_field_widget_validate($element, &$form_state)"
"number_help","Implements hook_help().","number_help($path, $arg)"
"openid_admin_paths","Implements hook_admin_paths().","openid_admin_paths()"
"openid_association","Attempt to create a shared secret with the OpenID Provider.","openid_association($op_endpoint)"
"openid_association_request",,"openid_association_request($public)"
"openid_authentication","Authenticate a user or attempt registration.","openid_authentication($response)"
"openid_authentication_page","Menu callback; Process an OpenID authentication.","openid_authentication_page()"
"openid_authentication_request",,"openid_authentication_request($claimed_id, $identity, $return_to = '', $assoc_handle = '', $service)"
"openid_begin","The initial step of OpenID authentication responsible for the following:","openid_begin($claimed_id, $return_to = '', $form_values = array())"
"openid_complete","Completes OpenID authentication by validating returned data from the OpenID
Provider.","openid_complete($response = array())"
"openid_cron","Remove expired nonces from the database.","openid_cron()"
"openid_discovery","Perform discovery on a claimed ID to determine the OpenID provider endpoint.","openid_discovery($claimed_id)"
"openid_extract_ax_values","Extracts values from an OpenID AX Response.","openid_extract_ax_values($values, $uris)"
"openid_extract_namespace","Extract all the parameters belonging to an extension in a response message.","openid_extract_namespace($response, $extension_namespace, $fallback_prefix = NULL, $only_signed = FALSE)"
"openid_form_user_login_alter","Implements hook_form_FORM_ID_alter().","openid_form_user_login_alter(&$form, &$form_state)"
"openid_form_user_login_block_alter","Implements hook_form_FORM_ID_alter().","openid_form_user_login_block_alter(&$form, &$form_state)"
"openid_form_user_register_form_alter","Implements hook_form_FORM_ID_alter().","openid_form_user_register_form_alter(&$form, &$form_state)"
"openid_help","Implements hook_help().","openid_help($path, $arg)"
"openid_login_validate","Login form _validate hook","openid_login_validate($form, &$form_state)"
"openid_menu","Implements hook_menu().","openid_menu()"
"openid_menu_site_status_alter","Implements hook_menu_site_status_alter().","openid_menu_site_status_alter(&$menu_site_status, $path)"
"openid_normalize","Normalize the given identifier.","openid_normalize($identifier)"
"openid_openid_discovery_method_info","Implements hook_openid_discovery_method_info().","openid_openid_discovery_method_info()"
"openid_openid_normalization_method_info","Implements hook_openid_normalization_method_info().","openid_openid_normalization_method_info()"
"openid_redirect","Creates a js auto-submit redirect for (for the 2.x protocol)","openid_redirect($url, $message)"
"openid_redirect_form",,"openid_redirect_form($form, &$form_state, $url, $message)"
"openid_redirect_http","Performs an HTTP 302 redirect (for the 1.x protocol).","openid_redirect_http($url, $message)"
"openid_requirements","Implements hook_requirements().","openid_requirements($phase)"
"openid_schema","Implements hook_schema().","openid_schema()"
"openid_test_endpoint","Menu callback; OpenID Provider Endpoint.","openid_test_endpoint()"
"openid_test_html_openid1","Menu callback; regular HTML page with OpenID 1.0 &lt;link&gt; element.","openid_test_html_openid1()"
"openid_test_html_openid2","Menu callback; regular HTML page with OpenID 2.0 &lt;link&gt; element.","openid_test_html_openid2()"
"openid_test_install","Implements hook_install().","openid_test_install()"
"openid_test_menu","Implements hook_menu().","openid_test_menu()"
"openid_test_menu_site_status_alter","Implements hook_menu_site_status_alter().","openid_test_menu_site_status_alter(&$menu_site_status, $path)"
"openid_test_redirect","Menu callback; redirect during Normalization/Discovery.","openid_test_redirect($count = 0)"
"openid_test_redirected_method","Menu callback; respond with appropriate callback.","openid_test_redirected_method($method1, $method2)"
"openid_test_yadis_http_equiv","Menu callback; regular HTML page with &lt;meta&gt; element.","openid_test_yadis_http_equiv()"
"openid_test_yadis_xrds","Menu callback; XRDS document that references the OP Endpoint URL.","openid_test_yadis_xrds()"
"openid_test_yadis_x_xrds_location","Menu callback; regular HTML page with an X-XRDS-Location HTTP header.","openid_test_yadis_x_xrds_location()"
"openid_update_6000","Add a table to store nonces.","openid_update_6000()"
"openid_update_7000","Bind associations to their providers.","openid_update_7000()"
"openid_user_add","Form builder; Add an OpenID identity.","openid_user_add()"
"openid_user_add_submit",,"openid_user_add_submit($form, &$form_state)"
"openid_user_add_validate",,"openid_user_add_validate($form, &$form_state)"
"openid_user_delete_form","Menu callback; Delete the specified OpenID identity from the system.","openid_user_delete_form($form, $form_state, $account, $aid = 0)"
"openid_user_delete_form_submit",,"openid_user_delete_form_submit($form, &$form_state)"
"openid_user_identities","Menu callback; Manage OpenID identities for the specified user.","openid_user_identities($account)"
"openid_user_insert","Implements hook_user_insert().","openid_user_insert(&$edit, $account, $category)"
"openid_user_login","Implements hook_user_login().","openid_user_login(&$edit, $account)"
"openid_user_logout","Implements hook_user_logout().","openid_user_logout($account)"
"openid_verify_assertion","Attempt to verify the response received from the OpenID Provider.","openid_verify_assertion($service, $response)"
"openid_verify_assertion_nonce","Verify that the nonce has not been used in earlier assertions from the same OpenID provider.","openid_verify_assertion_nonce($service, $response)"
"openid_verify_assertion_return_url","Verify that openid.return_to matches the current URL.","openid_verify_assertion_return_url($service, $response)"
"openid_verify_assertion_signature","Verify the signature of the response received from the OpenID provider.","openid_verify_assertion_signature($service, $association, $response)"
"options_array_flatten","Flattens an array of allowed values.","options_array_flatten($array)"
"options_array_transpose","Manipulates a 2D array to reverse rows and columns.","options_array_transpose($array)"
"options_field_widget_error","Implements hook_field_widget_error().","options_field_widget_error($element, $error, $form, &$form_state)"
"options_field_widget_form","Implements hook_field_widget_form().","options_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"options_field_widget_info","Implements hook_field_widget_info().","options_field_widget_info()"
"options_field_widget_settings_form","Implements hook_field_widget_settings_form().","options_field_widget_settings_form($field, $instance)"
"options_field_widget_validate","Form element validation handler for options element.","options_field_widget_validate($element, &$form_state)"
"options_help","Implements hook_help().","options_help($path, $arg)"
"options_theme","Implements hook_theme().","options_theme()"
"overlay_admin_paths","Implements hook_admin_paths().","overlay_admin_paths()"
"overlay_ajax_render_region","Prints the markup obtained by rendering a single region of the page.","overlay_ajax_render_region($region)"
"overlay_batch_alter","Implements hook_batch_alter().","overlay_batch_alter(&$batch)"
"overlay_block_list_alter","Implements hook_block_list_alter().","overlay_block_list_alter(&$blocks)"
"overlay_close_dialog","Requests that the overlay closes when the page is displayed.","overlay_close_dialog($redirect = NULL, $redirect_options = array())"
"overlay_deliver_empty_page","Prints an empty page.","overlay_deliver_empty_page()"
"overlay_disable_message","Returns a renderable array representing a message for disabling the overlay.","overlay_disable_message()"
"overlay_display_empty_page","Stores and returns whether an empty page override is needed.","overlay_display_empty_page($value = NULL)"
"overlay_drupal_goto_alter","Implements hook_drupal_goto_alter().","overlay_drupal_goto_alter(&$path, &$options, &$http_response_code)"
"overlay_enable","Implements hook_enable().","overlay_enable()"
"overlay_exit","Implements hook_exit().","overlay_exit()"
"overlay_form_user_profile_form_alter","Implements hook_form_FORM_ID_alter().","overlay_form_user_profile_form_alter(&$form, &$form_state)"
"overlay_get_mode","Gets the current overlay mode.","overlay_get_mode()"
"overlay_get_regions_to_render","Returns a list of page regions that rendering should be limited to.","overlay_get_regions_to_render()"
"overlay_get_rendered_content","Returns any rendered content that was stored earlier in the page request.","overlay_get_rendered_content()"
"overlay_help","Implements hook_help().","overlay_help($path, $arg)"
"overlay_init","Implements hook_init().","overlay_init()"
"overlay_library","Implements hook_library().","overlay_library()"
"overlay_menu","Implements hook_menu().","overlay_menu()"
"overlay_overlay_child_initialize","Implements hook_overlay_child_initialize().","overlay_overlay_child_initialize()"
"overlay_overlay_parent_initialize","Implements hook_overlay_parent_initialize().","overlay_overlay_parent_initialize()"
"overlay_page_alter","Implements hook_page_alter().","overlay_page_alter(&$page)"
"overlay_page_delivery_callback_alter","Implements hook_page_delivery_callback_alter().","overlay_page_delivery_callback_alter(&$callback)"
"overlay_permission","Implements hook_permission().","overlay_permission()"
"overlay_preprocess_html","Implements hook_preprocess_html().","overlay_preprocess_html(&$variables)"
"overlay_preprocess_maintenance_page","Implements hook_preprocess_maintenance_page().","overlay_preprocess_maintenance_page(&$variables)"
"overlay_preprocess_page","Implements hook_preprocess_page().","overlay_preprocess_page(&$variables)"
"overlay_regions","Returns a list of page regions that appear in the overlay.","overlay_regions()"
"overlay_render_region","Renders an individual page region.","overlay_render_region($region)"
"overlay_request_page_refresh","Requests that the entire parent window is reloaded when the overlay closes.","overlay_request_page_refresh()"
"overlay_request_refresh","Requests that the parent window refreshes a particular page region.","overlay_request_refresh($region)"
"overlay_set_mode","Sets the overlay mode and adds proper JavaScript and styles to the page.","overlay_set_mode($mode = NULL)"
"overlay_set_regions_to_render","Sets the regions of the page that rendering will be limited to.","overlay_set_regions_to_render($regions = NULL)"
"overlay_store_rendered_content","Stores strings representing rendered HTML content.","overlay_store_rendered_content($id = NULL, $content = NULL)"
"overlay_supplemental_regions","Returns a list of supplemental page regions for the overlay.","overlay_supplemental_regions()"
"overlay_system_info_alter","Implements hook_system_info_alter().","overlay_system_info_alter(&$info, $file, $type)"
"overlay_theme","Implements hook_theme().","overlay_theme()"
"overlay_trigger_refresh","Checks if the parent window needs to be refreshed on this page load.","overlay_trigger_refresh()"
"overlay_user_dismiss_message","Page callback: Dismisses the overlay accessibility message for this user.","overlay_user_dismiss_message()"
"overlay_user_presave","Implements hook_user_presave().","overlay_user_presave(&$edit, $account, $category)"
"pager_default_initialize","Initializes a pager for theme(&#039;pager&#039;).","pager_default_initialize($total, $limit, $element = 0)"
"pager_find_page","Returns the current page being requested for display within a pager.","pager_find_page($element = 0)"
"pager_get_query_parameters","Compose a URL query parameter array for pager links.","pager_get_query_parameters()"
"pager_load_array","Helper function","pager_load_array($value, $element, $old_array)"
"parse_size","Parses a given byte count.","parse_size($size)"
"password_confirm_validate","Validates a password_confirm element.","password_confirm_validate($element, &$element_state)"
"path_admin_delete_confirm","Form constructor for the path deletion form.","path_admin_delete_confirm($form, &$form_state, $path)"
"path_admin_delete_confirm_submit","Form submission handler for path_admin_delete_confirm().","path_admin_delete_confirm_submit($form, &$form_state)"
"path_admin_edit","Page callback: Returns a form creating or editing a path alias.","path_admin_edit($path = array())"
"path_admin_filter_form","Form constructor for the path admin overview filter form.","path_admin_filter_form($form, &$form_state, $keys = '')"
"path_admin_filter_form_submit_filter","Form submission handler for the path_admin_filter_form() Filter button.","path_admin_filter_form_submit_filter($form, &$form_state)"
"path_admin_filter_form_submit_reset","Form submission handler for the path_admin_filter_form() Reset button.","path_admin_filter_form_submit_reset($form, &$form_state)"
"path_admin_form","Form constructor for the path administration form.","path_admin_form($form, &$form_state, $path = array('source' => '', 'alias' => '', 'language' => LANGUAGE_NONE, 'pid' => NULL))"
"path_admin_form_delete_submit","Form submission handler for the &#039;Delete&#039; button on path_admin_form().","path_admin_form_delete_submit($form, &$form_state)"
"path_admin_form_submit","Form submission handler for path_admin_form().","path_admin_form_submit($form, &$form_state)"
"path_admin_form_validate","Form validation handler for path_admin_form().","path_admin_form_validate($form, &$form_state)"
"path_admin_overview","Returns a listing of all defined URL aliases.","path_admin_overview($keys = NULL)"
"path_delete","Delete a URL alias.","path_delete($criteria)"
"path_form_element_validate","Form element validation handler for URL alias form element.","path_form_element_validate($element, &$form_state, $complete_form)"
"path_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter() for node_form().","path_form_node_form_alter(&$form, $form_state)"
"path_form_taxonomy_form_term_alter","Implements hook_form_FORM_ID_alter() for taxonomy_form_term().","path_form_taxonomy_form_term_alter(&$form, $form_state)"
"path_get_admin_paths","Gets a list of administrative and non-administrative paths.","path_get_admin_paths()"
"path_help","Implements hook_help().","path_help($path, $arg)"
"path_is_admin","Determines whether a path is in the administrative section of the site.","path_is_admin($path)"
"path_load","Fetches a specific URL alias from the database.","path_load($conditions)"
"path_menu","Implements hook_menu().","path_menu()"
"path_node_delete","Implements hook_node_delete().","path_node_delete($node)"
"path_node_insert","Implements hook_node_insert().","path_node_insert($node)"
"path_node_update","Implements hook_node_update().","path_node_update($node)"
"path_permission","Implements hook_permission().","path_permission()"
"path_save","Save a path alias to the database.","path_save(&$path)"
"path_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","path_taxonomy_term_delete($term)"
"path_taxonomy_term_insert","Implements hook_taxonomy_term_insert().","path_taxonomy_term_insert($term)"
"path_taxonomy_term_update","Implements hook_taxonomy_term_update().","path_taxonomy_term_update($term)"
"path_test_path_update","Implements hook_path_update().","path_test_path_update($path)"
"path_test_reset","Resets the path test results.","path_test_reset()"
"path_to_theme","Returns the path to the current themed element.","path_to_theme()"
"phptemplate_init","Implements hook_init().","phptemplate_init($template)"
"phptemplate_theme","Implements hook_theme().","phptemplate_theme($existing, $type, $theme, $path)"
"php_disable","Implements hook_disable().","php_disable()"
"php_enable","Implements hook_enable().","php_enable()"
"php_eval","Evaluates a string of PHP code.","php_eval($code)"
"php_filter_info","Implements hook_filter_info().","php_filter_info()"
"php_help","Implements hook_help().","php_help($path, $arg)"
"php_permission","Implements hook_permission().","php_permission()"
"poll_block_info","Implements hook_block_info().","poll_block_info()"
"poll_block_latest_poll_view","Return content for &#039;latest poll&#039; block.","poll_block_latest_poll_view($node)"
"poll_block_view","Implements hook_block_view().","poll_block_view($delta = '')"
"poll_cancel","Submit callback for poll_cancel_form().","poll_cancel($form, &$form_state)"
"poll_cancel_form","Builds the cancel form for a poll.","poll_cancel_form($form, &$form_state, $nid)"
"poll_choice_js","Ajax callback in response to new choices being added to the form.","poll_choice_js($form, $form_state)"
"poll_cron","Implements hook_cron().","poll_cron()"
"poll_delete","Implements hook_delete().","poll_delete($node)"
"poll_field_attach_prepare_translation_alter","Implements hook_field_attach_prepare_translation_alter().","poll_field_attach_prepare_translation_alter(&$entity, $context)"
"poll_field_extra_fields","Implements hook_field_extra_fields().","poll_field_extra_fields()"
"poll_form","Implements hook_form().","poll_form($node, &$form_state)"
"poll_help","Implements hook_help().","poll_help($path, $arg)"
"poll_insert","Implements hook_insert().","poll_insert($node)"
"poll_load","Implements hook_load().","poll_load($nodes)"
"poll_menu","Implements hook_menu().","poll_menu()"
"poll_more_choices_submit","Submit handler to add more choices to a poll form.","poll_more_choices_submit($form, &$form_state)"
"poll_node_form_submit","Form submit handler for node_form().","poll_node_form_submit(&$form, &$form_state)"
"poll_node_info","Implements hook_node_info().","poll_node_info()"
"poll_page","Menu callback to provide a simple list of all polls available.","poll_page()"
"poll_permission","Implements hook_permission().","poll_permission()"
"poll_rdf_mapping","Implements hook_rdf_mapping().","poll_rdf_mapping()"
"poll_results","Callback for the &#039;results&#039; tab for polls you can vote on","poll_results($node)"
"poll_schema","Implements hook_schema().","poll_schema()"
"poll_teaser","Creates a simple teaser that lists all the choices.","poll_teaser($node)"
"poll_theme","Implements hook_theme().","poll_theme()"
"poll_tokens","Implements hook_tokens().","poll_tokens($type, $tokens, array $data = array(), array $options = array())"
"poll_token_info","Implements hook_token_info().","poll_token_info()"
"poll_update","Implements hook_update().","poll_update($node)"
"poll_update_7001","Use the poll_choice primary key to record votes in poll_votes rather than
the choice order. Rename chorder to weight.","poll_update_7001()"
"poll_update_7002","Add timestamp field to {poll_vote}.","poll_update_7002()"
"poll_update_7003","Change the weight column to normal int.","poll_update_7003()"
"poll_update_7004","Update the database to match the schema.","poll_update_7004()"
"poll_user_cancel","Implements hook_user_cancel().","poll_user_cancel($edit, $account, $method)"
"poll_user_delete","Implements hook_user_delete().","poll_user_delete($account)"
"poll_validate","Implements hook_validate().","poll_validate($node, $form)"
"poll_view","Implements hook_view().","poll_view($node, $view_mode)"
"poll_view_results","Generates a graphical representation of the results of a poll.","poll_view_results($node, $view_mode, $block = FALSE)"
"poll_view_voting","Generates the voting form for a poll.","poll_view_voting($form, &$form_state, $node, $block = FALSE)"
"poll_view_voting_validate","Validation function for processing votes","poll_view_voting_validate($form, &$form_state)"
"poll_vote","Submit handler for processing a vote.","poll_vote($form, &$form_state)"
"poll_votes","Callback for the &#039;votes&#039; tab for polls you can see other votes on","poll_votes($node)"
"profile_admin_overview","Form builder to display a listing of all editable profile fields.","profile_admin_overview($form)"
"profile_admin_overview_submit","Submit handler to update changed profile field weights and categories.","profile_admin_overview_submit($form, &$form_state)"
"profile_admin_settings_autocomplete","Retrieve a pipe delimited string of autocomplete suggestions for profile categories","profile_admin_settings_autocomplete($string)"
"profile_autocomplete","Callback to allow autocomplete of profile text fields.","profile_autocomplete($field, $string)"
"profile_block_configure","Implements hook_block_configure().","profile_block_configure($delta = '')"
"profile_block_info","Implements hook_block_info().","profile_block_info()"
"profile_block_save","Implements hook_block_save().","profile_block_save($delta = '', $edit = array())"
"profile_block_view","Implements hook_block_view().","profile_block_view($delta = '')"
"profile_browse","Menu callback; display a list of user information.","profile_browse()"
"profile_category_access","Menu item access callback - check if a user has access to a profile category.","profile_category_access($account, $category)"
"profile_field_delete","Menu callback; deletes a field from all user profiles.","profile_field_delete($form, &$form_state, $fid)"
"profile_field_delete_submit","Process a field delete form submission.","profile_field_delete_submit($form, &$form_state)"
"profile_field_form","Menu callback: Generate a form to add/edit a user profile field.","profile_field_form($form, &$form_state, $arg = NULL)"
"profile_field_form_submit","Process profile_field_form submissions.","profile_field_form_submit($form, &$form_state)"
"profile_field_form_validate","Validate profile_field_form submissions.","profile_field_form_validate($form, &$form_state)"
"profile_form_alter","Implements hook_form_alter().","profile_form_alter(&$form, &$form_state, $form_id)"
"profile_help","Implements hook_help().","profile_help($path, $arg)"
"profile_menu","Implements hook_menu().","profile_menu()"
"profile_save_profile",,"profile_save_profile(&$edit, $account, $category, $register = FALSE)"
"profile_schema","Implements hook_schema().","profile_schema()"
"profile_theme","Implements hook_theme().","profile_theme()"
"profile_uninstall","Implements hook_uninstall().","profile_uninstall()"
"profile_update_7001","Rename {profile_fields} table to {profile_field} and {profile_values} to {profile_value}.","profile_update_7001()"
"profile_update_7002","Change the weight column to normal int.","profile_update_7002()"
"profile_user_cancel","Implements hook_user_cancel().","profile_user_cancel($edit, $account, $method)"
"profile_user_categories","Implements hook_user_categories().","profile_user_categories()"
"profile_user_delete","Implements hook_user_delete().","profile_user_delete($account)"
"profile_user_form_validate","Form validation handler for the user register/profile form.","profile_user_form_validate($form, &$form_state)"
"profile_user_insert","Implements hook_user_insert().","profile_user_insert(&$edit, $account, $category)"
"profile_user_load","Implements hook_user_load().","profile_user_load($users)"
"profile_user_presave","Implements hook_user_presave().","profile_user_presave(&$edit, $account, $category)"
"profile_user_view","Implements hook_user_view().","profile_user_view($account)"
"profile_view_field",,"profile_view_field($account, $field)"
"rdf_comment_load","Implements hook_comment_load().","rdf_comment_load($comments)"
"rdf_entity_info_alter","Implements hook_entity_info_alter().","rdf_entity_info_alter(&$entity_info)"
"rdf_entity_load","Implements hook_entity_load().","rdf_entity_load($entities, $type)"
"rdf_field_attach_view_alter","Implements hook_field_attach_view_alter().","rdf_field_attach_view_alter(&$output, $context)"
"rdf_get_namespaces","Returns an array of RDF namespaces defined in modules that implement
hook_rdf_namespaces().","rdf_get_namespaces()"
"rdf_help","Implements hook_help().","rdf_help($path, $arg)"
"rdf_install","Implements hook_install().","rdf_install()"
"rdf_mapping_delete","Deletes the mapping for the given bundle from the database.","rdf_mapping_delete($type, $bundle)"
"rdf_mapping_load","Returns the mapping for attributes of a given entity type/bundle pair.","rdf_mapping_load($type, $bundle = RDF_DEFAULT_BUNDLE)"
"rdf_mapping_save","Saves an RDF mapping to the database.","rdf_mapping_save($mapping)"
"rdf_modules_installed","Implements hook_modules_installed().","rdf_modules_installed($modules)"
"rdf_modules_uninstalled","Implements hook_modules_uninstalled().","rdf_modules_uninstalled($modules)"
"rdf_preprocess_comment","Implements MODULE_preprocess_HOOK().","rdf_preprocess_comment(&$variables)"
"rdf_preprocess_field","Implements MODULE_preprocess_HOOK().","rdf_preprocess_field(&$variables)"
"rdf_preprocess_image","Implements MODULE_preprocess_HOOK().","rdf_preprocess_image(&$variables)"
"rdf_preprocess_node","Implements MODULE_preprocess_HOOK().","rdf_preprocess_node(&$variables)"
"rdf_preprocess_taxonomy_term","Implements MODULE_preprocess_HOOK().","rdf_preprocess_taxonomy_term(&$variables)"
"rdf_preprocess_username","Implements MODULE_preprocess_HOOK().","rdf_preprocess_username(&$variables)"
"rdf_preprocess_user_profile","Implements MODULE_preprocess_HOOK().","rdf_preprocess_user_profile(&$variables)"
"rdf_process","Template process function for adding extra tags to hold RDFa attributes.","rdf_process(&$variables, $hook)"
"rdf_rdfa_attributes","Builds an array of RDFa attributes for a given mapping. This array will
typically be passed through drupal_attributes() to create the attributes
variables that are available to template files. These include $attributes,
$title_attributes,…","rdf_rdfa_attributes($mapping, $data = NULL)"
"rdf_rdf_namespaces","Implements hook_rdf_namespaces().","rdf_rdf_namespaces()"
"rdf_schema","Implements hook_schema().","rdf_schema()"
"rdf_test_install","Implements hook_install().","rdf_test_install()"
"rdf_test_rdf_mapping","Implements hook_rdf_mapping().","rdf_test_rdf_mapping()"
"rdf_test_rdf_namespaces","Implements hook_rdf_namespaces().","rdf_test_rdf_namespaces()"
"rdf_theme","Implements hook_theme().","rdf_theme()"
"registry_get_parsed_files","Return the list of files in registry_file","registry_get_parsed_files()"
"registry_rebuild","Rescans all enabled modules and rebuilds the registry.","registry_rebuild()"
"registry_update","Updates the registry based on the latest files listed in the database.","registry_update()"
"render","Renders an element.","render(&$element)"
"request_path","Returns the requested URL path of the page being viewed.","request_path()"
"request_uri","Returns the equivalent of Apache&#039;s $_SERVER[&#039;REQUEST_URI&#039;] variable.","request_uri()"
"requirements1_test_requirements","Implements hook_requirements().","requirements1_test_requirements($phase)"
"search_admin_reindex_submit","Form submission handler for reindex button on search_admin_settings_form().","search_admin_reindex_submit($form, &$form_state)"
"search_admin_settings","Menu callback: displays the search module settings page.","search_admin_settings($form)"
"search_admin_settings_submit","Form submission handler for search_admin_settings().","search_admin_settings_submit($form, &$form_state)"
"search_admin_settings_validate","Form validation handler for search_admin_settings().","search_admin_settings_validate($form, &$form_state)"
"search_block_info","Implements hook_block_info().","search_block_info()"
"search_block_view","Implements hook_block_view().","search_block_view($delta = '')"
"search_box","Form builder; Output a search form for the search block&#039;s search box.","search_box($form, &$form_state, $form_id)"
"search_box_form_submit","Process a block search form submission.","search_box_form_submit($form, &$form_state)"
"search_comment_delete","Implements hook_comment_delete().","search_comment_delete($comment)"
"search_comment_insert","Implements hook_comment_insert().","search_comment_insert($comment)"
"search_comment_publish","Implements hook_comment_publish().","search_comment_publish($comment)"
"search_comment_unpublish","Implements hook_comment_unpublish().","search_comment_unpublish($comment)"
"search_comment_update","Implements hook_comment_update().","search_comment_update($comment)"
"search_cron","Implements hook_cron().","search_cron()"
"search_data","Performs a search by calling hook_search_execute().","search_data($keys, $module, $conditions = NULL)"
"search_dirty","Marks a word as &quot;dirty&quot; (changed), or retrieves the list of dirty words.","search_dirty($word = NULL)"
"search_embedded_form_form","Builds a form for embedding in search results for testing.","search_embedded_form_form($form, &$form_state)"
"search_embedded_form_form_submit","Submit handler for search_embedded_form_form().","search_embedded_form_form_submit($form, &$form_state)"
"search_embedded_form_menu","Implements hook_menu().","search_embedded_form_menu()"
"search_embedded_form_preprocess_search_result","Adds the test form to search results.","search_embedded_form_preprocess_search_result(&$variables)"
"search_excerpt","Returns snippets from a piece of text, with certain keywords highlighted.
Used for formatting search results.","search_excerpt($keys, $text)"
"search_expand_cjk","Splits CJK (Chinese, Japanese, Korean) text into tokens.","search_expand_cjk($matches)"
"search_expression_extract","Extracts a module-specific search option from a search expression.","search_expression_extract($expression, $option)"
"search_expression_insert","Adds a module-specific search option to a search expression.","search_expression_insert($expression, $option, $value = NULL)"
"search_extra_type_conditions","Test conditions callback for hook_search_info().","search_extra_type_conditions()"
"search_extra_type_search_execute","Implements hook_search_execute().","search_extra_type_search_execute($keys = NULL, $conditions = NULL)"
"search_extra_type_search_info","Implements hook_search_info().","search_extra_type_search_info()"
"search_extra_type_search_page","Implements hook_search_page().","search_extra_type_search_page($results)"
"search_form","Builds a search form.","search_form($form, &$form_state, $action = '', $keys = '', $module = NULL, $prompt = NULL)"
"search_forms","Implements hook_forms().","search_forms()"
"search_form_submit","Process a search form submission.","search_form_submit($form, &$form_state)"
"search_form_validate","As the search form collates keys from other modules hooked in via
hook_form_alter, the validation takes place in _submit.
search_form_validate() is used solely to set the &#039;processed_keys&#039; form
value for the basic search form.","search_form_validate($form, &$form_state)"
"search_get_default_module_info","Returns information about the default search module.","search_get_default_module_info()"
"search_get_info","Returns information about available search modules.","search_get_info($all = FALSE)"
"search_help","Implements hook_help().","search_help($path, $arg)"
"search_index","Update the full-text search index for a particular item.","search_index($sid, $module, $text)"
"search_index_split","Simplifies and splits a string into tokens for indexing.","search_index_split($text)"
"search_invoke_preprocess","Invokes hook_search_preprocess() in modules.","search_invoke_preprocess(&$text)"
"search_is_active","Determines access for the ?q=search path.","search_is_active()"
"search_menu","Implements hook_menu().","search_menu()"
"search_node_update","Implements hook_node_update().","search_node_update($node)"
"search_node_update_index","Implements hook_node_update_index().","search_node_update_index($node)"
"search_permission","Implements hook_permission().","search_permission()"
"search_reindex","Clears a part of or the entire search index.","search_reindex($sid = NULL, $module = NULL, $reindex = FALSE)"
"search_reindex_confirm","Menu callback: confirm wiping of the index.","search_reindex_confirm()"
"search_reindex_confirm_submit","Handler for wipe confirmation","search_reindex_confirm_submit(&$form, &$form_state)"
"search_schema","Implements hook_schema().","search_schema()"
"search_simplify","Simplifies a string according to indexing rules.","search_simplify($text)"
"search_simplify_excerpt_match","Find words in the original text that matched via search_simplify().","search_simplify_excerpt_match($key, $text, $offset, $boundary)"
"search_theme","Implements hook_theme().","search_theme()"
"search_touch_node","Changes a node&#039;s changed timestamp to &#039;now&#039; to force reindexing.","search_touch_node($nid)"
"search_uninstall","Implements hook_uninstall().","search_uninstall()"
"search_update_7000","Replace unique keys in &#039;search_dataset&#039; and &#039;search_index&#039; by primary keys.","search_update_7000()"
"search_update_totals","Updates the {search_total} database table.","search_update_totals()"
"search_view","Menu callback; presents the search form and/or search results.","search_view($module = NULL, $keys = '')"
"session_test_boot","Implements hook_boot().","session_test_boot()"
"session_test_drupal_goto_alter","Implements hook_drupal_goto_alter().","session_test_drupal_goto_alter(&$path, &$options, &$http_response_code)"
"session_test_form_user_login_alter","Implements hook_form_FORM_ID_alter().","session_test_form_user_login_alter(&$form)"
"session_test_menu","Implements hook_menu().","session_test_menu()"
"session_test_user_login","Implements hook_user().","session_test_user_login($edit = array(), $user = NULL)"
"seven_admin_block_content","Overrides theme_admin_block_content().","seven_admin_block_content($variables)"
"seven_css_alter","Implements hook_css_alter().","seven_css_alter(&$css)"
"seven_node_add_list","Display the list of available node types for node creation.","seven_node_add_list($variables)"
"seven_preprocess_html","Override or insert variables into the html template.","seven_preprocess_html(&$vars)"
"seven_preprocess_maintenance_page","Override or insert variables into the maintenance page template.","seven_preprocess_maintenance_page(&$vars)"
"seven_preprocess_page","Override or insert variables into the page template.","seven_preprocess_page(&$vars)"
"seven_tablesort_indicator","Override of theme_tablesort_indicator().","seven_tablesort_indicator($variables)"
"shortcut_admin_add_link","Adds a link to the end of a shortcut set, keeping within a prescribed limit.","shortcut_admin_add_link($shortcut_link, &$shortcut_set, $limit = NULL)"
"shortcut_admin_paths","Implements hook_admin_paths().","shortcut_admin_paths()"
"shortcut_block_info","Implements hook_block_info().","shortcut_block_info()"
"shortcut_block_view","Implements hook_block_view().","shortcut_block_view($delta = '')"
"shortcut_current_displayed_set","Returns the current displayed shortcut set for the provided user account.","shortcut_current_displayed_set($account = NULL)"
"shortcut_default_set","Returns the default shortcut set for a given user account.","shortcut_default_set($account = NULL)"
"shortcut_help","Implements hook_help().","shortcut_help($path, $arg)"
"shortcut_install","Implements hook_install().","shortcut_install()"
"shortcut_link_access","Access callback for editing a link in a shortcut set.","shortcut_link_access($menu_link)"
"shortcut_link_add","Form callback: builds the form for adding a new shortcut link.","shortcut_link_add($form, &$form_state, $shortcut_set)"
"shortcut_link_add_inline","Menu page callback: creates a new link in the provided shortcut set.","shortcut_link_add_inline($shortcut_set)"
"shortcut_link_add_submit","Submit handler for shortcut_link_add().","shortcut_link_add_submit($form, &$form_state)"
"shortcut_link_delete","Form callback: builds the confirmation form for deleting a shortcut link.","shortcut_link_delete($form, &$form_state, $shortcut_link)"
"shortcut_link_delete_submit","Submit handler for shortcut_link_delete_submit().","shortcut_link_delete_submit($form, &$form_state)"
"shortcut_link_edit","Form callback: builds the form for editing a shortcut link.","shortcut_link_edit($form, &$form_state, $shortcut_link)"
"shortcut_link_edit_submit","Submit handler for shortcut_link_edit().","shortcut_link_edit_submit($form, &$form_state)"
"shortcut_link_edit_validate","Validation handler for the shortcut link add and edit forms.","shortcut_link_edit_validate($form, &$form_state)"
"shortcut_max_slots","Returns the maximum number of shortcut &quot;slots&quot; available per shortcut set.","shortcut_max_slots()"
"shortcut_menu","Implements hook_menu().","shortcut_menu()"
"shortcut_page_alter","Implements hook_page_alter().","shortcut_page_alter(&$page)"
"shortcut_permission","Implements hook_permission().","shortcut_permission()"
"shortcut_preprocess_page","Implements hook_preprocess_page().","shortcut_preprocess_page(&$variables)"
"shortcut_renderable_links","Returns an array of shortcut links, suitable for rendering.","shortcut_renderable_links($shortcut_set = NULL)"
"shortcut_schema","Implements hook_schema().","shortcut_schema()"
"shortcut_sets","Returns an array of all shortcut sets, keyed by the set name.","shortcut_sets()"
"shortcut_set_add_form","Form callback: builds the form for adding a shortcut set.","shortcut_set_add_form($form, &$form_state)"
"shortcut_set_add_form_submit","Submit handler for shortcut_set_add_form().","shortcut_set_add_form_submit($form, &$form_state)"
"shortcut_set_add_form_validate","Validation handler for shortcut_set_add_form().","shortcut_set_add_form_validate($form, &$form_state)"
"shortcut_set_admin","Menu page callback: builds the page for administering shortcut sets.","shortcut_set_admin()"
"shortcut_set_assign_user","Assigns a user to a particular shortcut set.","shortcut_set_assign_user($shortcut_set, $account)"
"shortcut_set_customize","Form callback: builds the form for customizing shortcut sets.","shortcut_set_customize($form, &$form_state, $shortcut_set)"
"shortcut_set_customize_submit","Submit handler for shortcut_set_customize().","shortcut_set_customize_submit($form, &$form_state)"
"shortcut_set_delete","Deletes a shortcut set.","shortcut_set_delete($shortcut_set)"
"shortcut_set_delete_access","Access callback for deleting a shortcut set.","shortcut_set_delete_access($shortcut_set)"
"shortcut_set_delete_form","Form callback: builds the confirmation form for deleting a shortcut set.","shortcut_set_delete_form($form, &$form_state, $shortcut_set)"
"shortcut_set_delete_form_submit","Submit handler for shortcut_set_delete_form().","shortcut_set_delete_form_submit($form, &$form_state)"
"shortcut_set_edit_access","Access callback for editing a shortcut set.","shortcut_set_edit_access($shortcut_set = NULL)"
"shortcut_set_edit_form","Form callback: builds the form for editing the shortcut set name.","shortcut_set_edit_form($form, &$form_state, $shortcut_set)"
"shortcut_set_edit_form_submit","Submit handler for shortcut_set_edit_form().","shortcut_set_edit_form_submit($form, &$form_state)"
"shortcut_set_edit_form_validate","Validation handler for shortcut_set_edit_form().","shortcut_set_edit_form_validate($form, &$form_state)"
"shortcut_set_get_unique_name","Returns a unique, machine-readable shortcut set name.","shortcut_set_get_unique_name()"
"shortcut_set_load","Loads the data for a shortcut set.","shortcut_set_load($set_name)"
"shortcut_set_name","Returns the name of a shortcut set, based on a provided number.","shortcut_set_name($number)"
"shortcut_set_reset_link_weights","Resets the link weights in a shortcut set to match their current order.","shortcut_set_reset_link_weights(&$shortcut_set)"
"shortcut_set_save","Saves a shortcut set.","shortcut_set_save(&$shortcut_set)"
"shortcut_set_switch","Form callback: builds the form for switching shortcut sets.","shortcut_set_switch($form, &$form_state, $account = NULL)"
"shortcut_set_switch_access","Access callback for switching the shortcut set assigned to a user account.","shortcut_set_switch_access($account = NULL)"
"shortcut_set_switch_submit","Submit handler for shortcut_set_switch().","shortcut_set_switch_submit($form, &$form_state)"
"shortcut_set_switch_validate","Validation handler for shortcut_set_switch().","shortcut_set_switch_validate($form, &$form_state)"
"shortcut_set_title","Returns the sanitized title of a shortcut set.","shortcut_set_title($shortcut_set)"
"shortcut_set_title_callback","Returns the title of a shortcut set.","shortcut_set_title_callback($shortcut_set)"
"shortcut_set_title_exists","Check to see if a shortcut set with the given title already exists.","shortcut_set_title_exists($title)"
"shortcut_set_unassign_user","Unassigns a user from any shortcut set they may have been assigned to.","shortcut_set_unassign_user($account)"
"shortcut_theme","Implements hook_theme().","shortcut_theme()"
"shortcut_toolbar_pre_render","Pre-render function for adding shortcuts to the toolbar drawer.","shortcut_toolbar_pre_render($toolbar)"
"shortcut_uninstall","Implements hook_uninstall().","shortcut_uninstall()"
"shortcut_valid_link","Determines if a path corresponds to a valid shortcut link.","shortcut_valid_link($path)"
"show","Shows a hidden element for later rendering.","show(&$element)"
"simpletest_classloader_register",,"simpletest_classloader_register()"
"simpletest_clean_database","Removed prefixed tables from the database that are left over from crashed tests.","simpletest_clean_database()"
"simpletest_clean_environment","Remove all temporary database tables and directories.","simpletest_clean_environment()"
"simpletest_clean_results_table","Clear the test result tables.","simpletest_clean_results_table($test_id = NULL)"
"simpletest_clean_temporary_directories","Find all leftover temporary directories and remove them.","simpletest_clean_temporary_directories()"
"simpletest_generate_file","Generate test file.","simpletest_generate_file($filename, $width, $lines, $type = 'binary-text')"
"simpletest_help","Implements hook_help().","simpletest_help($path, $arg)"
"simpletest_js_alter","Implements hook_js_alter().","simpletest_js_alter(&$javascript)"
"simpletest_last_test_get","Get information about the last test that ran given a test ID.","simpletest_last_test_get($test_id)"
"simpletest_log_read","Read the error log and report any errors as assertion failures.","simpletest_log_read($test_id, $prefix, $test_class, $during_test = FALSE)"
"simpletest_mail_alter","Implements hook_mail_alter().","simpletest_mail_alter(&$message)"
"simpletest_menu","Implements hook_menu().","simpletest_menu()"
"simpletest_permission","Implements hook_permission().","simpletest_permission()"
"simpletest_registry_files_alter","Implements hook_registry_files_alter().","simpletest_registry_files_alter(&$files, $modules)"
"simpletest_requirements","Implements hook_requirements().","simpletest_requirements($phase)"
"simpletest_result_form","Test results form for $test_id.","simpletest_result_form($form, &$form_state, $test_id)"
"simpletest_result_form_submit","Re-run the tests that match the filter.","simpletest_result_form_submit($form, &$form_state)"
"simpletest_result_get","Get test results for $test_id.","simpletest_result_get($test_id)"
"simpletest_result_status_image","Get the appropriate image for the status.","simpletest_result_status_image($status)"
"simpletest_run_tests","Actually runs tests.","simpletest_run_tests($test_list, $reporter = 'drupal')"
"simpletest_schema","Implements hook_schema().","simpletest_schema()"
"simpletest_settings_form","Provides settings form for SimpleTest variables.","simpletest_settings_form($form, &$form_state)"
"simpletest_settings_form_validate","Validation handler for simpletest_settings_form().","simpletest_settings_form_validate($form, &$form_state)"
"simpletest_test_form","List tests arranged in groups that can be selected and run.","simpletest_test_form($form)"
"simpletest_test_form_submit","Run selected tests.","simpletest_test_form_submit($form, &$form_state)"
"simpletest_test_get_all","Get a list of all of the tests provided by the system.","simpletest_test_get_all()"
"simpletest_theme","Implements hook_theme().","simpletest_theme()"
"simpletest_uninstall","Implements hook_uninstall().","simpletest_uninstall()"
"simpletest_verbose","Logs verbose message in a text file.","simpletest_verbose($message, $original_file_directory = NULL, $test_class = NULL)"
"st","Translates a string when some systems are not available.","st($string, array $args = array(), array $options = array())"
"standard_form_install_configure_form_alter","Implements hook_form_FORM_ID_alter() for install_configure_form().","standard_form_install_configure_form_alter(&$form, $form_state)"
"standard_install","Implements hook_install().","standard_install()"
"statistics_access_log","Page callback: Gathers page access statistics suitable for rendering.","statistics_access_log($aid)"
"statistics_block_configure","Implements hook_block_configure().","statistics_block_configure($delta = '')"
"statistics_block_info","Implements hook_block_info().","statistics_block_info()"
"statistics_block_save","Implements hook_block_save().","statistics_block_save($delta = '', $edit = array())"
"statistics_block_view","Implements hook_block_view().","statistics_block_view($delta = '')"
"statistics_cron","Implements hook_cron().","statistics_cron()"
"statistics_exit","Implements hook_exit().","statistics_exit()"
"statistics_get","Retrieves a node&#039;s &quot;view statistics&quot;.","statistics_get($nid)"
"statistics_help","Implements hook_help().","statistics_help($path, $arg)"
"statistics_menu","Implements hook_menu().","statistics_menu()"
"statistics_node_delete","Implements hook_node_delete().","statistics_node_delete($node)"
"statistics_node_tracker","Page callback: Displays statistics for a node.","statistics_node_tracker()"
"statistics_node_view","Implements hook_node_view().","statistics_node_view($node, $view_mode)"
"statistics_permission","Implements hook_permission().","statistics_permission()"
"statistics_ranking","Implements hook_ranking().","statistics_ranking()"
"statistics_recent_hits","Page callback: Displays the &quot;recent hits&quot; page.","statistics_recent_hits()"
"statistics_schema","Implements hook_schema().","statistics_schema()"
"statistics_settings_form","Form constructor for the statistics administration form.","statistics_settings_form()"
"statistics_title_list","Returns the most viewed content of all time, today, or the last-viewed node.","statistics_title_list($dbfield, $dbrows)"
"statistics_tokens","Implements hook_tokens().","statistics_tokens($type, $tokens, array $data = array(), array $options = array())"
"statistics_token_info","Implements hook_token_info().","statistics_token_info()"
"statistics_top_pages","Page callback: Displays statistics for the &quot;top pages&quot; (most accesses).","statistics_top_pages()"
"statistics_top_referrers","Page callback: Displays the &quot;top referrers&quot; in the access logs.","statistics_top_referrers()"
"statistics_top_visitors","Page callback: Displays the &quot;top visitors&quot; page.","statistics_top_visitors()"
"statistics_uninstall","Implements hook_uninstall().","statistics_uninstall()"
"statistics_update_7000","Update the {accesslog}.sid column to match the length of {sessions}.sid","statistics_update_7000()"
"statistics_update_index","Implements hook_update_index().","statistics_update_index()"
"statistics_user_cancel","Implements hook_user_cancel().","statistics_user_cancel($edit, $account, $method)"
"statistics_user_delete","Implements hook_user_delete().","statistics_user_delete($account)"
"statistics_user_tracker","Page callback: Displays statistics for a user.","statistics_user_tracker()"
"syslog_facility_list","Lists all possible syslog facilities for UNIX/Linux.","syslog_facility_list()"
"syslog_form_system_logging_settings_alter","Implements hook_form_FORM_ID_alter().","syslog_form_system_logging_settings_alter(&$form, &$form_state)"
"syslog_help","Implements hook_help().","syslog_help($path, $arg)"
"syslog_uninstall","Implements hook_uninstall().","syslog_uninstall()"
"syslog_watchdog","Implements hook_watchdog().","syslog_watchdog(array $log_entry)"
"system_actions_configure","Menu callback; Creates the form for configuration of a single action.","system_actions_configure($form, &$form_state, $action = NULL)"
"system_actions_configure_submit","Process system_actions_configure() form submissions.","system_actions_configure_submit($form, &$form_state)"
"system_actions_configure_validate","Validate system_actions_configure() form submissions.","system_actions_configure_validate($form, &$form_state)"
"system_actions_delete_form","Create the form for confirmation of deleting an action.","system_actions_delete_form($form, &$form_state, $action)"
"system_actions_delete_form_submit","Process system_actions_delete form submissions.","system_actions_delete_form_submit($form, &$form_state)"
"system_actions_manage","Menu callback; Displays an overview of available and configured actions.","system_actions_manage()"
"system_actions_manage_form","Define the form for the actions overview page.","system_actions_manage_form($form, &$form_state, $options = array())"
"system_actions_manage_form_submit","Process system_actions_manage form submissions.","system_actions_manage_form_submit($form, &$form_state)"
"system_actions_remove_orphans","Remove actions that are in the database but not supported by any enabled module.","system_actions_remove_orphans()"
"system_action_delete_orphans_post","Post-deletion operations for deleting action orphans.","system_action_delete_orphans_post($orphaned)"
"system_action_info","Implements hook_action_info().","system_action_info()"
"system_add_date_formats_form_submit","Process new date format string submission.","system_add_date_formats_form_submit($form, &$form_state)"
"system_add_date_formats_form_validate","Validate new date format string submission.","system_add_date_formats_form_validate($form, &$form_state)"
"system_add_date_format_type_form","Add new date type.","system_add_date_format_type_form($form, &$form_state)"
"system_add_date_format_type_form_submit","Process system_add_date_format_type form submissions.","system_add_date_format_type_form_submit($form, &$form_state)"
"system_add_date_format_type_form_validate","Validate system_add_date_format_type form submissions.","system_add_date_format_type_form_validate($form, &$form_state)"
"system_add_module_assets","Adds CSS and JavaScript files declared in module .info files.","system_add_module_assets()"
"system_admin_compact_mode","Determines whether the current user is in compact mode.","system_admin_compact_mode()"
"system_admin_compact_page","Menu callback; Sets whether the admin menu is in compact mode or not.","system_admin_compact_page($mode = 'off')"
"system_admin_config_page","Menu callback; Provide the administration overview page.","system_admin_config_page()"
"system_admin_index","Menu callback; prints a listing of admin tasks, organized by module.","system_admin_index()"
"system_admin_menu_block","Provide a single block on the administration overview page.","system_admin_menu_block($item)"
"system_admin_menu_block_page","Provide a single block from the administration menu as a page.","system_admin_menu_block_page()"
"system_admin_paths","Implements hook_admin_paths().","system_admin_paths()"
"system_archiver_info","Implements hook_archiver_info().","system_archiver_info()"
"system_authorized_batch_process","Use authorize.php to run batch_process().","system_authorized_batch_process()"
"system_authorized_batch_processing_url","Returns the URL for the authorize.php script when it is processing a batch.","system_authorized_batch_processing_url()"
"system_authorized_get_url","Return the URL for the authorize.php script.","system_authorized_get_url(array $options = array())"
"system_authorized_init","Setup a given callback to run via authorize.php with elevated privileges.","system_authorized_init($callback, $file, $arguments = array(), $page_title = NULL)"
"system_authorized_run","Setup and invoke an operation using authorize.php.","system_authorized_run($callback, $file, $arguments = array(), $page_title = NULL)"
"system_batch_page","Default page callback for batches.","system_batch_page()"
"system_block_info","Implements hook_block_info().","system_block_info()"
"system_block_ip_action","Blocks the current user&#039;s IP address.","system_block_ip_action()"
"system_block_view","Implements hook_block_view().","system_block_view($delta = '')"
"system_check_directory","Checks the existence of the directory specified in $form_element.","system_check_directory($form_element)"
"system_check_http_request","Checks whether the server is capable of issuing HTTP requests.","system_check_http_request()"
"system_clean_url_settings","Form builder; Configure clean URL settings.","system_clean_url_settings($form, &$form_state)"
"system_clear_cache_submit","Submit callback; clear system caches.","system_clear_cache_submit($form, &$form_state)"
"system_clear_page_cache_submit","Submit callback; clear the page cache.","system_clear_page_cache_submit($form, &$form_state)"
"system_configure_date_formats_form","Allow users to add additional date formats.","system_configure_date_formats_form($form, &$form_state, $dfid = 0)"
"system_cron","Implements hook_cron().","system_cron()"
"system_cron_settings","Form builder; Cron form.","system_cron_settings()"
"system_custom_theme","Implements hook_custom_theme().","system_custom_theme()"
"system_date_delete_format_form","Menu callback; present a form for deleting a date format.","system_date_delete_format_form($form, &$form_state, $dfid)"
"system_date_delete_format_form_submit","Delete a configured date format.","system_date_delete_format_form_submit($form, &$form_state)"
"system_date_formats","Implements hook_date_formats().","system_date_formats()"
"system_date_formats_rebuild","Resets the database cache of date formats and saves all new date formats.","system_date_formats_rebuild()"
"system_date_format_delete","Deletes a date format from the database.","system_date_format_delete($dfid)"
"system_date_format_locale","Gets the appropriate date format string for a date type and locale.","system_date_format_locale($langcode = NULL, $type = NULL)"
"system_date_format_save","Saves a date format to the database.","system_date_format_save($date_format, $dfid = 0)"
"system_date_format_types","Implements hook_date_format_types().","system_date_format_types()"
"system_date_format_type_delete","Deletes a date type from the database.","system_date_format_type_delete($type)"
"system_date_format_type_save","Saves a date type to the database.","system_date_format_type_save($type)"
"system_date_time_formats","Displays the date format strings overview page.","system_date_time_formats()"
"system_date_time_lookup","Return the date for a given format string via Ajax.","system_date_time_lookup()"
"system_date_time_settings","Form builder; Configure the site date and time settings.","system_date_time_settings()"
"system_default_date_formats","Provides a default system list of date formats for system_date_formats().","system_default_date_formats()"
"system_default_region","Get the name of the default region for a given theme.","system_default_region($theme)"
"system_delete_date_format_type_form","Menu callback; present a form for deleting a date type.","system_delete_date_format_type_form($form, &$form_state, $format_type)"
"system_delete_date_format_type_form_submit","Delete a configured date type.","system_delete_date_format_type_form_submit($form, &$form_state)"
"system_element_info","Implements hook_element_info().","system_element_info()"
"system_entity_info","Implements hook_entity_info().","system_entity_info()"
"system_filetransfer_info","Implements hook_filetransfer_info().","system_filetransfer_info()"
"system_file_system_settings","Form builder; Configure the site file handling.","system_file_system_settings()"
"system_find_base_themes","Find all the base themes for the specified theme.","system_find_base_themes($themes, $key, $used_keys = array())"
"system_flush_caches","Implements hook_flush_caches().","system_flush_caches()"
"system_form_form_test_alter_form_alter","Implements hook_form_FORM_ID_alter() on behalf of system.module.","system_form_form_test_alter_form_alter(&$form, &$form_state)"
"system_form_user_profile_form_alter","Implements hook_form_FORM_ID_alter().","system_form_user_profile_form_alter(&$form, &$form_state)"
"system_form_user_register_form_alter","Implements hook_form_FORM_ID_alter().","system_form_user_register_form_alter(&$form, &$form_state)"
"system_get_date_format","Gets the format details for a particular format ID.","system_get_date_format($dfid)"
"system_get_date_formats","Gets the list of defined date formats and attributes.","system_get_date_formats($type = NULL)"
"system_get_date_types","Gets the list of available date types and attributes.","system_get_date_types($type = NULL)"
"system_get_files_database","Retrieves the current status of an array of files in the system table.","system_get_files_database(&$files, $type)"
"system_get_info","Returns an array of information about enabled modules or themes.","system_get_info($type, $name = NULL)"
"system_get_module_admin_tasks","Generate a list of tasks offered by a specified module.","system_get_module_admin_tasks($module, $info)"
"system_goto_action","Redirects to a different URL.","system_goto_action($entity, $context)"
"system_goto_action_form","Settings form for system_goto_action().","system_goto_action_form($context)"
"system_goto_action_submit",,"system_goto_action_submit($form, $form_state)"
"system_help","Implements hook_help().","system_help($path, $arg)"
"system_hook_info","Implements hook_hook_info().","system_hook_info()"
"system_image_toolkits","Implements hook_image_toolkits().","system_image_toolkits()"
"system_image_toolkit_settings","Form builder; Configure site image toolkit usage.","system_image_toolkit_settings()"
"system_init","Implements hook_init().","system_init()"
"system_install","Implements hook_install().","system_install()"
"system_ip_blocking","Menu callback. Display blocked IP addresses.","system_ip_blocking($default_ip = '')"
"system_ip_blocking_delete","IP deletion confirm page.","system_ip_blocking_delete($form, &$form_state, $iid)"
"system_ip_blocking_delete_submit","Process system_ip_blocking_delete form submissions.","system_ip_blocking_delete_submit($form, &$form_state)"
"system_ip_blocking_form","Define the form for blocking IP addresses.","system_ip_blocking_form($form, $form_state, $default_ip)"
"system_ip_blocking_form_submit",,"system_ip_blocking_form_submit($form, &$form_state)"
"system_ip_blocking_form_validate",,"system_ip_blocking_form_validate($form, &$form_state)"
"system_library","Implements hook_library().","system_library()"
"system_list","Builds a list of bootstrap modules and enabled modules and themes.","system_list($type)"
"system_list_reset","Resets all system_list() caches.","system_list_reset()"
"system_logging_settings","Form builder; Configure error reporting settings.","system_logging_settings()"
"system_mail","Implements hook_mail().","system_mail($key, &$message, $params)"
"system_menu","Implements hook_menu().","system_menu()"
"system_message_action","Sends a message to the current user&#039;s screen.","system_message_action(&$entity, $context = array())"
"system_message_action_form",,"system_message_action_form($context)"
"system_message_action_submit",,"system_message_action_submit($form, $form_state)"
"system_modules","Menu callback; provides module enable/disable interface.","system_modules($form, $form_state = array())"
"system_modules_confirm_form","Display confirmation form for required modules.","system_modules_confirm_form($modules, $storage)"
"system_modules_submit","Submit callback; handles modules form submission.","system_modules_submit($form, &$form_state)"
"system_modules_uninstall","Builds a form of currently disabled modules.","system_modules_uninstall($form, $form_state = NULL)"
"system_modules_uninstall_confirm_form","Confirm uninstall of selected modules.","system_modules_uninstall_confirm_form($storage)"
"system_modules_uninstall_submit","Processes the submitted uninstall form.","system_modules_uninstall_submit($form, &$form_state)"
"system_modules_uninstall_validate","Validates the submitted uninstall form.","system_modules_uninstall_validate($form, &$form_state)"
"system_page_alter","Implements hook_page_alter().","system_page_alter(&$page)"
"system_performance_settings","Form builder; Configure site performance settings.","system_performance_settings()"
"system_permission","Implements hook_permission().","system_permission()"
"system_php","Menu callback: return information about PHP.","system_php()"
"system_preprocess_block","Implements hook_preprocess_block().","system_preprocess_block(&$variables)"
"system_rebuild_module_data","Rebuild, save, and return data about all currently available modules.","system_rebuild_module_data()"
"system_rebuild_theme_data","Rebuild, save, and return data about all currently available themes.","system_rebuild_theme_data()"
"system_regional_settings","Form builder; Configure the site regional settings.","system_regional_settings()"
"system_region_list","Get a list of available regions from a specified theme.","system_region_list($theme_key, $show = REGIONS_ALL)"
"system_requirements","Implements hook_requirements().","system_requirements($phase)"
"system_retrieve_file","Attempts to get a file using drupal_http_request and to store it locally.","system_retrieve_file($url, $destination = NULL, $managed = FALSE, $replace = FILE_EXISTS_RENAME)"
"system_rss_feeds_settings","Form builder; Configure how the site handles RSS feeds.","system_rss_feeds_settings()"
"system_run_automated_cron","Run the automated cron if enabled.","system_run_automated_cron()"
"system_run_cron","Menu callback: run cron manually.","system_run_cron()"
"system_run_cron_submit","Submit callback; run cron.","system_run_cron_submit($form, &$form_state)"
"system_schema","Implements hook_schema().","system_schema()"
"system_schema_cache_7054","The cache schema corresponding to system_update_7054.","system_schema_cache_7054()"
"system_send_email_action","Sends an e-mail message.","system_send_email_action($entity, $context)"
"system_send_email_action_form","Return a form definition so the Send email action can be configured.","system_send_email_action_form($context)"
"system_send_email_action_submit","Process system_send_email_action form submissions.","system_send_email_action_submit($form, $form_state)"
"system_send_email_action_validate","Validate system_send_email_action form submissions.","system_send_email_action_validate($form, $form_state)"
"system_settings_form","Sets up a form to save information automatically.","system_settings_form($form)"
"system_settings_form_submit","Form submission handler for system_settings_form().","system_settings_form_submit($form, &$form_state)"
"system_settings_overview","Displays the configuration overview page.","system_settings_overview()"
"system_site_information_settings","Form builder; The general site information form.","system_site_information_settings()"
"system_site_information_settings_validate","Validates the submitted site-information form.","system_site_information_settings_validate($form, &$form_state)"
"system_site_maintenance_mode","Form builder; Configure the site&#039;s maintenance status.","system_site_maintenance_mode()"
"system_sort_modules_by_info_name","Array sorting callback; sorts modules or themes by their name.","system_sort_modules_by_info_name($a, $b)"
"system_sort_themes","Sorts themes by their names, with the default theme listed first.","system_sort_themes($a, $b)"
"system_status","Menu callback: displays the site status report. Can also be used as a pure check.","system_status($check = FALSE)"
"system_stream_wrappers","Implements hook_stream_wrappers().","system_stream_wrappers()"
"system_system_info_alter","Implements hook_system_info_alter().","system_system_info_alter(&$info, $file, $type)"
"system_test_authorize_init_page","Page callback to initialize authorize.php during testing.","system_test_authorize_init_page($page_title)"
"system_test_basic_auth_page",,"system_test_basic_auth_page()"
"system_test_boot","Implements hook_boot().","system_test_boot()"
"system_test_exit","Implements hook_exit().","system_test_exit()"
"system_test_filetransfer_info","Implements hook_filetransfer_info().","system_test_filetransfer_info()"
"system_test_init","Implements hook_init().","system_test_init()"
"system_test_lock_acquire","Try to acquire a named lock and report the outcome.","system_test_lock_acquire()"
"system_test_lock_exit","Try to acquire a specific lock, and then exit.","system_test_lock_exit()"
"system_test_main_content_fallback","Menu callback to test main content fallback().","system_test_main_content_fallback()"
"system_test_menu","Implements hook_menu().","system_test_menu()"
"system_test_modules_disabled","Implements hook_modules_disabled().","system_test_modules_disabled($modules)"
"system_test_modules_enabled","Implements hook_modules_enabled().","system_test_modules_enabled($modules)"
"system_test_modules_installed","Implements hook_modules_installed().","system_test_modules_installed($modules)"
"system_test_modules_uninstalled","Implements hook_modules_uninstalled().","system_test_modules_uninstalled($modules)"
"system_test_multiple_redirects","Menu callback; sends a redirect header to itself until $count argument is 0.","system_test_multiple_redirects($count)"
"system_test_page_build","Implements hook_page_build().","system_test_page_build(&$page)"
"system_test_page_shutdown_functions","A simple page callback which adds a register shutdown function.","system_test_page_shutdown_functions($arg1, $arg2)"
"system_test_redirect",,"system_test_redirect($code)"
"system_test_redirect_invalid_scheme",,"system_test_redirect_invalid_scheme()"
"system_test_redirect_noparse",,"system_test_redirect_noparse()"
"system_test_redirect_noscheme",,"system_test_redirect_noscheme()"
"system_test_set_header",,"system_test_set_header()"
"system_test_sleep",,"system_test_sleep($seconds)"
"system_test_system_info_alter","Implements hook_system_info_alter().","system_test_system_info_alter(&$info, $file, $type)"
"system_theme","Implements hook_theme().","system_theme()"
"system_themes_admin_form","Form to select the administration theme.","system_themes_admin_form($form, &$form_state, $theme_options)"
"system_themes_admin_form_submit","Process system_themes_admin_form form submissions.","system_themes_admin_form_submit($form, &$form_state)"
"system_themes_page","Menu callback; displays a listing of all themes.","system_themes_page()"
"system_theme_default","Menu callback; Set the default theme.","system_theme_default()"
"system_theme_disable","Menu callback; Disables a theme.","system_theme_disable()"
"system_theme_enable","Menu callback; Enables a theme.","system_theme_enable()"
"system_theme_settings","Form builder; display theme configuration for entire site and individual themes.","system_theme_settings($form, &$form_state, $key = '')"
"system_theme_settings_submit","Process system_theme_settings form submissions.","system_theme_settings_submit($form, &$form_state)"
"system_theme_settings_validate","Validator for the system_theme_settings() form.","system_theme_settings_validate($form, &$form_state)"
"system_timezone","Menu callback; Retrieve a JSON object containing a suggested time zone name.","system_timezone($abbreviation = '', $offset = -1, $is_daylight_saving_time = NULL)"
"system_time_zones","Generate an array of time zones and their local time&amp;date.","system_time_zones($blank = NULL)"
"system_tokens","Implements hook_tokens().","system_tokens($type, $tokens, array $data = array(), array $options = array())"
"system_token_info","Implements hook_token_info().","system_token_info()"
"system_updater_info","Implements hook_updater_info().","system_updater_info()"
"system_update_7000","Rename blog and forum permissions to be consistent with other content types.","system_update_7000()"
"system_update_7001","Generate a cron key and save it in the variables table.","system_update_7001()"
"system_update_7002","Add a table to store blocked IP addresses.","system_update_7002()"
"system_update_7003","Update {blocked_ips} with valid IP addresses from {access}.","system_update_7003()"
"system_update_7004","Remove hardcoded numeric deltas from all blocks in core.","system_update_7004(&$sandbox)"
"system_update_7005","Remove throttle columns and variables.","system_update_7005()"
"system_update_7007","Convert to new method of storing permissions.","system_update_7007()"
"system_update_7009","Rename the variable for primary links.","system_update_7009()"
"system_update_7011","Split the &#039;bypass node access&#039; permission from &#039;administer nodes&#039;.","system_update_7011()"
"system_update_7013","Convert default time zone offset to default time zone name.","system_update_7013()"
"system_update_7015","Change the user logout path.","system_update_7015()"
"system_update_7016","Remove custom datatype *_unsigned in PostgreSQL.","system_update_7016()"
"system_update_7017","Change the theme setting &#039;toggle_node_info&#039; into a per content type variable.","system_update_7017()"
"system_update_7018","Shorten the {system}.type column and modify indexes.","system_update_7018()"
"system_update_7020","Enable field and field_ui modules.","system_update_7020()"
"system_update_7021","Change the PHP for settings permission.","system_update_7021()"
"system_update_7027","Enable field type modules.","system_update_7027()"
"system_update_7029","Add new &#039;view own unpublished content&#039; permission for authenticated users.
Preserves legacy behavior from Drupal 6.x.","system_update_7029()"
"system_update_7032","Alter field hostname to identifier in the {flood} table.","system_update_7032()"
"system_update_7033","Move CACHE_AGGRESSIVE to CACHE_NORMAL.","system_update_7033()"
"system_update_7034","Migrate the file path settings and create the new {file_managed} table.","system_update_7034()"
"system_update_7036","Split the &#039;access site in maintenance mode&#039; permission from &#039;administer site configuration&#039;.","system_update_7036()"
"system_update_7042","Upgrade the {url_alias} table and create a cache bin for path aliases.","system_update_7042()"
"system_update_7044","Drop the actions_aid table.","system_update_7044()"
"system_update_7045","Add expiration field to the {flood} table.","system_update_7045()"
"system_update_7046","Switch from the Minnelli theme if it is the default or admin theme.","system_update_7046()"
"system_update_7047","Normalize the front page path variable.","system_update_7047()"
"system_update_7048","Convert path languages from the empty string to LANGUAGE_NONE.","system_update_7048()"
"system_update_7049","Rename &#039;Default&#039; profile to &#039;Standard.&#039;","system_update_7049()"
"system_update_7050","Change {batch}.id column from serial to regular int.","system_update_7050()"
"system_update_7051","make the IP field IPv6 compatible","system_update_7051()"
"system_update_7052","Rename file to include_file in {menu_router} table.","system_update_7052()"
"system_update_7053","Upgrade standard blocks and menus.","system_update_7053()"
"system_update_7054","Remove {cache_*}.headers columns.","system_update_7054()"
"system_update_7055","Converts fields that store serialized variables from text to blob.","system_update_7055()"
"system_update_7057","Increase the size of session-ids.","system_update_7057()"
"system_update_7058","Remove cron semaphore variable.","system_update_7058()"
"system_update_7059","Create the {file_usage} table.","system_update_7059()"
"system_update_7060","Create fields in preparation for migrating upload.module to file.module.","system_update_7060()"
"system_update_7061","Migrate upload.module data to the newly created file field.","system_update_7061(&$sandbox)"
"system_update_7062","Replace &#039;system_list&#039; index with &#039;bootstrap&#039; index on {system}.","system_update_7062()"
"system_update_7063","Delete {menu_links} records for &#039;type&#039; =&gt; MENU_CALLBACK which would not appear in a fresh install.","system_update_7063()"
"system_update_7064","Remove block_callback field from {menu_router}.","system_update_7064()"
"system_update_7065","Remove the default value for sid.","system_update_7065()"
"system_update_7066","Migrate the &#039;file_directory_temp&#039; variable.","system_update_7066()"
"system_update_7067","Grant administrators permission to view the administration theme.","system_update_7067()"
"system_update_7068","Update {url_alias}.language description.","system_update_7068()"
"system_update_7069","Remove the obsolete &#039;site_offline&#039; variable.","system_update_7069()"
"system_update_7070","Remove the obsolete &#039;drupal_badge_color&#039; and &#039;drupal_badge_size&#039; variables.","system_update_7070()"
"system_update_7071","Add index missed during upgrade, and fix field default.","system_update_7071()"
"system_update_7072","Remove the obsolete &#039;site_offline_message&#039; variable.","system_update_7072()"
"system_update_7073","Add binary to {file_managed}, in case system_update_7034() was run without
it.","system_update_7073()"
"system_update_7074","This update has been removed and will not run.","system_update_7074()"
"system_update_7076","Convert menu_links query strings into arrays.","system_update_7076()"
"system_update_7077","Revert {file_managed}.filename changed to a binary column.","system_update_7077()"
"system_update_7078","Add binary to {date_formats}.format.","system_update_7078()"
"system_update_7079","Convert the &#039;filesize&#039; column in {file_managed} to a bigint.","system_update_7079()"
"system_update_dependencies","Implements hook_update_dependencies().","system_update_dependencies()"
"system_update_files_database","Updates the records in the system table based on the files array.","system_update_files_database(&$files, $type)"
"system_update_last_removed",,"system_update_last_removed()"
"system_user_login","Implements hook_user_login().","system_user_login(&$edit, $account)"
"system_user_timezone","Add the time zone field to the user edit and register forms.","system_user_timezone(&$form, &$form_state)"
"t","Translates a string to the current language or to a given language.","t($string, array $args = array(), array $options = array())"
"tablesort_cell","Formats a table cell.","tablesort_cell($cell, $header, $ts, $i)"
"tablesort_get_order","Determines the current sort criterion.","tablesort_get_order($headers)"
"tablesort_get_query_parameters","Composes a URL query parameter array for table sorting links.","tablesort_get_query_parameters()"
"tablesort_get_sort","Determines the current sort direction.","tablesort_get_sort($headers)"
"tablesort_header","Formats a column header.","tablesort_header($cell, $header, $ts)"
"tablesort_init","Initialize the table sort context.","tablesort_init($header)"
"taxonomy_admin_paths","Implements hook_admin_paths().","taxonomy_admin_paths()"
"taxonomy_admin_vocabulary_title_callback","Returns the sanitized name of a vocabulary.","taxonomy_admin_vocabulary_title_callback($vocabulary)"
"taxonomy_allowed_values","Returns the set of valid terms for a taxonomy field.","taxonomy_allowed_values($field)"
"taxonomy_autocomplete","Page callback: Outputs JSON for taxonomy autocomplete suggestions.","taxonomy_autocomplete($field_name = '', $tags_typed = '')"
"taxonomy_autocomplete_validate","Form element validate handler for taxonomy term autocomplete element.","taxonomy_autocomplete_validate($element, &$form_state)"
"taxonomy_build_node_index","Builds and inserts taxonomy index entries for a given node.","taxonomy_build_node_index($node)"
"taxonomy_check_vocabulary_hierarchy","Checks and updates the hierarchy flag of a vocabulary.","taxonomy_check_vocabulary_hierarchy($vocabulary, $changed_term)"
"taxonomy_delete_node_index","Deletes taxonomy index entries for a given node.","taxonomy_delete_node_index($node)"
"taxonomy_entity_info","Implements hook_entity_info().","taxonomy_entity_info()"
"taxonomy_entity_query_alter","Implements hook_entity_query_alter().","taxonomy_entity_query_alter($query)"
"taxonomy_field_extra_fields","Implements hook_field_extra_fields().","taxonomy_field_extra_fields()"
"taxonomy_field_formatter_info","Implements hook_field_formatter_info().","taxonomy_field_formatter_info()"
"taxonomy_field_formatter_prepare_view","Implements hook_field_formatter_prepare_view().","taxonomy_field_formatter_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $displays)"
"taxonomy_field_formatter_view","Implements hook_field_formatter_view().","taxonomy_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"taxonomy_field_info","Implements hook_field_info().","taxonomy_field_info()"
"taxonomy_field_is_empty","Implements hook_field_is_empty().","taxonomy_field_is_empty($item, $field)"
"taxonomy_field_presave","Implements hook_field_presave().","taxonomy_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items)"
"taxonomy_field_schema","Implements hook_field_schema().","taxonomy_field_schema($field)"
"taxonomy_field_settings_form","Implements hook_field_settings_form().","taxonomy_field_settings_form($field, $instance, $has_data)"
"taxonomy_field_validate","Implements hook_field_validate().","taxonomy_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"taxonomy_field_widget_error","Implements hook_field_widget_error().","taxonomy_field_widget_error($element, $error, $form, &$form_state)"
"taxonomy_field_widget_form","Implements hook_field_widget_form().","taxonomy_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"taxonomy_field_widget_info","Implements hook_field_widget_info().","taxonomy_field_widget_info()"
"taxonomy_field_widget_info_alter","Implements hook_field_widget_info_alter().","taxonomy_field_widget_info_alter(&$info)"
"taxonomy_form_term","Form function for the term edit form.","taxonomy_form_term($form, &$form_state, $edit = array(), $vocabulary = NULL)"
"taxonomy_form_term_submit","Submit handler to insert or update a term.","taxonomy_form_term_submit($form, &$form_state)"
"taxonomy_form_term_submit_build_taxonomy_term","Updates the form state&#039;s term entity by processing this submission&#039;s values.","taxonomy_form_term_submit_build_taxonomy_term($form, &$form_state)"
"taxonomy_form_term_validate","Validation handler for the term form.","taxonomy_form_term_validate($form, &$form_state)"
"taxonomy_form_vocabulary","Form builder for the vocabulary editing form.","taxonomy_form_vocabulary($form, &$form_state, $edit = array())"
"taxonomy_form_vocabulary_submit","Form submission handler for taxonomy_form_vocabulary().","taxonomy_form_vocabulary_submit($form, &$form_state)"
"taxonomy_form_vocabulary_validate","Form validation handler for taxonomy_form_vocabulary().","taxonomy_form_vocabulary_validate($form, &$form_state)"
"taxonomy_get_children","Finds all children of a term ID.","taxonomy_get_children($tid, $vid = 0)"
"taxonomy_get_parents","Finds all parents of a given term ID.","taxonomy_get_parents($tid)"
"taxonomy_get_parents_all","Find all ancestors of a given term ID.","taxonomy_get_parents_all($tid)"
"taxonomy_get_term_by_name","Try to map a string to an existing term, as for glossary use.","taxonomy_get_term_by_name($name, $vocabulary = NULL)"
"taxonomy_get_tree","Create a hierarchical representation of a vocabulary.","taxonomy_get_tree($vid, $parent = 0, $max_depth = NULL, $load_entities = FALSE)"
"taxonomy_get_vocabularies","Return an array of all vocabulary objects.","taxonomy_get_vocabularies()"
"taxonomy_help","Implements hook_help().","taxonomy_help($path, $arg)"
"taxonomy_implode_tags","Implodes a list of tags of a certain vocabulary into a string.","taxonomy_implode_tags($tags, $vid = NULL)"
"taxonomy_menu","Implements hook_menu().","taxonomy_menu()"
"taxonomy_node_delete","Implements hook_node_delete().","taxonomy_node_delete($node)"
"taxonomy_node_insert","Implements hook_node_insert().","taxonomy_node_insert($node)"
"taxonomy_node_update","Implements hook_node_update().","taxonomy_node_update($node)"
"taxonomy_options_list","Implements hook_options_list().","taxonomy_options_list($field, $instance, $entity_type, $entity)"
"taxonomy_overview_terms","Form builder for the taxonomy terms overview.","taxonomy_overview_terms($form, &$form_state, $vocabulary)"
"taxonomy_overview_terms_submit","Submit handler for terms overview form.","taxonomy_overview_terms_submit($form, &$form_state)"
"taxonomy_overview_vocabularies","Form builder to list and manage vocabularies.","taxonomy_overview_vocabularies($form)"
"taxonomy_overview_vocabularies_submit","Submit handler for vocabularies overview. Updates changed vocabulary weights.","taxonomy_overview_vocabularies_submit($form, &$form_state)"
"taxonomy_permission","Implements hook_permission().","taxonomy_permission()"
"taxonomy_rdf_mapping","Implements hook_rdf_mapping().","taxonomy_rdf_mapping()"
"taxonomy_schema","Implements hook_schema().","taxonomy_schema()"
"taxonomy_select_nodes","Return nodes attached to a term across all field instances.","taxonomy_select_nodes($tid, $pager = TRUE, $limit = FALSE, $order = array('t.sticky' => 'DESC', 't.created' => 'DESC'))"
"taxonomy_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","taxonomy_taxonomy_term_delete($term)"
"taxonomy_taxonomy_vocabulary_update","Implements hook_taxonomy_vocabulary_update().","taxonomy_taxonomy_vocabulary_update($vocabulary)"
"taxonomy_terms_static_reset","Clear all static cache variables for terms.","taxonomy_terms_static_reset()"
"taxonomy_term_build_content","Builds a structured array representing the term&#039;s content.","taxonomy_term_build_content($term, $view_mode = 'full', $langcode = NULL)"
"taxonomy_term_confirm_delete","Form builder for the term delete form.","taxonomy_term_confirm_delete($form, &$form_state, $tid)"
"taxonomy_term_confirm_delete_submit","Submit handler to delete a term after confirmation.","taxonomy_term_confirm_delete_submit($form, &$form_state)"
"taxonomy_term_delete","Delete a term.","taxonomy_term_delete($tid)"
"taxonomy_term_edit_access","Return edit access for a given term.","taxonomy_term_edit_access($term)"
"taxonomy_term_feed","Generate the content feed for a taxonomy term.","taxonomy_term_feed($term)"
"taxonomy_term_is_page","Returns whether the current page is the page of the passed-in term.","taxonomy_term_is_page($term)"
"taxonomy_term_load","Return the term object matching a term ID.","taxonomy_term_load($tid)"
"taxonomy_term_load_multiple","Load multiple taxonomy terms based on certain conditions.","taxonomy_term_load_multiple($tids = array(), $conditions = array())"
"taxonomy_term_page","Menu callback; displays all nodes associated with a term.","taxonomy_term_page($term)"
"taxonomy_term_save","Saves a term object to the database.","taxonomy_term_save($term)"
"taxonomy_term_show","Generates an array which displays a term detail page.","taxonomy_term_show($term)"
"taxonomy_term_title","Title callback for term pages.","taxonomy_term_title($term)"
"taxonomy_term_uri","Implements callback_entity_info_uri().","taxonomy_term_uri($term)"
"taxonomy_term_view","Generate an array for rendering the given term.","taxonomy_term_view($term, $view_mode = 'full', $langcode = NULL)"
"taxonomy_term_view_multiple","Constructs a drupal_render() style array from an array of loaded terms.","taxonomy_term_view_multiple($terms, $view_mode = 'teaser', $weight = 0, $langcode = NULL)"
"taxonomy_test_entity_view","Implements hook_entity_view().","taxonomy_test_entity_view($entity, $type, $view_mode, $langcode)"
"taxonomy_test_form_alter","Implements hook_form_alter().","taxonomy_test_form_alter(&$form, $form_state, $form_id)"
"taxonomy_test_get_antonym","Return the antonym of the given term ID.","taxonomy_test_get_antonym($tid)"
"taxonomy_test_schema","Implements hook_schema().","taxonomy_test_schema()"
"taxonomy_test_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","taxonomy_test_taxonomy_term_delete($term)"
"taxonomy_test_taxonomy_term_insert","Implements hook_taxonomy_term_insert().","taxonomy_test_taxonomy_term_insert($term)"
"taxonomy_test_taxonomy_term_load","Implements hook_taxonomy_term_load().","taxonomy_test_taxonomy_term_load($terms)"
"taxonomy_test_taxonomy_term_update","Implements hook_taxonomy_term_update().","taxonomy_test_taxonomy_term_update($term)"
"taxonomy_test_taxonomy_term_view","Implements hook_taxonomy_term_view().","taxonomy_test_taxonomy_term_view($term, $view_mode, $langcode)"
"taxonomy_theme","Implements hook_theme().","taxonomy_theme()"
"taxonomy_tokens","Implements hook_tokens().","taxonomy_tokens($type, $tokens, array $data = array(), array $options = array())"
"taxonomy_token_info","Implements hook_token_info().","taxonomy_token_info()"
"taxonomy_uninstall","Implements hook_uninstall().","taxonomy_uninstall()"
"taxonomy_update_7001","Rename taxonomy tables.","taxonomy_update_7001()"
"taxonomy_update_7002","Add {vocabulary}.machine_name column.","taxonomy_update_7002()"
"taxonomy_update_7003","Remove the related terms setting from vocabularies.","taxonomy_update_7003()"
"taxonomy_update_7004","Move taxonomy vocabulary associations for nodes to fields and field instances.","taxonomy_update_7004()"
"taxonomy_update_7005","Migrate {taxonomy_term_node} table to field storage.","taxonomy_update_7005(&$sandbox)"
"taxonomy_update_7006","Add {taxonomy_term_data}.format column.","taxonomy_update_7006()"
"taxonomy_update_7007","Add index on {taxonomy_term_data}.name column to speed up taxonomy_get_term_by_name().","taxonomy_update_7007()"
"taxonomy_update_7008","Change the weight columns to normal int.","taxonomy_update_7008()"
"taxonomy_update_7009","Change {taxonomy_term_data}.format into varchar.","taxonomy_update_7009()"
"taxonomy_update_7010","Change {taxonomy_index}.created to support signed int.","taxonomy_update_7010()"
"taxonomy_update_7011","Drop unpublished nodes from the index.","taxonomy_update_7011(&$sandbox)"
"taxonomy_update_dependencies","Implements hook_update_dependencies().","taxonomy_update_dependencies()"
"taxonomy_vocabulary_confirm_delete","Form builder for the vocabulary delete confirmation form.","taxonomy_vocabulary_confirm_delete($form, &$form_state, $vid)"
"taxonomy_vocabulary_confirm_delete_submit","Submit handler to delete a vocabulary after confirmation.","taxonomy_vocabulary_confirm_delete_submit($form, &$form_state)"
"taxonomy_vocabulary_confirm_reset_alphabetical","Form builder to confirm resetting a vocabulary to alphabetical order.","taxonomy_vocabulary_confirm_reset_alphabetical($form, &$form_state, $vid)"
"taxonomy_vocabulary_confirm_reset_alphabetical_submit","Submit handler to reset a vocabulary to alphabetical order after confirmation.","taxonomy_vocabulary_confirm_reset_alphabetical_submit($form, &$form_state)"
"taxonomy_vocabulary_delete","Deletes a vocabulary.","taxonomy_vocabulary_delete($vid)"
"taxonomy_vocabulary_get_names","Get names for all taxonomy vocabularies.","taxonomy_vocabulary_get_names()"
"taxonomy_vocabulary_load","Return the vocabulary object matching a vocabulary ID.","taxonomy_vocabulary_load($vid)"
"taxonomy_vocabulary_load_multiple","Load multiple taxonomy vocabularies based on certain conditions.","taxonomy_vocabulary_load_multiple($vids = array(), $conditions = array())"
"taxonomy_vocabulary_machine_name_load","Return the vocabulary object matching a vocabulary machine name.","taxonomy_vocabulary_machine_name_load($name)"
"taxonomy_vocabulary_save","Saves a vocabulary.","taxonomy_vocabulary_save($vocabulary)"
"taxonomy_vocabulary_static_reset","Clear all static cache variables for vocabularies.","taxonomy_vocabulary_static_reset($ids = NULL)"
"template_preprocess","Adds a default set of helper variables for variable processors and templates.","template_preprocess(&$variables, $hook)"
"template_preprocess_aggregator_feed_source","Processes variables for aggregator-feed-source.tpl.php.","template_preprocess_aggregator_feed_source(&$variables)"
"template_preprocess_aggregator_item","Processes variables for aggregator-item.tpl.php.","template_preprocess_aggregator_item(&$variables)"
"template_preprocess_aggregator_summary_item","Processes variables for aggregator-summary-item.tpl.php.","template_preprocess_aggregator_summary_item(&$variables)"
"template_preprocess_aggregator_summary_items","Processes variables for aggregator-summary-items.tpl.php.","template_preprocess_aggregator_summary_items(&$variables)"
"template_preprocess_aggregator_wrapper","Processes variables for aggregator-wrapper.tpl.php.","template_preprocess_aggregator_wrapper(&$variables)"
"template_preprocess_block","Processes variables for block.tpl.php.","template_preprocess_block(&$variables)"
"template_preprocess_block_admin_display_form","Processes variables for block-admin-display-form.tpl.php.","template_preprocess_block_admin_display_form(&$variables)"
"template_preprocess_book_all_books_block","Processes variables for book-all-books-block.tpl.php.","template_preprocess_book_all_books_block(&$variables)"
"template_preprocess_book_export_html","Processes variables for book-export-html.tpl.php.","template_preprocess_book_export_html(&$variables)"
"template_preprocess_book_navigation","Processes variables for book-navigation.tpl.php.","template_preprocess_book_navigation(&$variables)"
"template_preprocess_book_node_export_html","Processes variables for book-node-export-html.tpl.php.","template_preprocess_book_node_export_html(&$variables)"
"template_preprocess_comment","Process variables for comment.tpl.php.","template_preprocess_comment(&$variables)"
"template_preprocess_comment_wrapper","Process variables for comment-wrapper.tpl.php.","template_preprocess_comment_wrapper(&$variables)"
"template_preprocess_dashboard_admin_display_form","Preprocesses variables for block-admin-display-form.tpl.php.","template_preprocess_dashboard_admin_display_form(&$variables)"
"template_preprocess_field","Theme preprocess function for theme_field() and field.tpl.php.","template_preprocess_field(&$variables, $hook)"
"template_preprocess_forums","Preprocesses variables for forums.tpl.php.","template_preprocess_forums(&$variables)"
"template_preprocess_forum_icon","Preprocesses variables for forum-icon.tpl.php.","template_preprocess_forum_icon(&$variables)"
"template_preprocess_forum_list","Preprocesses variables for forum-list.tpl.php.","template_preprocess_forum_list(&$variables)"
"template_preprocess_forum_submitted","Preprocesses variables for forum-submitted.tpl.php.","template_preprocess_forum_submitted(&$variables)"
"template_preprocess_forum_topic_list","Preprocesses variables for forum-topic-list.tpl.php.","template_preprocess_forum_topic_list(&$variables)"
"template_preprocess_html","Preprocess variables for html.tpl.php","template_preprocess_html(&$variables)"
"template_preprocess_maintenance_page","Process variables for maintenance-page.tpl.php.","template_preprocess_maintenance_page(&$variables)"
"template_preprocess_menu_tree","Implements template_preprocess_HOOK() for theme_menu_tree().","template_preprocess_menu_tree(&$variables)"
"template_preprocess_node","Processes variables for node.tpl.php","template_preprocess_node(&$variables)"
"template_preprocess_overlay","Implements template_preprocess_HOOK() for overlay.tpl.php","template_preprocess_overlay(&$variables)"
"template_preprocess_page","Preprocess variables for page.tpl.php","template_preprocess_page(&$variables)"
"template_preprocess_poll_bar","Preprocess the poll_bar theme hook.","template_preprocess_poll_bar(&$variables)"
"template_preprocess_poll_results","Preprocess the poll_results theme hook.","template_preprocess_poll_results(&$variables)"
"template_preprocess_poll_vote","Themes the voting form for a poll.","template_preprocess_poll_vote(&$variables)"
"template_preprocess_profile_block","Process variables for profile-block.tpl.php.","template_preprocess_profile_block(&$variables)"
"template_preprocess_profile_listing","Process variables for profile-listing.tpl.php.","template_preprocess_profile_listing(&$variables)"
"template_preprocess_profile_wrapper","Process variables for profile-wrapper.tpl.php.","template_preprocess_profile_wrapper(&$variables)"
"template_preprocess_region","Preprocess variables for region.tpl.php","template_preprocess_region(&$variables)"
"template_preprocess_search_block_form","Process variables for search-block-form.tpl.php.","template_preprocess_search_block_form(&$variables)"
"template_preprocess_search_result","Process variables for search-result.tpl.php.","template_preprocess_search_result(&$variables)"
"template_preprocess_search_results","Process variables for search-results.tpl.php.","template_preprocess_search_results(&$variables)"
"template_preprocess_taxonomy_term","Process variables for taxonomy-term.tpl.php.","template_preprocess_taxonomy_term(&$variables)"
"template_preprocess_theme_test","Preprocesses variables for theme_theme_test().","template_preprocess_theme_test(&$variables)"
"template_preprocess_username","Preprocesses variables for theme_username().","template_preprocess_username(&$variables)"
"template_preprocess_user_picture","Process variables for user-picture.tpl.php.","template_preprocess_user_picture(&$variables)"
"template_preprocess_user_profile","Process variables for user-profile.tpl.php.","template_preprocess_user_profile(&$variables)"
"template_preprocess_user_profile_category","Process variables for user-profile-category.tpl.php.","template_preprocess_user_profile_category(&$variables)"
"template_preprocess_user_profile_item","Process variables for user-profile-item.tpl.php.","template_preprocess_user_profile_item(&$variables)"
"template_process","Adds helper variables derived from variables defined during preprocessing.","template_process(&$variables, $hook)"
"template_process_field","Theme process function for theme_field() and field.tpl.php.","template_process_field(&$variables, $hook)"
"template_process_html","Process variables for html.tpl.php","template_process_html(&$variables)"
"template_process_maintenance_page","Theme process function for theme_maintenance_field().","template_process_maintenance_page(&$variables)"
"template_process_overlay","Implements template_process_HOOK() for overlay.tpl.php","template_process_overlay(&$variables)"
"template_process_page","Process variables for page.tpl.php","template_process_page(&$variables)"
"template_process_username","Processes variables for theme_username().","template_process_username(&$variables)"
"testing_install","Implements hook_install().","testing_install()"
"test_theme_theme_test_alter_alter","Tests a theme implementing an alter hook.","test_theme_theme_test_alter_alter(&$data)"
"test_theme_theme_test__suggestion","Tests a theme overriding a suggestion of a base theme hook.","test_theme_theme_test__suggestion($variables)"
"text_field_formatter_info","Implements hook_field_formatter_info().","text_field_formatter_info()"
"text_field_formatter_settings_form","Implements hook_field_formatter_settings_form().","text_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state)"
"text_field_formatter_settings_summary","Implements hook_field_formatter_settings_summary().","text_field_formatter_settings_summary($field, $instance, $view_mode)"
"text_field_formatter_view","Implements hook_field_formatter_view().","text_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display)"
"text_field_info","Implements hook_field_info().","text_field_info()"
"text_field_instance_settings_form","Implements hook_field_instance_settings_form().","text_field_instance_settings_form($field, $instance)"
"text_field_is_empty","Implements hook_field_is_empty().","text_field_is_empty($item, $field)"
"text_field_load","Implements hook_field_load().","text_field_load($entity_type, $entities, $field, $instances, $langcode, &$items)"
"text_field_prepare_translation","Implements hook_field_prepare_translation().","text_field_prepare_translation($entity_type, $entity, $field, $instance, $langcode, &$items, $source_entity, $source_langcode)"
"text_field_schema","Implements hook_field_schema().","text_field_schema($field)"
"text_field_settings_form","Implements hook_field_settings_form().","text_field_settings_form($field, $instance, $has_data)"
"text_field_validate","Implements hook_field_validate().","text_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors)"
"text_field_widget_error","Implements hook_field_widget_error().","text_field_widget_error($element, $error, $form, &$form_state)"
"text_field_widget_form","Implements hook_field_widget_form().","text_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element)"
"text_field_widget_info","Implements hook_field_widget_info().","text_field_widget_info()"
"text_field_widget_settings_form","Implements hook_field_widget_settings_form().","text_field_widget_settings_form($field, $instance)"
"text_filter_format_disable","Implements hook_filter_format_disable().","text_filter_format_disable($format)"
"text_filter_format_update","Implements hook_filter_format_update().","text_filter_format_update($format)"
"text_help","Implements hook_help().","text_help($path, $arg)"
"text_summary","Generate a trimmed, formatted version of a text field value.","text_summary($text, $format = NULL, $size = NULL)"
"text_update_7000","Change text field &#039;format&#039; columns into varchar.","text_update_7000()"
"theme","Generates themed output.","theme($hook, $variables = array())"
"theme_admin_block","Returns HTML for an administrative block for display.","theme_admin_block($variables)"
"theme_admin_block_content","Returns HTML for the content of an administrative block.","theme_admin_block_content($variables)"
"theme_admin_page","Returns HTML for an administrative page.","theme_admin_page($variables)"
"theme_aggregator_block_item","Returns HTML for an individual feed item for display in the block.","theme_aggregator_block_item($variables)"
"theme_aggregator_categorize_items","Returns HTML for the aggregator page list form for assigning categories.","theme_aggregator_categorize_items($variables)"
"theme_aggregator_page_opml","Prints the OPML page for the feed.","theme_aggregator_page_opml($variables)"
"theme_aggregator_page_rss","Prints the RSS page for a feed.","theme_aggregator_page_rss($variables)"
"theme_authorize_message","Returns HTML for a single log message from the authorize.php batch operation.","theme_authorize_message($variables)"
"theme_authorize_report","Returns HTML for a results report of an operation run by authorize.php.","theme_authorize_report($variables)"
"theme_book_admin_table","Returns HTML for a book administration form.","theme_book_admin_table($variables)"
"theme_book_title_link","Returns HTML for a link to a book title when used as a block title.","theme_book_title_link($variables)"
"theme_breadcrumb","Returns HTML for a breadcrumb trail.","theme_breadcrumb($variables)"
"theme_button","Returns HTML for a button form element.","theme_button($variables)"
"theme_checkbox","Returns HTML for a checkbox form element.","theme_checkbox($variables)"
"theme_checkboxes","Returns HTML for a set of checkbox form elements.","theme_checkboxes($variables)"
"theme_color_scheme_form","Returns HTML for a theme&#039;s color form.","theme_color_scheme_form($variables)"
"theme_comment_block","Returns HTML for a list of recent comments to be displayed in the comment block.","theme_comment_block()"
"theme_comment_post_forbidden","Returns HTML for a &quot;you can&#039;t post comments&quot; notice.","theme_comment_post_forbidden($variables)"
"theme_common_test_foo","Theme function for testing drupal_render() theming.","theme_common_test_foo($variables)"
"theme_confirm_form","Returns HTML for a confirmation form.","theme_confirm_form($variables)"
"theme_container","Returns HTML to wrap child elements in a container.","theme_container($variables)"
"theme_dashboard","Returns HTML for the entire dashboard.","theme_dashboard($variables)"
"theme_dashboard_admin","Returns HTML for the non-customizable part of the dashboard page.","theme_dashboard_admin($variables)"
"theme_dashboard_disabled_block","Returns HTML for disabled blocks, for use in dashboard customization mode.","theme_dashboard_disabled_block($variables)"
"theme_dashboard_disabled_blocks","Returns HTML for disabled blocks, for use in dashboard customization mode.","theme_dashboard_disabled_blocks($variables)"
"theme_dashboard_region","Returns HTML for a generic dashboard region.","theme_dashboard_region($variables)"
"theme_date","Returns HTML for a date selection form element.","theme_date($variables)"
"theme_dblog_message","Returns HTML for a log message.","theme_dblog_message($variables)"
"theme_disable","Disables a given list of themes.","theme_disable($theme_list)"
"theme_enable","Enables a given list of themes.","theme_enable($theme_list)"
"theme_exposed_filters","Returns HTML for an exposed filter form.","theme_exposed_filters($variables)"
"theme_feed_icon","Returns HTML for a feed icon.","theme_feed_icon($variables)"
"theme_field","Returns HTML for a field.","theme_field($variables)"
"theme_fieldset","Returns HTML for a fieldset form element and its children.","theme_fieldset($variables)"
"theme_field_multiple_value_form","Returns HTML for an individual form element.","theme_field_multiple_value_form($variables)"
"theme_field_ui_table","Returns HTML for Field UI overview tables.","theme_field_ui_table($variables)"
"theme_file","Returns HTML for a file upload form element.","theme_file($variables)"
"theme_file_formatter_table","Returns HTML for a file attachments table.","theme_file_formatter_table($variables)"
"theme_file_icon","Returns HTML for an image with an appropriate icon for the given file.","theme_file_icon($variables)"
"theme_file_link","Returns HTML for a link to a file.","theme_file_link($variables)"
"theme_file_managed_file","Returns HTML for a managed file element.","theme_file_managed_file($variables)"
"theme_file_upload_help","Returns HTML for help text based on file upload validators.","theme_file_upload_help($variables)"
"theme_file_widget","Returns HTML for an individual file upload widget.","theme_file_widget($variables)"
"theme_file_widget_multiple","Returns HTML for a group of file upload widgets.","theme_file_widget_multiple($variables)"
"theme_filter_admin_format_filter_order","Returns HTML for a text format&#039;s filter order form.","theme_filter_admin_format_filter_order($variables)"
"theme_filter_admin_overview","Returns HTML for the text format administration overview form.","theme_filter_admin_overview($variables)"
"theme_filter_guidelines","Returns HTML for guidelines for a text format.","theme_filter_guidelines($variables)"
"theme_filter_tips","Returns HTML for a set of filter tips.","theme_filter_tips($variables)"
"theme_filter_tips_more_info","Returns HTML for a link to the more extensive filter tips.","theme_filter_tips_more_info()"
"theme_form","Returns HTML for a form.","theme_form($variables)"
"theme_form_element","Returns HTML for a form element.","theme_form_element($variables)"
"theme_form_element_label","Returns HTML for a form element label and required marker.","theme_form_element_label($variables)"
"theme_form_required_marker","Returns HTML for a marker for required form elements.","theme_form_required_marker($variables)"
"theme_forum_form","Returns HTML for a forum form.","theme_forum_form($variables)"
"theme_get_registry","Gets the theme registry.","theme_get_registry($complete = TRUE)"
"theme_get_setting","Retrieves a setting for the current theme or for a given theme.","theme_get_setting($setting_name, $theme = NULL)"
"theme_get_suggestions","Generate an array of suggestions from path arguments.","theme_get_suggestions($args, $base, $delimiter = '__')"
"theme_hidden","Returns HTML for a hidden form element.","theme_hidden($variables)"
"theme_html_tag","Returns HTML for a generic HTML tag with attributes.","theme_html_tag($variables)"
"theme_image","Returns HTML for an image.","theme_image($variables)"
"theme_image_anchor","Returns HTML for a 3x3 grid of checkboxes for image anchors.","theme_image_anchor($variables)"
"theme_image_button","Returns HTML for an image button form element.","theme_image_button($variables)"
"theme_image_crop_summary","Returns HTML for a summary of an image crop effect.","theme_image_crop_summary($variables)"
"theme_image_formatter","Returns HTML for an image field formatter.","theme_image_formatter($variables)"
"theme_image_resize_summary","Returns HTML for a summary of an image resize effect.","theme_image_resize_summary($variables)"
"theme_image_rotate_summary","Returns HTML for a summary of an image rotate effect.","theme_image_rotate_summary($variables)"
"theme_image_scale_summary","Returns HTML for a summary of an image scale effect.","theme_image_scale_summary($variables)"
"theme_image_style","Returns HTML for an image using a specific image style.","theme_image_style($variables)"
"theme_image_style_effects","Returns HTML for a listing of the effects within a specific image style.","theme_image_style_effects($variables)"
"theme_image_style_list","Returns HTML for the page containing the list of image styles.","theme_image_style_list($variables)"
"theme_image_style_preview","Returns HTML for a preview of an image style.","theme_image_style_preview($variables)"
"theme_image_widget","Returns HTML for an image field widget.","theme_image_widget($variables)"
"theme_indentation","Returns HTML for an indentation div; used for drag and drop tables.","theme_indentation($variables)"
"theme_install_page","Returns HTML for the installation page.","theme_install_page($variables)"
"theme_item_list","Returns HTML for a list or nested list of items.","theme_item_list($variables)"
"theme_link","Returns HTML for a link.","theme_link($variables)"
"theme_links","Returns HTML for a set of links.","theme_links($variables)"
"theme_locale_date_format_form","Returns HTML for a locale date format form.","theme_locale_date_format_form($variables)"
"theme_locale_languages_configure_form","Returns HTML for a language configuration form.","theme_locale_languages_configure_form($variables)"
"theme_locale_languages_overview_form","Returns HTML for the language overview form.","theme_locale_languages_overview_form($variables)"
"theme_mark","Returns HTML for a marker for new or updated content.","theme_mark($variables)"
"theme_menu_admin_overview","Returns HTML for a menu title and description for the menu overview page.","theme_menu_admin_overview($variables)"
"theme_menu_link","Returns HTML for a menu link and submenu.","theme_menu_link(array $variables)"
"theme_menu_local_action","Returns HTML for a single local action link.","theme_menu_local_action($variables)"
"theme_menu_local_task","Returns HTML for a single local task link.","theme_menu_local_task($variables)"
"theme_menu_local_tasks","Returns HTML for primary and secondary local tasks.","theme_menu_local_tasks(&$variables)"
"theme_menu_overview_form","Returns HTML for the menu overview form into a table.","theme_menu_overview_form($variables)"
"theme_menu_tree","Returns HTML for a wrapper for a menu sub-tree.","theme_menu_tree($variables)"
"theme_more_help_link","Returns HTML for a &quot;more help&quot; link.","theme_more_help_link($variables)"
"theme_more_link","Returns HTML for a &quot;more&quot; link, like those used in blocks.","theme_more_link($variables)"
"theme_node_add_list","Returns HTML for a list of available node types for node creation.","theme_node_add_list($variables)"
"theme_node_admin_overview","Returns HTML for a node type description for the content type admin overview page.","theme_node_admin_overview($variables)"
"theme_node_preview","Returns HTML for a node preview for display during node creation and editing.","theme_node_preview($variables)"
"theme_node_recent_block","Returns HTML for a list of recent content.","theme_node_recent_block($variables)"
"theme_node_recent_content","Returns HTML for a recent node to be displayed in the recent content block.","theme_node_recent_content($variables)"
"theme_node_search_admin","Returns HTML for the content ranking part of the search settings admin page.","theme_node_search_admin($variables)"
"theme_options_none","Returns HTML for the label for the empty value for options that are not required.","theme_options_none($variables)"
"theme_overlay_disable_message","Returns the HTML for the message about how to disable the overlay.","theme_overlay_disable_message($variables)"
"theme_pager","Returns HTML for a query pager.","theme_pager($variables)"
"theme_pager_first","Returns HTML for the &quot;first page&quot; link in a query pager.","theme_pager_first($variables)"
"theme_pager_last","Returns HTML for the &quot;last page&quot; link in query pager.","theme_pager_last($variables)"
"theme_pager_link","Returns HTML for a link to a specific query result page.","theme_pager_link($variables)"
"theme_pager_next","Returns HTML for the &quot;next page&quot; link in a query pager.","theme_pager_next($variables)"
"theme_pager_previous","Returns HTML for the &quot;previous page&quot; link in a query pager.","theme_pager_previous($variables)"
"theme_password","Returns HTML for a password form element.","theme_password($variables)"
"theme_poll_choices","Returns HTML for an admin poll form for choices.","theme_poll_choices($variables)"
"theme_profile_admin_overview","Returns HTML for the profile field overview form into a drag and drop enabled table.","theme_profile_admin_overview($variables)"
"theme_progress_bar","Returns HTML for a progress bar.","theme_progress_bar($variables)"
"theme_radio","Returns HTML for a radio button form element.","theme_radio($variables)"
"theme_radios","Returns HTML for a set of radio button form elements.","theme_radios($variables)"
"theme_rdf_metadata","Returns HTML for a series of empty spans for exporting RDF metadata in RDFa.","theme_rdf_metadata($variables)"
"theme_rdf_template_variable_wrapper","Returns HTML for a template variable wrapped in an HTML element with the
RDF attributes.","theme_rdf_template_variable_wrapper($variables)"
"theme_render_template","Renders a system default template, which is essentially a PHP template.","theme_render_template($template_file, $variables)"
"theme_select","Returns HTML for a select form element.","theme_select($variables)"
"theme_shortcut_set_customize","Returns HTML for a shortcut set customization form.","theme_shortcut_set_customize($variables)"
"theme_simpletest_result_summary","Returns HTML for the summary status of a simpletest result.","theme_simpletest_result_summary($variables)"
"theme_simpletest_test_table","Returns HTML for a test list generated by simpletest_test_form() into a table.","theme_simpletest_test_table($variables)"
"theme_status_messages","Returns HTML for status and/or error messages, grouped by type.","theme_status_messages($variables)"
"theme_status_report","Returns HTML for the status report.","theme_status_report($variables)"
"theme_submit","Returns HTML for a submit button form element.","theme_submit($variables)"
"theme_system_admin_index","Returns HTML for the output of the dashboard page.","theme_system_admin_index($variables)"
"theme_system_compact_link","Returns HTML for a link to show or hide inline help descriptions.","theme_system_compact_link()"
"theme_system_date_time_settings","Returns HTML for the date settings form.","theme_system_date_time_settings($variables)"
"theme_system_modules_fieldset","Returns HTML for the modules form.","theme_system_modules_fieldset($variables)"
"theme_system_modules_incompatible","Returns HTML for a message about incompatible modules.","theme_system_modules_incompatible($variables)"
"theme_system_modules_uninstall","Returns HTML for a table of currently disabled modules.","theme_system_modules_uninstall($variables)"
"theme_system_powered_by","Returns HTML for the Powered by Drupal text.","theme_system_powered_by()"
"theme_system_settings_form","Returns HTML for a system settings form.","theme_system_settings_form($variables)"
"theme_system_themes_page","Returns HTML for the Appearance page.","theme_system_themes_page($variables)"
"theme_table","Returns HTML for a table.","theme_table($variables)"
"theme_tableselect","Returns HTML for a table with radio buttons or checkboxes.","theme_tableselect($variables)"
"theme_tablesort_indicator","Returns HTML for a sort icon.","theme_tablesort_indicator($variables)"
"theme_task_list","Returns HTML for a list of maintenance tasks to perform.","theme_task_list($variables)"
"theme_taxonomy_overview_terms","Returns HTML for a terms overview form as a sortable list of terms.","theme_taxonomy_overview_terms($variables)"
"theme_taxonomy_overview_vocabularies","Returns HTML for the vocabulary overview form as a sortable list of vocabularies.","theme_taxonomy_overview_vocabularies($variables)"
"theme_test_exit","Implements hook_exit().","theme_test_exit()"
"theme_test_hook_init_page_callback","Menu callback for testing themed output generated in hook_init().","theme_test_hook_init_page_callback()"
"theme_test_init","Implements hook_init().","theme_test_init()"
"theme_test_menu","Implements hook_menu().","theme_test_menu()"
"theme_test_system_theme_info","Implements hook_system_theme_info().","theme_test_system_theme_info()"
"theme_test_theme","Implements hook_theme().","theme_test_theme($existing, $type, $theme, $path)"
"theme_textarea","Returns HTML for a textarea form element.","theme_textarea($variables)"
"theme_textfield","Returns HTML for a textfield form element.","theme_textfield($variables)"
"theme_text_format_wrapper","Returns HTML for a text format-enabled form element.","theme_text_format_wrapper($variables)"
"theme_theme_test","Returns HTML for the &#039;theme_test&#039; theme hook used by tests.","theme_theme_test($variables)"
"theme_theme_test_foo","Theme function for testing theme(&#039;theme_test_foo&#039;).","theme_theme_test_foo($variables)"
"theme_toolbar_toggle","Formats an element used to toggle the toolbar drawer&#039;s visibility.","theme_toolbar_toggle($variables)"
"theme_trigger_display","Returns HTML for the form showing actions assigned to a trigger.","theme_trigger_display($variables)"
"theme_update_last_check","Returns HTML for the last time we checked for update data.","theme_update_last_check($variables)"
"theme_update_manager_update_form","Returns HTML for the first page in the process of updating projects.","theme_update_manager_update_form($variables)"
"theme_update_page","Returns HTML for the update page.","theme_update_page($variables)"
"theme_update_report","Returns HTML for the project status report.","theme_update_report($variables)"
"theme_update_status_label","Returns HTML for a label to display for a project&#039;s update status.","theme_update_status_label($variables)"
"theme_update_version","Returns HTML for the version display of a project.","theme_update_version($variables)"
"theme_username","Returns HTML for a username, potentially linked to the user&#039;s page.","theme_username($variables)"
"theme_user_admin_permissions","Returns HTML for the administer permissions page.","theme_user_admin_permissions($variables)"
"theme_user_admin_roles","Returns HTML for the role order and new role form.","theme_user_admin_roles($variables)"
"theme_user_list","Returns HTML for a list of users.","theme_user_list($variables)"
"theme_user_permission_description","Returns HTML for an individual permission description.","theme_user_permission_description($variables)"
"theme_user_signature","Returns HTML for a user signature.","theme_user_signature($variables)"
"theme_vertical_tabs","Returns HTML for an element&#039;s children fieldsets as vertical tabs.","theme_vertical_tabs($variables)"
"timer_read","Reads the current timer value without stopping the timer.","timer_read($name)"
"timer_start","Starts the timer with the specified name.","timer_start($name)"
"timer_stop","Stops the timer with the specified name.","timer_stop($name)"
"token_find_with_prefix","Returns a list of tokens that begin with a specific prefix.","token_find_with_prefix(array $tokens, $prefix, $delimiter = ':')"
"token_generate","Generates replacement values for a list of tokens.","token_generate($type, array $tokens, array $data = array(), array $options = array())"
"token_info","Returns metadata describing supported tokens.","token_info()"
"token_replace","Replaces all tokens in a given string with appropriate values.","token_replace($text, array $data = array(), array $options = array())"
"token_scan","Builds a list of all token-like patterns that appear in the text.","token_scan($text)"
"toolbar_get_menu_tree","Gets only the top level items below the &#039;admin&#039; path.","toolbar_get_menu_tree()"
"toolbar_help","Implements hook_help().","toolbar_help($path, $arg)"
"toolbar_in_active_trail","Checks whether an item is in the active trail.","toolbar_in_active_trail($path)"
"toolbar_menu","Implements hook_menu().","toolbar_menu()"
"toolbar_menu_navigation_links","Generates a links array from a menu tree array.","toolbar_menu_navigation_links($tree)"
"toolbar_page_build","Implements hook_page_build().","toolbar_page_build(&$page)"
"toolbar_permission","Implements hook_permission().","toolbar_permission()"
"toolbar_preprocess_html","Implements hook_preprocess_html().","toolbar_preprocess_html(&$vars)"
"toolbar_preprocess_toolbar","Implements hook_preprocess_toolbar().","toolbar_preprocess_toolbar(&$variables)"
"toolbar_pre_render","Prerender function for the toolbar.","toolbar_pre_render($toolbar)"
"toolbar_system_info_alter","Implements hook_system_info_alter().","toolbar_system_info_alter(&$info, $file, $type)"
"toolbar_theme","Implements hook_theme().","toolbar_theme($existing, $type, $theme, $path)"
"toolbar_toggle_page","Menu callback; toggles the visibility of the toolbar drawer.","toolbar_toggle_page()"
"toolbar_view","Builds the admin menu as a structured array ready for drupal_render().","toolbar_view()"
"tracker_comment_delete","Implements hook_comment_delete().","tracker_comment_delete($comment)"
"tracker_comment_publish","Implements hook_comment_publish().","tracker_comment_publish($comment)"
"tracker_comment_unpublish","Implements hook_comment_unpublish().","tracker_comment_unpublish($comment)"
"tracker_comment_update","Implements hook_comment_update().","tracker_comment_update($comment)"
"tracker_cron","Implements hook_cron().","tracker_cron()"
"tracker_enable","Implements hook_enable().","tracker_enable()"
"tracker_help","Implements hook_help().","tracker_help($path, $arg)"
"tracker_menu","Implements hook_menu().","tracker_menu()"
"tracker_node_delete","Implements hook_node_delete().","tracker_node_delete($node, $arg = 0)"
"tracker_node_insert","Implements hook_node_insert().","tracker_node_insert($node, $arg = 0)"
"tracker_node_update","Implements hook_node_update().","tracker_node_update($node, $arg = 0)"
"tracker_page","Page callback: prints a listing of active nodes on the site.","tracker_page($account = NULL, $set_title = FALSE)"
"tracker_schema","Implements hook_schema().","tracker_schema()"
"tracker_uninstall","Implements hook_uninstall().","tracker_uninstall()"
"tracker_update_7000","Create new tracker_node and tracker_user tables.","tracker_update_7000()"
"translation_admin_paths","Implements hook_admin_paths().","translation_admin_paths()"
"translation_form_node_form_alter","Implements hook_form_BASE_FORM_ID_alter() for node_form().","translation_form_node_form_alter(&$form, &$form_state)"
"translation_form_node_type_form_alter","Implements hook_form_FORM_ID_alter() for node_type_form().","translation_form_node_type_form_alter(&$form, &$form_state)"
"translation_help","Implements hook_help().","translation_help($path, $arg)"
"translation_language_switch_links_alter","Implements hook_language_switch_links_alter().","translation_language_switch_links_alter(array &$links, $type, $path)"
"translation_menu","Implements hook_menu().","translation_menu()"
"translation_node_delete","Implements hook_node_delete().","translation_node_delete($node)"
"translation_node_get_translations","Gets all nodes in a given translation set.","translation_node_get_translations($tnid)"
"translation_node_insert","Implements hook_node_insert().","translation_node_insert($node)"
"translation_node_overview","Page callback: Displays a list of a node&#039;s translations.","translation_node_overview($node)"
"translation_node_prepare","Implements hook_node_prepare().","translation_node_prepare($node)"
"translation_node_update","Implements hook_node_update().","translation_node_update($node)"
"translation_node_validate","Implements hook_node_validate().","translation_node_validate($node, $form)"
"translation_node_view","Implements hook_node_view().","translation_node_view($node, $view_mode)"
"translation_path_get_translations","Returns the paths of all translations of a node, based on its Drupal path.","translation_path_get_translations($path)"
"translation_permission","Implements hook_permission().","translation_permission()"
"translation_remove_from_set","Removes a node from its translation set and updates accordingly.","translation_remove_from_set($node)"
"translation_supported_type","Returns whether the given content type has support for translations.","translation_supported_type($type)"
"translation_test_node_insert","Implements hook_node_insert().","translation_test_node_insert($node)"
"trigger_actions_delete","Implements hook_actions_delete().","trigger_actions_delete($aid)"
"trigger_assign","Builds a form that allows users to assign actions to triggers.","trigger_assign($module_to_display = NULL)"
"trigger_assign_form","Returns the form for assigning an action to a trigger.","trigger_assign_form($form, $form_state, $module, $hook, $label)"
"trigger_assign_form_submit","Form submission handler for trigger_assign_form().","trigger_assign_form_submit($form, &$form_state)"
"trigger_assign_form_validate","Form validation handler for trigger_assign_form().","trigger_assign_form_validate($form, $form_state)"
"trigger_comment_delete","Implements hook_comment_delete().","trigger_comment_delete($comment)"
"trigger_comment_insert","Implements hook_comment_insert().","trigger_comment_insert($comment)"
"trigger_comment_presave","Implements hook_comment_presave().","trigger_comment_presave($comment)"
"trigger_comment_update","Implements hook_comment_update().","trigger_comment_update($comment)"
"trigger_comment_view","Implements hook_comment_view().","trigger_comment_view($comment)"
"trigger_cron","Implements hook_cron().","trigger_cron()"
"trigger_forms","Implements hook_forms().","trigger_forms()"
"trigger_get_assigned_actions","Gets the action IDs of actions to be executed for a hook.","trigger_get_assigned_actions($hook)"
"trigger_help","Implements hook_help().","trigger_help($path, $arg)"
"trigger_install","Implements hook_install().","trigger_install()"
"trigger_menu","Implements hook_menu().","trigger_menu()"
"trigger_menu_unassign_access","Access callback: Determines if triggers can be unassigned.","trigger_menu_unassign_access()"
"trigger_node_delete","Implements hook_node_delete().","trigger_node_delete($node)"
"trigger_node_insert","Implements hook_node_insert().","trigger_node_insert($node)"
"trigger_node_presave","Implements hook_node_presave().","trigger_node_presave($node)"
"trigger_node_update","Implements hook_node_update().","trigger_node_update($node)"
"trigger_node_view","Implements hook_node_view().","trigger_node_view($node, $view_mode)"
"trigger_schema","Implements hook_schema().","trigger_schema()"
"trigger_taxonomy_term_delete","Implements hook_taxonomy_term_delete().","trigger_taxonomy_term_delete($term)"
"trigger_taxonomy_term_insert","Implements hook_taxonomy_term_insert().","trigger_taxonomy_term_insert($term)"
"trigger_taxonomy_term_update","Implements hook_taxonomy_term_update().","trigger_taxonomy_term_update($term)"
"trigger_test_action_info","Implements hook_action_info().","trigger_test_action_info()"
"trigger_test_generic_action","Action fired during the &quot;taxonomy&quot;, &quot;comment&quot;, and &quot;user&quot; trigger tests.","trigger_test_generic_action($context)"
"trigger_test_generic_any_action","Action fired during the additional trigger tests.","trigger_test_generic_any_action($context)"
"trigger_test_system_cron_action","Action fired during the &quot;cron run&quot; trigger test.","trigger_test_system_cron_action()"
"trigger_test_system_cron_conf_action","Implement a configurable Drupal action.","trigger_test_system_cron_conf_action($object, $context)"
"trigger_test_system_cron_conf_action_form","Form for configurable test action.","trigger_test_system_cron_conf_action_form($context)"
"trigger_test_system_cron_conf_action_submit","Form submission handler for configurable test action.","trigger_test_system_cron_conf_action_submit($form, $form_state)"
"trigger_test_trigger_info","Implements hook_trigger_info().","trigger_test_trigger_info()"
"trigger_theme","Implements hook_theme().","trigger_theme()"
"trigger_trigger_info","Implements hook_trigger_info().","trigger_trigger_info()"
"trigger_unassign","Form constructor for confirmation page for removal of an assigned action.","trigger_unassign($form, $form_state, $module, $hook = NULL, $aid = NULL)"
"trigger_unassign_submit","Form submission handler for trigger_unassign().","trigger_unassign_submit($form, &$form_state)"
"trigger_update_7000","Alter the &quot;hook&quot; field and drop the &quot;op field&quot; of {trigger_assignments}.","trigger_update_7000()"
"trigger_update_7001","Increase the length of the &quot;hook&quot; field to 78 characters.","trigger_update_7001()"
"trigger_update_7002","Renames nodeapi to node.","trigger_update_7002()"
"trigger_user_cancel","Implements hook_user_cancel().","trigger_user_cancel($edit, $account, $method)"
"trigger_user_delete","Implements hook_user_delete().","trigger_user_delete($account)"
"trigger_user_insert","Implements hook_user_insert().","trigger_user_insert(&$edit, $account, $category)"
"trigger_user_login","Implements hook_user_login().","trigger_user_login(&$edit, $account, $category)"
"trigger_user_logout","Implements hook_user_logout().","trigger_user_logout($account)"
"trigger_user_update","Implements hook_user_update().","trigger_user_update(&$edit, $account, $category)"
"trigger_user_view","Implements hook_user_view().","trigger_user_view($account)"
"truncate_utf8","Truncates a UTF-8-encoded string safely to a number of characters.","truncate_utf8($string, $max_length, $wordsafe = FALSE, $add_ellipsis = FALSE, $min_wordsafe_length = 1)"
"unicode_check","Wrapper around _unicode_check().","unicode_check()"
"unicode_requirements","Returns Unicode library status and errors.","unicode_requirements()"
"update_access_allowed","Determines if the current user is allowed to run update.php.","update_access_allowed()"
"update_access_denied_page","Renders a 403 access denied page for update.php.","update_access_denied_page()"
"update_already_performed","Determines if a module update has already been performed.","update_already_performed($module, $number)"
"update_authorize_batch_copy_project","Batch callback: Copies project to its proper place when authorized to do so.","update_authorize_batch_copy_project($project, $updater_name, $local_url, $filetransfer, &$context)"
"update_authorize_install_batch_finished","Batch callback: Performs actions when the authorized install batch is done.","update_authorize_install_batch_finished($success, $results)"
"update_authorize_run_install","Installs a new project when invoked by authorize.php.","update_authorize_run_install($filetransfer, $project, $updater_name, $local_url)"
"update_authorize_run_update","Updates existing projects when invoked by authorize.php.","update_authorize_run_update($filetransfer, $projects)"
"update_authorize_update_batch_finished","Batch callback: Performs actions when the authorized update batch is done.","update_authorize_update_batch_finished($success, $results)"
"update_batch","Starts the database update batch process.","update_batch($start, $redirect = NULL, $url = NULL, $batch = array(), $redirect_callback = 'drupal_goto')"
"update_build_dependency_graph","Constructs a graph which encodes the dependencies between module updates.","update_build_dependency_graph($update_functions)"
"update_cache_clear_submit","Form submission handler for system_modules().","update_cache_clear_submit($form, &$form_state)"
"update_calculate_project_data","Calculates the current update status of all projects on the site.","update_calculate_project_data($available)"
"update_calculate_project_update_status","Calculates the current update status of a specific project.","update_calculate_project_update_status($unused, &$project_data, $available)"
"update_callback_service_unavailable","Page callback: Displays an Error 503 (Service unavailable) page.","update_callback_service_unavailable()"
"update_check_incompatibility","Tests the compatibility of a module or theme.","update_check_incompatibility($name, $type = 'module')"
"update_check_requirements","Checks update requirements and reports errors and (optionally) warnings.","update_check_requirements($skip_warnings = FALSE)"
"update_clear_update_disk_cache","Clears the temporary files and directories based on file age from disk.","update_clear_update_disk_cache()"
"update_create_fetch_task","Creates a new fetch task after loading the necessary include file.","update_create_fetch_task($project)"
"update_cron","Implements hook_cron().","update_cron()"
"update_delete_file_if_stale","Deletes stale files and directories from the update manager disk cache.","update_delete_file_if_stale($path)"
"update_do_one","Performs one update and stores the results for display on the results page.","update_do_one($module, $number, $dependency_map, &$context)"
"update_extra_requirements","Returns and stores extra requirements that apply during the update process.","update_extra_requirements($requirements = NULL)"
"update_fetch_data","Attempts to fetch update data after loading the necessary include file.","update_fetch_data()"
"update_fetch_data_batch","Batch callback: Processes a step in batch for fetching available update data.","update_fetch_data_batch(&$context)"
"update_fetch_data_finished","Batch callback: Performs actions when all fetch tasks have been completed.","update_fetch_data_finished($success, $results)"
"update_filter_project_info","Filters the project .info data to only save attributes we need.","update_filter_project_info($info)"
"update_finished","Finishes the update process and stores the results for eventual display.","update_finished($success, $results, $operations)"
"update_fix_compatibility","Disable any items in the {system} table that are not core compatible.","update_fix_compatibility()"
"update_fix_d7_block_deltas","A helper function that modules can use to assist with the transformation
from numeric block deltas to string block deltas during the 6.x -&gt; 7.x
upgrade.","update_fix_d7_block_deltas(&$sandbox, $renamed_deltas, $moved_deltas)"
"update_fix_d7_install_profile","Register the currently installed profile in the system table.","update_fix_d7_install_profile()"
"update_fix_d7_requirements","Perform Drupal 6.x to 7.x updates that are required for update.php
to function properly.","update_fix_d7_requirements()"
"update_flush_caches","Implements hook_flush_caches().","update_flush_caches()"
"update_form_system_modules_alter","Implements hook_form_FORM_ID_alter() for system_modules().","update_form_system_modules_alter(&$form, $form_state)"
"update_get_available","Tries to get update information from cache and refreshes it when necessary.","update_get_available($refresh = FALSE)"
"update_get_d6_session_name","Constructs a session name compatible with a D6 environment.","update_get_d6_session_name()"
"update_get_projects","Fetches an array of installed and enabled projects.","update_get_projects()"
"update_get_project_name","Determines what project a given file object belongs to.","update_get_project_name($file)"
"update_get_update_function_list","Returns an organized list of update functions for a set of modules.","update_get_update_function_list($starting_updates)"
"update_get_update_list","Returns a list of all the pending database updates.","update_get_update_list()"
"update_help","Implements hook_help().","update_help($path, $arg)"
"update_helpful_links","Provides links to the homepage and administration pages.","update_helpful_links()"
"update_info_page","Provides an overview of the Drupal database update.","update_info_page()"
"update_init","Implements hook_init().","update_init()"
"update_install","Implements hook_install().","update_install()"
"update_is_missing","Determines if a module update is missing or unavailable.","update_is_missing($module, $number, $update_functions)"
"update_mail","Implements hook_mail().","update_mail($key, &$message, $params)"
"update_manager_access","Access callback: Resolves if the current user can access updater menu items.","update_manager_access()"
"update_manager_archive_extract","Unpacks a downloaded archive file.","update_manager_archive_extract($file, $directory)"
"update_manager_archive_verify","Verifies an archive after it has been downloaded and extracted.","update_manager_archive_verify($project, $archive_file, $directory)"
"update_manager_batch_project_get","Batch callback: Downloads, unpacks, and verifies a project.","update_manager_batch_project_get($project, $url, &$context)"
"update_manager_download_batch_finished","Batch callback: Performs actions when the download batch is completed.","update_manager_download_batch_finished($success, $results)"
"update_manager_file_get","Copies a file from the specified URL to the temporary directory for updates.","update_manager_file_get($url)"
"update_manager_install_form","Form constructor for the install form of the Update Manager module.","update_manager_install_form($form, &$form_state, $context)"
"update_manager_install_form_submit","Form submission handler for update_manager_install_form().","update_manager_install_form_submit($form, &$form_state)"
"update_manager_install_form_validate","Form validation handler for update_manager_install_form().","update_manager_install_form_validate($form, &$form_state)"
"update_manager_local_transfers_allowed","Determines if file transfers will be performed locally.","update_manager_local_transfers_allowed()"
"update_manager_update_form","Form constructor for the update form of the Update Manager module.","update_manager_update_form($form, $form_state = array(), $context)"
"update_manager_update_form_submit","Form submission handler for update_manager_update_form().","update_manager_update_form_submit($form, &$form_state)"
"update_manager_update_form_validate","Form validation handler for update_manager_update_form().","update_manager_update_form_validate($form, &$form_state)"
"update_manager_update_ready_form","Form constructor for the update ready form.","update_manager_update_ready_form($form, &$form_state)"
"update_manager_update_ready_form_submit","Form submission handler for update_manager_update_ready_form().","update_manager_update_ready_form_submit($form, &$form_state)"
"update_manual_status","Page callback: Checks for updates and displays the update status report.","update_manual_status()"
"update_menu","Implements hook_menu().","update_menu()"
"update_parse_db_url","Parse pre-Drupal 7 database connection URLs and return D7 compatible array.","update_parse_db_url($db_url, $db_prefix)"
"update_parse_xml","Parses the XML of the Drupal release history info files.","update_parse_xml($raw_xml)"
"update_prepare_d7_bootstrap","Performs extra steps required to bootstrap when using a Drupal 6 database.","update_prepare_d7_bootstrap()"
"update_process_project_info","Determines version and type information for currently installed projects.","update_process_project_info(&$projects)"
"update_project_cache","Retrieves data from {cache_update} or empties the cache when necessary.","update_project_cache($cid)"
"update_refresh","Refreshes the release data after loading the necessary include file.","update_refresh()"
"update_requirements","Implements hook_requirements().","update_requirements($phase)"
"update_resolve_dependencies","Resolves dependencies in a set of module updates, and orders them correctly.","update_resolve_dependencies($starting_updates)"
"update_results_page","Displays results of the update script with any accompanying errors.","update_results_page()"
"update_retrieve_dependencies","Invokes hook_update_dependencies() in all installed modules.","update_retrieve_dependencies()"
"update_schema","Implements hook_schema().","update_schema()"
"update_script_selection_form","Form constructor for the list of available database module updates.","update_script_selection_form($form, &$form_state)"
"update_script_test_flush_caches","Implements hook_flush_caches().","update_script_test_flush_caches()"
"update_script_test_requirements","Implements hook_requirements().","update_script_test_requirements($phase)"
"update_script_test_update_7000","Dummy update function to run during the tests.","update_script_test_update_7000()"
"update_selection_page","Renders a form with a list of available database updates.","update_selection_page()"
"update_settings","Form constructor for the update settings form.","update_settings($form)"
"update_settings_submit","Form submission handler for update_settings().","update_settings_submit($form, $form_state)"
"update_settings_validate","Form validation handler for update_settings().","update_settings_validate($form, &$form_state)"
"update_status","Page callback: Generates a page about the update status of projects.","update_status()"
"update_task_list","Adds the update task list to the current page.","update_task_list($active = NULL)"
"update_test_1_update_7000","Dummy update_test_1 update 7000.","update_test_1_update_7000()"
"update_test_1_update_7001","Dummy update_test_1 update 7001.","update_test_1_update_7001()"
"update_test_1_update_7002","Dummy update_test_1 update 7002.","update_test_1_update_7002()"
"update_test_1_update_dependencies","Implements hook_update_dependencies().","update_test_1_update_dependencies()"
"update_test_2_update_7000","Dummy update_test_2 update 7000.","update_test_2_update_7000()"
"update_test_2_update_7001","Dummy update_test_2 update 7001.","update_test_2_update_7001()"
"update_test_2_update_7002","Dummy update_test_2 update 7002.","update_test_2_update_7002()"
"update_test_2_update_dependencies","Implements hook_update_dependencies().","update_test_2_update_dependencies()"
"update_test_3_update_7000","Dummy update_test_3 update 7000.","update_test_3_update_7000()"
"update_test_3_update_dependencies","Implements hook_update_dependencies().","update_test_3_update_dependencies()"
"update_test_archiver_info","Implements hook_archiver_info().","update_test_archiver_info()"
"update_test_filetransfer_info","Implements hook_filetransfer_info().","update_test_filetransfer_info()"
"update_test_menu","Implements hook_menu().","update_test_menu()"
"update_test_mock_page","Page callback: Prints mock XML for the Update Manager module.","update_test_mock_page($project_name)"
"update_test_system_info_alter","Implements hook_system_info_alter().","update_test_system_info_alter(&$info, $file)"
"update_test_system_theme_info","Implements hook_system_theme_info().","update_test_system_theme_info()"
"update_test_update_status_alter","Implements hook_update_status_alter().","update_test_update_status_alter(&$projects)"
"update_theme","Implements hook_theme().","update_theme()"
"update_themes_disabled","Implements hook_themes_disabled().","update_themes_disabled($themes)"
"update_themes_enabled","Implements hook_themes_enabled().","update_themes_enabled($themes)"
"update_uninstall","Implements hook_uninstall().","update_uninstall()"
"update_update_7000","Create a queue to store tasks for requests to fetch available update data.","update_update_7000()"
"update_update_7001","Recreates cache_update table.","update_update_7001()"
"update_verify_update_archive","Implements hook_verify_update_archive().","update_verify_update_archive($project, $archive_file, $directory)"
"url","Generates an internal or external URL.","url($path = NULL, array $options = array())"
"url_alter_test_foo","Menu callback.","url_alter_test_foo()"
"url_alter_test_install","Impelement hook_install().","url_alter_test_install()"
"url_alter_test_menu","Implements hook_menu().","url_alter_test_menu()"
"url_alter_test_url_inbound_alter","Implements hook_url_inbound_alter().","url_alter_test_url_inbound_alter(&$path, $original_path, $path_language)"
"url_alter_test_url_outbound_alter","Implements hook_url_outbound_alter().","url_alter_test_url_outbound_alter(&$path, &$options, $original_path)"
"url_is_external","Returns TRUE if a path is external to Drupal (e.g. http://example.com).","url_is_external($path)"
"user_access","Determine whether the user has a given privilege.","user_access($string, $account = NULL)"
"user_account_form","Helper function to add default user account fields to user registration and edit form.","user_account_form(&$form, &$form_state)"
"user_account_form_validate","Form validation handler for user_account_form().","user_account_form_validate($form, &$form_state)"
"user_action_info","Implements hook_action_info().","user_action_info()"
"user_admin","Page callback: Generates the appropriate user administration form.","user_admin($callback_arg = '')"
"user_admin_account","Form builder; User administration page.","user_admin_account()"
"user_admin_account_submit","Submit the user administration update form.","user_admin_account_submit($form, &$form_state)"
"user_admin_account_validate",,"user_admin_account_validate($form, &$form_state)"
"user_admin_paths","Implements hook_admin_paths().","user_admin_paths()"
"user_admin_permissions","Menu callback: administer permissions.","user_admin_permissions($form, $form_state, $rid = NULL)"
"user_admin_permissions_submit","Save permissions selected on the administer permissions page.","user_admin_permissions_submit($form, &$form_state)"
"user_admin_role","Form to configure a single role.","user_admin_role($form, $form_state, $role)"
"user_admin_roles","Form to re-order roles or add a new one.","user_admin_roles($form, $form_state)"
"user_admin_roles_order_submit","Form submit function. Update the role weights.","user_admin_roles_order_submit($form, &$form_state)"
"user_admin_role_delete_confirm","Form to confirm role delete operation.","user_admin_role_delete_confirm($form, &$form_state, $role)"
"user_admin_role_delete_confirm_submit","Form submit handler for user_admin_role_delete_confirm().","user_admin_role_delete_confirm_submit($form, &$form_state)"
"user_admin_role_delete_submit","Form submit handler for the user_admin_role() form.","user_admin_role_delete_submit($form, &$form_state)"
"user_admin_role_submit","Form submit handler for the user_admin_role() form.","user_admin_role_submit($form, &$form_state)"
"user_admin_role_validate","Form validation handler for the user_admin_role() form.","user_admin_role_validate($form, &$form_state)"
"user_admin_settings","Form builder; Configure user settings for this site.","user_admin_settings()"
"user_authenticate","Try to validate the user&#039;s login credentials locally.","user_authenticate($name, $password)"
"user_autocomplete","Menu callback; Retrieve a JSON object containing autocomplete suggestions for existing users.","user_autocomplete($string = '')"
"user_block_configure","Implements hook_block_configure().","user_block_configure($delta = '')"
"user_block_info","Implements hook_block_info().","user_block_info()"
"user_block_save","Implements hook_block_save().","user_block_save($delta = '', $edit = array())"
"user_block_user_action","Blocks a specific user or the current user, if one is not specified.","user_block_user_action(&$entity, $context = array())"
"user_block_view","Implements hook_block_view().","user_block_view($delta = '')"
"user_build_content","Builds a structured array representing the profile content.","user_build_content($account, $view_mode = 'full', $langcode = NULL)"
"user_build_filter_query","Extends a query object for user administration filters based on session.","user_build_filter_query(SelectQuery $query)"
"user_cancel","Cancel a user account.","user_cancel($edit, $uid, $method)"
"user_cancel_access","Menu access callback; limit access to account cancellation pages.","user_cancel_access($account)"
"user_cancel_confirm","Menu callback; Cancel a user account via e-mail confirmation link.","user_cancel_confirm($account, $timestamp = 0, $hashed_pass = '')"
"user_cancel_confirm_form","Form builder; confirm form for cancelling user account.","user_cancel_confirm_form($form, &$form_state, $account)"
"user_cancel_confirm_form_submit","Submit handler for the account cancellation confirm form.","user_cancel_confirm_form_submit($form, &$form_state)"
"user_cancel_methods","Helper function to return available account cancellation methods.","user_cancel_methods()"
"user_cancel_url","Generates a URL to confirm an account cancellation request.","user_cancel_url($account)"
"user_category_load","Return a user object after checking if any profile category in the path exists.","user_category_load($uid, &$map, $index)"
"user_check_password","Check whether a plain text password matches a stored hashed password.","user_check_password($password, $account)"
"user_comment_view","Implements hook_comment_view().","user_comment_view($comment)"
"user_cookie_delete","Delete a visitor information cookie.","user_cookie_delete($cookie_name)"
"user_cookie_save","Saves visitor information as a cookie so it can be reused.","user_cookie_save(array $values)"
"user_delete","Delete a user.","user_delete($uid)"
"user_delete_multiple","Delete multiple user accounts.","user_delete_multiple(array $uids)"
"user_edit_access","Access callback for user account editing.","user_edit_access($account)"
"user_edit_cancel_submit","Submit function for the &#039;Cancel account&#039; button on the user edit form.","user_edit_cancel_submit($form, &$form_state)"
"user_element_info","Implements hook_element_info().","user_element_info()"
"user_entity_info","Implements hook_entity_info().","user_entity_info()"
"user_external_load","Fetches a user object based on an external authentication source.","user_external_load($authname)"
"user_external_login_register","Helper function for authentication modules. Either logs in or registers
the current user, based on username. Either way, the global $user object is
populated and login tasks are performed.","user_external_login_register($name, $module)"
"user_field_extra_fields","Implements hook_field_extra_fields().","user_field_extra_fields()"
"user_field_info_alter","Implements hook_field_info_alter().","user_field_info_alter(&$info)"
"user_file_delete","Implements hook_file_delete().","user_file_delete($file)"
"user_file_download","Implements hook_file_download().","user_file_download($uri)"
"user_file_download_access","Implements hook_file_download_access().","user_file_download_access($field, $entity_type, $entity)"
"user_file_move","Implements hook_file_move().","user_file_move($file, $source)"
"user_filters","List user administration filters that can be applied.","user_filters()"
"user_filter_form","Form builder; Return form for user administration filters.","user_filter_form()"
"user_filter_form_submit","Process result from user administration filter form.","user_filter_form_submit($form, &$form_state)"
"user_form_field_ui_field_edit_form_alter","Implements hook_form_FORM_ID_alter().","user_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id)"
"user_form_field_ui_field_edit_form_submit","Additional submit handler for the &#039;Edit field instance&#039; form.","user_form_field_ui_field_edit_form_submit($form, &$form_state)"
"user_form_process_password_confirm","Form element process handler for client-side password validation.","user_form_process_password_confirm($element)"
"user_form_test_current_password","A test form for user_validate_current_pass().","user_form_test_current_password($form, &$form_state, $account)"
"user_form_test_current_password_submit","Submit function for the test form for user_validate_current_pass().","user_form_test_current_password_submit($form, &$form_state)"
"user_form_test_menu","Implements hook_menu().","user_form_test_menu()"
"user_get_authmaps","Discover which external authentication module(s) authenticated a username.","user_get_authmaps($authname = NULL)"
"user_hash_password","Hash a password using a secure hash.","user_hash_password($password, $count_log2 = 0)"
"user_help","Implement hook_help().","user_help($path, $arg)"
"user_image_style_delete","Implements hook_image_style_delete().","user_image_style_delete($style)"
"user_image_style_save","Implements hook_image_style_save().","user_image_style_save($style)"
"user_install","Implements hook_install().","user_install()"
"user_is_anonymous","Determines if the current user is anonymous.","user_is_anonymous()"
"user_is_blocked","Checks for usernames blocked by user administration.","user_is_blocked($name)"
"user_is_logged_in","Determines if the current user is logged in.","user_is_logged_in()"
"user_load","Loads a user object.","user_load($uid, $reset = FALSE)"
"user_load_by_mail","Fetch a user object by email address.","user_load_by_mail($mail)"
"user_load_by_name","Fetch a user object by account name.","user_load_by_name($name)"
"user_load_multiple","Load multiple users based on certain conditions.","user_load_multiple($uids = array(), $conditions = array(), $reset = FALSE)"
"user_login","Form builder; the main user login form.","user_login($form, &$form_state)"
"user_login_authenticate_validate","A validate handler on the login form. Check supplied username/password
against local users table. If successful, $form_state[&#039;uid&#039;]
is set to the matching user ID.","user_login_authenticate_validate($form, &$form_state)"
"user_login_block",,"user_login_block($form)"
"user_login_default_validators","Set up a series for validators which check for blocked users,
then authenticate against local database, then return an error if
authentication fails. Distributed authentication modules are welcome
to use hook_form_alter() to change this series in…","user_login_default_validators()"
"user_login_destination","Helper function to rewrite the destination to avoid redirecting to login page after login.","user_login_destination()"
"user_login_finalize","Finalize the login process. Must be called when logging in a user.","user_login_finalize(&$edit = array())"
"user_login_final_validate","The final validation handler on the login form.","user_login_final_validate($form, &$form_state)"
"user_login_name_validate","A FAPI validate handler. Sets an error if supplied username has been blocked.","user_login_name_validate($form, &$form_state)"
"user_login_submit","Submit handler for the login form. Load $user object and perform standard login
tasks. The user is then redirected to the My Account page. Setting the
destination in the query string overrides the redirect.","user_login_submit($form, &$form_state)"
"user_logout","Menu callback; logs the current user out, and redirects to the home page.","user_logout()"
"user_mail","Implements hook_mail().","user_mail($key, &$message, $params)"
"user_mail_tokens","Token callback to add unsafe tokens for user mails.","user_mail_tokens(&$replacements, $data, $options)"
"user_menu","Implements hook_menu().","user_menu()"
"user_menu_link_alter","Implements hook_menu_link_alter().","user_menu_link_alter(&$link)"
"user_menu_site_status_alter","Implements hook_menu_site_status_alter().","user_menu_site_status_alter(&$menu_site_status, $path)"
"user_menu_title","Menu item title callback for the &#039;user&#039; path.","user_menu_title()"
"user_modules_installed","Implements hook_modules_installed().","user_modules_installed($modules)"
"user_modules_uninstalled","Implements hook_modules_uninstalled().","user_modules_uninstalled($modules)"
"user_module_invoke","Invokes a user hook in every module.","user_module_invoke($type, &$edit, $account, $category = NULL)"
"user_multiple_cancel_confirm",,"user_multiple_cancel_confirm($form, &$form_state)"
"user_multiple_cancel_confirm_submit","Submit handler for mass-account cancellation form.","user_multiple_cancel_confirm_submit($form, &$form_state)"
"user_multiple_role_edit","Callback function for admin mass adding/deleting a user role.","user_multiple_role_edit($accounts, $operation, $rid)"
"user_needs_new_hash","Check whether a user&#039;s hashed password needs to be replaced with a new hash.","user_needs_new_hash($account)"
"user_node_load","Implements hook_node_load().","user_node_load($nodes, $types)"
"user_page","Page callback: Displays the user page.","user_page()"
"user_page_title","Menu item title callback - use the user name.","user_page_title($account)"
"user_pass","Form builder; Request a password reset.","user_pass()"
"user_password","Generate a random alphanumeric password.","user_password($length = 10)"
"user_pass_rehash","Creates a unique hash value for use in time-dependent per-user URLs.","user_pass_rehash($password, $timestamp, $login)"
"user_pass_reset","Menu callback; process one time login link and redirects to the user page on success.","user_pass_reset($form, &$form_state, $uid, $timestamp, $hashed_pass, $action = NULL)"
"user_pass_reset_url","Generates a unique URL for a user to login and reset their password.","user_pass_reset_url($account)"
"user_pass_submit",,"user_pass_submit($form, &$form_state)"
"user_pass_validate",,"user_pass_validate($form, &$form_state)"
"user_permission","Implements hook_permission().","user_permission()"
"user_permission_get_modules","Determine the modules that permissions belong to.","user_permission_get_modules()"
"user_preferred_language","Get the language object preferred by the user. This user preference can
be set on the user account editing page, and is only available if there
are more than one languages enabled on the site. If the user did not
choose a preferred language, or is the…","user_preferred_language($account, $default = NULL)"
"user_profile_form","Form builder; edit a user account or one of their profile categories.","user_profile_form($form, &$form_state, $account, $category = 'account')"
"user_profile_form_submit","Submit function for the user account and profile editing form.","user_profile_form_submit($form, &$form_state)"
"user_profile_form_validate","Validation function for the user account and profile editing form.","user_profile_form_validate($form, &$form_state)"
"user_rdf_mapping","Implements hook_rdf_mapping().","user_rdf_mapping()"
"user_register_access","Determines if the current user has access to the user registration page.","user_register_access()"
"user_register_form","Form builder; the user registration form.","user_register_form($form, &$form_state)"
"user_register_submit","Submit handler for the user registration form.","user_register_submit($form, &$form_state)"
"user_register_validate","Validation function for the user registration form.","user_register_validate($form, &$form_state)"
"user_roles","Retrieve an array of roles matching specified conditions.","user_roles($membersonly = FALSE, $permission = NULL)"
"user_role_change_permissions","Change permissions for a user role.","user_role_change_permissions($rid, array $permissions = array())"
"user_role_delete","Delete a user role from database.","user_role_delete($role)"
"user_role_edit_access","Menu access callback for user role editing.","user_role_edit_access($role)"
"user_role_grant_permissions","Grant permissions to a user role.","user_role_grant_permissions($rid, array $permissions = array())"
"user_role_load","Fetches a user role by role ID.","user_role_load($rid)"
"user_role_load_by_name","Fetches a user role by role name.","user_role_load_by_name($role_name)"
"user_role_permissions","Determine the permissions for one or more roles.","user_role_permissions($roles = array())"
"user_role_revoke_permissions","Revoke permissions from a user role.","user_role_revoke_permissions($rid, array $permissions = array())"
"user_role_save","Save a user role to the database.","user_role_save($role)"
"user_save","Save changes to a user account or add a new user.","user_save($account, $edit = array(), $category = 'account')"
"user_schema","Implements hook_schema().","user_schema()"
"user_search_access","Implements hook_search_access().","user_search_access()"
"user_search_execute","Implements hook_search_execute().","user_search_execute($keys = NULL, $conditions = NULL)"
"user_search_info","Implements hook_search_info().","user_search_info()"
"user_set_authmaps","Save mappings of which external authentication module(s) authenticated
a user. Maps external usernames to user ids in the users table.","user_set_authmaps($account, $authmaps)"
"user_system_info_alter","Implements hook_system_info_alter().","user_system_info_alter(&$info, $file, $type)"
"user_theme","Implements hook_theme().","user_theme()"
"user_tokens","Implements hook_tokens().","user_tokens($type, $tokens, array $data = array(), array $options = array())"
"user_token_info","Implements hook_token_info().","user_token_info()"
"user_translated_menu_link_alter","Implements hook_translated_menu_link_alter().","user_translated_menu_link_alter(&$link)"
"user_uid_only_optional_to_arg","Returns $arg or the user ID of the current user if $arg is &#039;%&#039; or empty.","user_uid_only_optional_to_arg($arg)"
"user_uid_optional_load","Load either a specified or the current user account.","user_uid_optional_load($uid = NULL)"
"user_uid_optional_to_arg","Returns $arg or the user ID of the current user if $arg is &#039;%&#039; or empty.","user_uid_optional_to_arg($arg)"
"user_update_7000","Increase the length of the password field to accommodate better hashes.","user_update_7000(&$sandbox)"
"user_update_7001",,"user_update_7001()"
"user_update_7002","Convert user time zones from time zone offsets to time zone names.","user_update_7002(&$sandbox)"
"user_update_7003","Update user settings for cancelling user accounts.","user_update_7003()"
"user_update_7005","Changes the users table to allow longer e-mail addresses.","user_update_7005(&$sandbox)"
"user_update_7006","Add module data to {role_permission}.","user_update_7006(&$sandbox)"
"user_update_7007","Add a weight column to user roles.","user_update_7007()"
"user_update_7008","If &#039;user_register&#039; variable was unset in Drupal 6, set it to be the same as
the Drupal 6 default setting.","user_update_7008()"
"user_update_7009","Converts fields that store serialized variables from text to blob.","user_update_7009()"
"user_update_7010","Update the {user}.signature_format column.","user_update_7010()"
"user_update_7011","Placeholder function.","user_update_7011()"
"user_update_7012","Add the user&#039;s pictures to the {file_managed} table and make them managed
files.","user_update_7012(&$sandbox)"
"user_update_7013","Add user module file usage entries.","user_update_7013(&$sandbox)"
"user_update_7014","Rename the &#039;post comments without approval&#039; permission.","user_update_7014()"
"user_update_7015","Change {users}.signature_format into varchar.","user_update_7015()"
"user_update_7016","Update the database to match the schema.","user_update_7016()"
"user_update_7017","Update email templates to use new tokens.","user_update_7017()"
"user_update_7018","Ensure there is an index on {users}.picture.","user_update_7018()"
"user_update_dependencies","Implements hook_update_dependencies().","user_update_dependencies()"
"user_uri","Implements callback_entity_info_uri().","user_uri($user)"
"user_user_categories","Implements hook_user_categories().","user_user_categories()"
"user_user_operations","Implements hook_user_operations().","user_user_operations($form = array(), $form_state = array())"
"user_user_operations_block","Callback function for admin mass blocking users.","user_user_operations_block($accounts)"
"user_user_operations_unblock","Callback function for admin mass unblocking users.","user_user_operations_unblock($accounts)"
"user_user_presave","Implements hook_user_presave().","user_user_presave(&$edit, $account, $category)"
"user_user_view","Implements hook_user_view().","user_user_view($account)"
"user_validate_current_pass","Form validation handler for the current password on the user_account_form().","user_validate_current_pass(&$form, &$form_state)"
"user_validate_mail","Validates a user&#039;s email address.","user_validate_mail($mail)"
"user_validate_name","Verify the syntax of the given name.","user_validate_name($name)"
"user_validate_picture","Validates an image uploaded by a user.","user_validate_picture(&$form, &$form_state)"
"user_view","Generate an array for rendering the given user.","user_view($account, $view_mode = 'full', $langcode = NULL)"
"user_view_access","User view access callback.","user_view_access($account)"
"user_view_page","Page callback wrapper for user_view().","user_view_page($account)"
"valid_email_address","Verifies the syntax of the given e-mail address.","valid_email_address($mail)"
"valid_url","Verifies the syntax of the given URL.","valid_url($url, $absolute = FALSE)"
"vancode2int","Decode vancode back to an integer.","vancode2int($c = '00')"
"variable_del","Unsets a persistent variable.","variable_del($name)"
"variable_get","Returns a persistent variable.","variable_get($name, $default = NULL)"
"variable_initialize","Loads the persistent variable table.","variable_initialize($conf = array())"
"variable_set","Sets a persistent variable.","variable_set($name, $value)"
"watchdog","Logs a system message.","watchdog($type, $message, $variables = array(), $severity = WATCHDOG_NOTICE, $link = NULL)"
"watchdog_exception","Logs an exception.","watchdog_exception($type, Exception $exception, $message = NULL, $variables = array(), $severity = WATCHDOG_ERROR, $link = NULL)"
"watchdog_severity_levels","Returns a list of severity levels, as defined in RFC 3164.","watchdog_severity_levels()"
"watchdog_skip_semaphore","Replacement of the watchdog() function that eliminates the use of semaphores
so that we can test the abortion of an action loop.","watchdog_skip_semaphore($type, $message, $variables = array(), $severity = WATCHDOG_NOTICE, $link = NULL)"
"weight_value","Sets the value for a weight element, with zero as a default.","weight_value(&$form)"
"xmlrpc","Performs one or more XML-RPC request(s).","xmlrpc($url, $args, $options = array())"
"xmlrpc_base64","Returns an XML-RPC base 64 object.","xmlrpc_base64($data)"
"xmlrpc_base64_get_xml","Converts an XML-RPC base 64 object into XML.","xmlrpc_base64_get_xml($xmlrpc_base64)"
"xmlrpc_clear_error","Clears any previously-saved errors.","xmlrpc_clear_error()"
"xmlrpc_date","Converts a PHP or ISO date/time to an XML-RPC object.","xmlrpc_date($time)"
"xmlrpc_date_get_xml","Converts an XML-RPC date-time object into XML.","xmlrpc_date_get_xml($xmlrpc_date)"
"xmlrpc_errno","Returns the last XML-RPC client error number.","xmlrpc_errno()"
"xmlrpc_error","Generates, temporarily saves, and returns an XML-RPC error object.","xmlrpc_error($code = NULL, $message = NULL, $reset = FALSE)"
"xmlrpc_error_get_xml","Converts an XML-RPC error object into XML.","xmlrpc_error_get_xml($xmlrpc_error)"
"xmlrpc_error_msg","Returns the last XML-RPC client error message.","xmlrpc_error_msg()"
"xmlrpc_message","Constructs an object representing an XML-RPC message.","xmlrpc_message($message)"
"xmlrpc_message_cdata","Handles character data for XML parsing in xmlrpc_message_parse().","xmlrpc_message_cdata($parser, $cdata)"
"xmlrpc_message_get","Returns the most recently stored XML-RPC message object.","xmlrpc_message_get()"
"xmlrpc_message_parse","Parses an XML-RPC message.","xmlrpc_message_parse($xmlrpc_message)"
"xmlrpc_message_set","Stores a copy of the most recent XML-RPC message object temporarily.","xmlrpc_message_set($value = NULL)"
"xmlrpc_message_tag_close","Handles closing tags for XML parsing in xmlrpc_message_parse().","xmlrpc_message_tag_close($parser, $tag)"
"xmlrpc_message_tag_open","Handles opening tags for XML parsing in xmlrpc_message_parse().","xmlrpc_message_tag_open($parser, $tag, $attr)"
"xmlrpc_request","Constructs an object representing an XML-RPC request.","xmlrpc_request($method, $args)"
"xmlrpc_server","Invokes XML-RPC methods on this server.","xmlrpc_server($callbacks)"
"xmlrpc_server_call","Dispatches an XML-RPC request and any parameters to the appropriate handler.","xmlrpc_server_call($xmlrpc_server, $methodname, $args)"
"xmlrpc_server_error","Throws an XML-RPC error.","xmlrpc_server_error($error, $message = FALSE)"
"xmlrpc_server_get","Retrieves the latest stored XML-RPC request.","xmlrpc_server_get()"
"xmlrpc_server_get_capabilities","Returns a list of the capabilities of this server.","xmlrpc_server_get_capabilities()"
"xmlrpc_server_list_methods","Lists the methods available on this XML-RPC server.","xmlrpc_server_list_methods()"
"xmlrpc_server_method_help","Returns the help for an XML-RPC method.","xmlrpc_server_method_help($method)"
"xmlrpc_server_method_signature","Returns one method signature for a function.","xmlrpc_server_method_signature($methodname)"
"xmlrpc_server_multicall","Dispatches multiple XML-RPC requests.","xmlrpc_server_multicall($methodcalls)"
"xmlrpc_server_output","Sends XML-RPC output to the browser.","xmlrpc_server_output($xml)"
"xmlrpc_server_set","Stores a copy of an XML-RPC request temporarily.","xmlrpc_server_set($xmlrpc_server = NULL)"
"xmlrpc_test_arrayOfStructsTest",,"xmlrpc_test_arrayOfStructsTest($array)"
"xmlrpc_test_countTheEntities",,"xmlrpc_test_countTheEntities($string)"
"xmlrpc_test_easyStructTest",,"xmlrpc_test_easyStructTest($array)"
"xmlrpc_test_echoStructTest",,"xmlrpc_test_echoStructTest($array)"
"xmlrpc_test_manyTypesTest",,"xmlrpc_test_manyTypesTest($number, $boolean, $string, $double, $dateTime, $base64)"
"xmlrpc_test_message_sized_in_kb","Created a message of the desired size in KB.","xmlrpc_test_message_sized_in_kb($size)"
"xmlrpc_test_moderateSizeArrayCheck",,"xmlrpc_test_moderateSizeArrayCheck($array)"
"xmlrpc_test_nestedStructTest",,"xmlrpc_test_nestedStructTest($array)"
"xmlrpc_test_simpleStructReturnTest",,"xmlrpc_test_simpleStructReturnTest($number)"
"xmlrpc_test_xmlrpc","Implements hook_xmlrpc().","xmlrpc_test_xmlrpc()"
"xmlrpc_test_xmlrpc_alter","Implements hook_xmlrpc_alter().","xmlrpc_test_xmlrpc_alter(&$services)"
"xmlrpc_value","Turns a data structure into objects with &#039;data&#039; and &#039;type&#039; attributes.","xmlrpc_value($data, $type = FALSE)"
"xmlrpc_value_calculate_type","Maps a PHP type to an XML-RPC type.","xmlrpc_value_calculate_type($xmlrpc_value)"
"xmlrpc_value_get_xml","Generates XML representing the given value.","xmlrpc_value_get_xml($xmlrpc_value)"
"_aggregator_category_title","Title callback: Returns a title for aggregator category pages.","_aggregator_category_title($category)"
"_aggregator_characters","Creates display text for teaser length option values.","_aggregator_characters($length)"
"_aggregator_get_variables","Gets the fetcher, parser, and processors.","_aggregator_get_variables()"
"_aggregator_has_categories","Determines whether there are any aggregator categories.","_aggregator_has_categories()"
"_aggregator_items","Helper function for drupal_map_assoc.","_aggregator_items($count)"
"_aggregator_page_list","Prints an aggregator page listing a number of feed items.","_aggregator_page_list($items, $op, $feed_source = '')"
"_aggregator_parse_opml","Parses an OPML file.","_aggregator_parse_opml($opml)"
"_authorize_filetransfer_connection_settings","Generates the Form API array for a given connection backend&#039;s settings.","_authorize_filetransfer_connection_settings($backend)"
"_authorize_filetransfer_connection_settings_set_defaults","Sets the default settings on a file transfer connection form recursively.","_authorize_filetransfer_connection_settings_set_defaults(&$element, $key, array $defaults)"
"_batch_api_percentage","Formats the percent completion for a batch set.","_batch_api_percentage($total, $current)"
"_batch_current_set","Returns the batch set being currently processed.","&_batch_current_set()"
"_batch_do","Does one execution pass with JavaScript and returns progress to the browser.","_batch_do()"
"_batch_finished","Ends the batch processing.","_batch_finished()"
"_batch_next_set","Retrieves the next set in a batch.","_batch_next_set()"
"_batch_page","Renders the batch processing page based on the current state of the batch.","_batch_page()"
"_batch_populate_queue","Populates a job queue with the operations of a batch set.","_batch_populate_queue(&$batch, $set_id)"
"_batch_process","Processes sets in a batch.","_batch_process()"
"_batch_progress_page_js","Outputs a batch processing page with JavaScript support.","_batch_progress_page_js()"
"_batch_progress_page_nojs","Outputs a batch processing page without JavaScript support.","_batch_progress_page_nojs()"
"_batch_queue","Returns a queue object for a batch set.","_batch_queue($batch_set)"
"_batch_shutdown","Shutdown function: Stores the current batch data for the next request.","_batch_shutdown()"
"_batch_start","Initializes the batch processing.","_batch_start()"
"_batch_test_batch_0","Batch 0: no operation.","_batch_test_batch_0()"
"_batch_test_batch_1","Batch 1: repeats a simple operation.","_batch_test_batch_1()"
"_batch_test_batch_2","Batch 2: single multistep operation.","_batch_test_batch_2()"
"_batch_test_batch_3","Batch 3: both single and multistep operations.","_batch_test_batch_3()"
"_batch_test_batch_4","Batch 4: batch within a batch.","_batch_test_batch_4()"
"_batch_test_batch_5","Batch 5: repeats a simple operation.","_batch_test_batch_5()"
"_batch_test_callback_1","Simple batch operation.","_batch_test_callback_1($id, $sleep, &$context)"
"_batch_test_callback_2","Multistep batch operation.","_batch_test_callback_2($start, $total, $sleep, &$context)"
"_batch_test_callback_5","Simple batch operation.","_batch_test_callback_5($id, $sleep, &$context)"
"_batch_test_finished_0","&#039;finished&#039; callback for batch 0.","_batch_test_finished_0($success, $results, $operations)"
"_batch_test_finished_1","&#039;finished&#039; callback for batch 1.","_batch_test_finished_1($success, $results, $operations)"
"_batch_test_finished_2","&#039;finished&#039; callback for batch 2.","_batch_test_finished_2($success, $results, $operations)"
"_batch_test_finished_3","&#039;finished&#039; callback for batch 3.","_batch_test_finished_3($success, $results, $operations)"
"_batch_test_finished_4","&#039;finished&#039; callback for batch 4.","_batch_test_finished_4($success, $results, $operations)"
"_batch_test_finished_5","&#039;finished&#039; callback for batch 5.","_batch_test_finished_5($success, $results, $operations)"
"_batch_test_finished_helper","Common &#039;finished&#039; callbacks for batches 1 to 4.","_batch_test_finished_helper($batch_id, $success, $results, $operations)"
"_batch_test_nested_batch_callback","Batch operation setting up its own batch.","_batch_test_nested_batch_callback()"
"_batch_test_nested_drupal_form_submit_callback","Batch operation: submits form_test_mock_form using drupal_form_submit().","_batch_test_nested_drupal_form_submit_callback($value)"
"_batch_test_theme_callback","Batch callback function for testing the theme used on the progress page.","_batch_test_theme_callback()"
"_block_compare","Sorts active blocks by region, then by weight; sorts inactive blocks by name.","_block_compare($a, $b)"
"_block_custom_theme","Theme callback for the block configuration pages.","_block_custom_theme($theme = NULL)"
"_block_get_cache_id","Assemble the cache_id to use for a given block.","_block_get_cache_id($block)"
"_block_get_renderable_array","Gets an array of blocks suitable for drupal_render().","_block_get_renderable_array($list = array())"
"_block_load_blocks","Loads blocks&#039; information from the database.","_block_load_blocks()"
"_block_rehash","Updates the &#039;block&#039; DB table with the blocks currently exported by modules.","_block_rehash($theme = NULL)"
"_block_render_blocks","Render the content and subject for a set of blocks.","_block_render_blocks($region_blocks)"
"_block_themes_access","Menu item access callback - only admin or enabled themes can be accessed.","_block_themes_access($theme)"
"_blog_post_exists","Helper function to determine if a user has blog posts already.","_blog_post_exists($account)"
"_book_add_form_elements","Builds the common elements of the book form for the node and outline forms.","_book_add_form_elements(&$form, &$form_state, $node)"
"_book_admin_table","Builds the table portion of the form for the book administration page.","_book_admin_table($node, &$form)"
"_book_admin_table_tree","Helps build the main table in the book administration page form.","_book_admin_table_tree($tree, &$form)"
"_book_flatten_menu","Recursively converts a tree of menu links to a flat array.","_book_flatten_menu($tree, &$flat)"
"_book_install_type_create","Creates the book content type.","_book_install_type_create()"
"_book_link_defaults","Returns an array with default values for a book page&#039;s menu link.","_book_link_defaults($nid)"
"_book_node_is_removable","Determines if a node can be removed from the book.","_book_node_is_removable($node)"
"_book_outline_access","Access callback: Determines if the outline tab is accessible.","_book_outline_access($node)"
"_book_outline_remove_access","Access callback: Determines if the user can remove nodes from the outline.","_book_outline_remove_access($node)"
"_book_parent_depth_limit","Finds the depth limit for items in the parent select.","_book_parent_depth_limit($book_link)"
"_book_parent_select","Builds the parent selection form element for the node form or outline tab.","_book_parent_select($book_link)"
"_book_toc_recurse","Recursively processes and formats menu items for book_toc().","_book_toc_recurse($tree, $indent, &$toc, $exclude, $depth_limit)"
"_book_update_outline","Handles additions and updates to the book outline.","_book_update_outline($node)"
"_cache_get_object","Gets the cache object for a cache bin.","_cache_get_object($bin)"
"_color_blend","Blends two hex colors and returns the GD color.","_color_blend($img, $hex1, $hex2, $alpha)"
"_color_gd","Converts a hex triplet into a GD color.","_color_gd($img, $hex)"
"_color_hsl2rgb","Converts an HSL triplet into RGB.","_color_hsl2rgb($hsl)"
"_color_html_alter","Replaces style sheets with color-altered style sheets.","_color_html_alter(&$vars)"
"_color_hue2rgb","Helper function for _color_hsl2rgb().","_color_hue2rgb($m1, $m2, $h)"
"_color_pack","Converts an RGB triplet to a hex color.","_color_pack($rgb, $normalize = FALSE)"
"_color_page_alter","Replaces the logo with a color-altered logo.","_color_page_alter(&$vars)"
"_color_render_images","Renders images that match a given palette.","_color_render_images($theme, &$info, &$paths, $palette)"
"_color_rewrite_stylesheet","Rewrites the stylesheet to match the colors in the palette.","_color_rewrite_stylesheet($theme, &$info, &$paths, $palette, $style)"
"_color_rgb2hsl","Converts an RGB triplet to HSL.","_color_rgb2hsl($rgb)"
"_color_save_stylesheet","Saves the rewritten stylesheet to disk.","_color_save_stylesheet($file, $style, &$paths)"
"_color_shift","Shifts a given color, using a reference pair and a target blend color.","_color_shift($given, $ref1, $ref2, $target)"
"_color_theme_select_form_alter","Helper for hook_form_FORM_ID_alter() implementations.","_color_theme_select_form_alter(&$form, &$form_state)"
"_color_unpack","Converts a hex color into an RGB triplet.","_color_unpack($hex, $normalize = FALSE)"
"_comment_body_field_create","Creates a comment_body field instance for a given node type.","_comment_body_field_create($info)"
"_comment_get_modes","Return an array of viewing modes for comment listings.","_comment_get_modes()"
"_comment_per_page","Return an array of &quot;comments per page&quot; settings from which the user
can choose.","_comment_per_page()"
"_comment_update_node_statistics","Updates the comment statistics for a given node. This should be called any
time a comment is added, deleted, or updated.","_comment_update_node_statistics($nid)"
"_contact_personal_tab_access","Menu access callback for a user&#039;s personal contact form.","_contact_personal_tab_access($account)"
"_country_get_predefined_list","Get an array of all country code =&gt; country name pairs.","_country_get_predefined_list()"
"_dblog_get_message_types","Gathers a list of uniquely defined database log message types.","_dblog_get_message_types()"
"_db_create_keys_sql",,"_db_create_keys_sql($spec)"
"_drupal_bootstrap_configuration","Sets up the script environment and loads settings.php.","_drupal_bootstrap_configuration()"
"_drupal_bootstrap_database","Initializes the database system and registers autoload functions.","_drupal_bootstrap_database()"
"_drupal_bootstrap_full",,"_drupal_bootstrap_full()"
"_drupal_bootstrap_page_cache","Attempts to serve a page from the cache.","_drupal_bootstrap_page_cache()"
"_drupal_bootstrap_page_header","Invokes hook_boot(), initializes locking system, and sends HTTP headers.","_drupal_bootstrap_page_header()"
"_drupal_bootstrap_variables","Loads system variables and all enabled bootstrap modules.","_drupal_bootstrap_variables()"
"_drupal_build_css_path","Prefixes all paths within a CSS file for drupal_build_css_cache().","_drupal_build_css_path($matches, $base = NULL)"
"_drupal_decode_exception","Decodes an exception and retrieves the correct caller.","_drupal_decode_exception($exception)"
"_drupal_default_html_head","Returns elements that are always displayed in the HEAD tag of the HTML page.","_drupal_default_html_head()"
"_drupal_depth_first_search","Performs a depth-first search on a graph.","_drupal_depth_first_search(&$graph, &$state, $start, &$component = NULL)"
"_drupal_error_handler","Provides custom PHP error handling.","_drupal_error_handler($error_level, $message, $filename, $line, $context)"
"_drupal_error_handler_real","Provides custom PHP error handling.","_drupal_error_handler_real($error_level, $message, $filename, $line, $context)"
"_drupal_exception_handler","Provides custom PHP exception handling.","_drupal_exception_handler($exception)"
"_drupal_flush_css_js","Changes the dummy query string added to all CSS and JavaScript files.","_drupal_flush_css_js()"
"_drupal_get_last_caller","Gets the last caller from a backtrace.","_drupal_get_last_caller($backtrace)"
"_drupal_html_to_mail_urls","Keeps track of URLs and replaces them with placeholder tokens.","_drupal_html_to_mail_urls($match = NULL, $reset = FALSE)"
"_drupal_html_to_text_clean","Replaces non-quotation markers from a given piece of indentation with spaces.","_drupal_html_to_text_clean($indent)"
"_drupal_html_to_text_pad","Pads the last line with the given character.","_drupal_html_to_text_pad($text, $pad, $prefix = '')"
"_drupal_http_use_proxy","Helper function for determining hosts excluded from needing a proxy.","_drupal_http_use_proxy($host)"
"_drupal_load_stylesheet","Loads stylesheets recursively and returns contents with corrected paths.","_drupal_load_stylesheet($matches)"
"_drupal_log_error","Logs a PHP error or exception and displays an error page in fatal cases.","_drupal_log_error($error, $fatal = FALSE)"
"_drupal_maintenance_theme","Sets up the theming system for maintenance page.","_drupal_maintenance_theme()"
"_drupal_parse_response_status","Splits an HTTP response status line into components.","_drupal_parse_response_status($response)"
"_drupal_render_exception_safe","Renders an exception error message without further exceptions.","_drupal_render_exception_safe($exception)"
"_drupal_schema_initialize","Fills in required default values for table definitions from hook_schema().","_drupal_schema_initialize(&$schema, $module, $remove_descriptions = TRUE)"
"_drupal_session_close","Session handler assigned by session_set_save_handler().","_drupal_session_close()"
"_drupal_session_delete_cookie","Deletes the session cookie.","_drupal_session_delete_cookie($name, $secure = NULL)"
"_drupal_session_destroy","Session handler assigned by session_set_save_handler().","_drupal_session_destroy($sid)"
"_drupal_session_garbage_collection","Session handler assigned by session_set_save_handler().","_drupal_session_garbage_collection($lifetime)"
"_drupal_session_open","Session handler assigned by session_set_save_handler().","_drupal_session_open()"
"_drupal_session_read","Reads an entire session from the database (internal use only).","_drupal_session_read($sid)"
"_drupal_session_write","Writes an entire session to the database (internal use only).","_drupal_session_write($sid, $value)"
"_drupal_set_preferred_header_name","Sets the preferred name for the HTTP header.","_drupal_set_preferred_header_name($name = NULL)"
"_drupal_shutdown_function","Executes registered shutdown functions.","_drupal_shutdown_function()"
"_drupal_theme_access","Helper function for determining access to a theme.","_drupal_theme_access($theme)"
"_drupal_theme_initialize","Initializes the theme system given already loaded information.","_drupal_theme_initialize($theme, $base_theme = array(), $registry_callback = '_theme_load_registry')"
"_drupal_wrap_mail_line","Wraps words on a single line.","_drupal_wrap_mail_line(&$line, $key, $values)"
"_element_validate_integer","DEPRECATED: Helper form element validator: integer.","_element_validate_integer($element, &$form_state)"
"_element_validate_integer_positive","DEPRECATED: Helper form element validator: integer &gt; 0.","_element_validate_integer_positive($element, &$form_state)"
"_element_validate_number","DEPRECATED: Helper form element validator: number.","_element_validate_number($element, &$form_state)"
"_field_extra_fields_pre_render","Pre-render callback to adjust weights and visibility of non-field elements.","_field_extra_fields_pre_render($elements)"
"_field_filter_items","Helper function to filter out empty field values.","_field_filter_items($field, $items)"
"_field_filter_xss_allowed_tags","List of tags allowed by field_filter_xss().","_field_filter_xss_allowed_tags()"
"_field_filter_xss_display_allowed_tags","Human-readable list of allowed tags, for display in help texts.","_field_filter_xss_display_allowed_tags()"
"_field_form_state_parents","Returns the location of processing information within $form_state.","_field_form_state_parents($parents, $field_name, $langcode)"
"_field_info_collate_fields","Collates all information on existing fields and instances.","_field_info_collate_fields($reset = FALSE)"
"_field_info_collate_types","Collates all information on field types, widget types and related structures.","_field_info_collate_types($reset = FALSE)"
"_field_info_field_cache","Retrieves the FieldInfo object for the current request.","_field_info_field_cache()"
"_field_info_prepare_extra_fields","Prepares &#039;extra fields&#039; for the current run-time context.","_field_info_prepare_extra_fields($extra_fields, $entity_type, $bundle)"
"_field_info_prepare_field","Prepares a field definition for the current run-time context.","_field_info_prepare_field($field)"
"_field_info_prepare_instance","Prepares an instance definition for the current run-time context.","_field_info_prepare_instance($instance, $field)"
"_field_info_prepare_instance_display","Adapts display specifications to the current run-time context.","_field_info_prepare_instance_display($field, $display)"
"_field_info_prepare_instance_widget","Prepares widget specifications for the current run-time context.","_field_info_prepare_instance_widget($field, $widget)"
"_field_invoke","Invoke a field hook.","_field_invoke($op, $entity_type, $entity, &$a = NULL, &$b = NULL, $options = array())"
"_field_invoke_default","Invoke field.module&#039;s version of a field hook.","_field_invoke_default($op, $entity_type, $entity, &$a = NULL, &$b = NULL, $options = array())"
"_field_invoke_get_instances","Helper for _field_invoke(): retrieves a list of instances to operate on.","_field_invoke_get_instances($entity_type, $bundle, $options)"
"_field_invoke_multiple","Invoke a field hook across fields on multiple entities.","_field_invoke_multiple($op, $entity_type, $entities, &$a = NULL, &$b = NULL, $options = array())"
"_field_invoke_multiple_default","Invoke field.module&#039;s version of a field hook on multiple entities.","_field_invoke_multiple_default($op, $entity_type, $entities, &$a = NULL, &$b = NULL, $options = array())"
"_field_language_suggestion","Process the given language suggestion based on the available languages.","_field_language_suggestion($available_languages, $language_suggestion, $field_name)"
"_field_sort_items","Helper function to sort items in a field according to
user drag-n-drop reordering.","_field_sort_items($field, $items)"
"_field_sort_items_helper","Sort function for items order.
(copied form element_sort(), which acts on #weight keys)","_field_sort_items_helper($a, $b)"
"_field_sort_items_value_helper","Same as above, using [&#039;_weight&#039;][&#039;#value&#039;]","_field_sort_items_value_helper($a, $b)"
"_field_sql_storage_columnname","Generate a column name for a field data table.","_field_sql_storage_columnname($name, $column)"
"_field_sql_storage_indexname","Generate an index name for a field data table.","_field_sql_storage_indexname($name, $index)"
"_field_sql_storage_query_columnname","Field meta condition column callback.","_field_sql_storage_query_columnname($field_name, $column)"
"_field_sql_storage_query_field_conditions","Adds field (meta) conditions to the given query objects respecting groupings.","_field_sql_storage_query_field_conditions(EntityFieldQuery $query, SelectQuery $select_query, $conditions, $table_aliases, $column_callback)"
"_field_sql_storage_query_join_entity","Adds the base entity table to a field query object.","_field_sql_storage_query_join_entity(SelectQuery $select_query, $entity_type, $field_base_table)"
"_field_sql_storage_revision_tablename","Generate a table name for a field revision archive table.","_field_sql_storage_revision_tablename($field)"
"_field_sql_storage_schema","Return the database schema for a field. This may contain one or
more tables. Each table will contain the columns relevant for the
specified field. Leave the $field&#039;s &#039;columns&#039; and &#039;indexes&#039; keys
empty to get only the base schema.","_field_sql_storage_schema($field)"
"_field_sql_storage_tablealias","Generates a table alias for a field data table.","_field_sql_storage_tablealias($tablename, $field_key, EntityFieldQuery $query)"
"_field_sql_storage_tablename","Generate a table name for a field data table.","_field_sql_storage_tablename($field)"
"_field_test_field_storage_query_sort_helper","Sort helper for field_test_field_storage_query().","_field_test_field_storage_query_sort_helper($a, $b)"
"_field_test_storage_data","Helper function: stores or retrieves data from the &#039;storage backend&#039;.","_field_test_storage_data($data = NULL)"
"_field_ui_add_default_view_mode_settings","Populates display settings for a new view mode from the default view mode.","_field_ui_add_default_view_mode_settings($entity_type, $bundle, $view_mode, &$settings)"
"_field_ui_bundle_admin_path","Determines the administration path for a bundle.","_field_ui_bundle_admin_path($entity_type, $bundle_name)"
"_field_ui_field_name_exists","Render API callback: Checks if a field machine name is taken.","_field_ui_field_name_exists($value)"
"_field_ui_field_overview_form_validate_add_existing","Validates the &#039;add existing field&#039; row of field_ui_field_overview_form().","_field_ui_field_overview_form_validate_add_existing($form, &$form_state)"
"_field_ui_field_overview_form_validate_add_new","Validates the &#039;add new field&#039; row of field_ui_field_overview_form().","_field_ui_field_overview_form_validate_add_new($form, &$form_state)"
"_field_ui_reduce_order","Determines the rendering order of an array representing a tree.","_field_ui_reduce_order($array, $a)"
"_field_ui_view_mode_menu_access","Menu access callback for the &#039;view mode display settings&#039; pages.","_field_ui_view_mode_menu_access($entity_type, $bundle, $view_mode, $access_callback)"
"_field_write_instance","Stores an instance record in the field configuration database.","_field_write_instance($instance, $update = FALSE)"
"_file_field_get_description_from_element","Retrieves the file description from a field field element.","_file_field_get_description_from_element($element)"
"_file_generic_settings_extensions","Element validate callback for the allowed file extensions field.","_file_generic_settings_extensions($element, &$form_state)"
"_file_generic_settings_file_directory_validate","Element validate callback for the file destination field.","_file_generic_settings_file_directory_validate($element, &$form_state)"
"_file_generic_settings_max_filesize","Element validate callback for the maximum upload size field.","_file_generic_settings_max_filesize($element, &$form_state)"
"_file_test_form","Form to test file uploads.","_file_test_form($form, &$form_state)"
"_file_test_form_submit","Process the upload.","_file_test_form_submit(&$form, &$form_state)"
"_file_test_get_return","Load the appropriate return value.","_file_test_get_return($op)"
"_file_test_log_call","Store the values passed to a hook invocation.","_file_test_log_call($op, $args)"
"_filter_autop","Implements callback_filter_process().","_filter_autop($text)"
"_filter_autop_tips","Implements callback_filter_tips().","_filter_autop_tips($filter, $format, $long = FALSE)"
"_filter_disable_format_access","Access callback: Checks access for disabling text formats.","_filter_disable_format_access($format)"
"_filter_format_is_cacheable","Helper function to determine whether the output of a given text format can be cached.","_filter_format_is_cacheable($format)"
"_filter_html","Implements callback_filter_process().","_filter_html($text, $filter)"
"_filter_htmlcorrector","Implements callback_filter_process().","_filter_htmlcorrector($text)"
"_filter_html_escape","Implements callback_filter_process().","_filter_html_escape($text)"
"_filter_html_escape_tips","Implements callback_filter_tips().","_filter_html_escape_tips($filter, $format, $long = FALSE)"
"_filter_html_settings","Implements callback_filter_settings().","_filter_html_settings($form, &$form_state, $filter, $format, $defaults)"
"_filter_html_tips","Implements callback_filter_tips().","_filter_html_tips($filter, $format, $long = FALSE)"
"_filter_list_cmp","Sorts an array of filters by filter name.","_filter_list_cmp($a, $b)"
"_filter_tips","Retrieves the filter tips.","_filter_tips($format_id, $long = FALSE)"
"_filter_url","Implements callback_filter_process().","_filter_url($text, $filter)"
"_filter_url_escape_comments","Escapes the contents of HTML comments.","_filter_url_escape_comments($match, $escape = NULL)"
"_filter_url_parse_email_links","Makes links out of e-mail addresses.","_filter_url_parse_email_links($match)"
"_filter_url_parse_full_links","Makes links out of absolute URLs.","_filter_url_parse_full_links($match)"
"_filter_url_parse_partial_links","Makes links out of domain names starting with &quot;www.&quot;","_filter_url_parse_partial_links($match)"
"_filter_url_settings","Implements callback_filter_settings().","_filter_url_settings($form, &$form_state, $filter, $format, $defaults)"
"_filter_url_tips","Implements callback_filter_tips().","_filter_url_tips($filter, $format, $long = FALSE)"
"_filter_url_trim","Shortens long URLs to http://www.example.com/long/url...","_filter_url_trim($text, $length = NULL)"
"_filter_xss_attributes","Processes a string of HTML attributes.","_filter_xss_attributes($attr)"
"_filter_xss_split","Processes an HTML tag.","_filter_xss_split($m, $store = FALSE)"
"_fix_gpc_magic","Strips slashes from a string or array of strings.","_fix_gpc_magic(&$item)"
"_fix_gpc_magic_files","Strips slashes from $_FILES items.","_fix_gpc_magic_files(&$item, $key)"
"_format_date_callback","Translates a formatted date string.","_format_date_callback(array $matches = NULL, $new_langcode = NULL)"
"_form_builder_handle_input_element","Adds the #name and #value properties of an input element before rendering.","_form_builder_handle_input_element($form_id, &$element, &$form_state)"
"_form_button_was_clicked","Determines if a given button triggered the form submission.","_form_button_was_clicked($element, &$form_state)"
"_form_element_triggered_scripted_submission","Detects if an element triggered the form submission via Ajax.","_form_element_triggered_scripted_submission($element, &$form_state)"
"_form_options_flatten","Iterates over an array and returns a flat array with duplicate keys removed.","_form_options_flatten($array)"
"_form_set_class","Sets a form element&#039;s class attribute.","_form_set_class(&$element, $class = array())"
"_form_test_checkbox","Build a form to test a checkbox.","_form_test_checkbox($form, &$form_state)"
"_form_test_checkboxes_zero_no_redirect",,"_form_test_checkboxes_zero_no_redirect($form, &$form_state)"
"_form_test_checkbox_submit","Return the form values via JSON.","_form_test_checkbox_submit($form, &$form_state)"
"_form_test_disabled_elements","Build a form to test disabled elements.","_form_test_disabled_elements($form, &$form_state)"
"_form_test_disabled_elements_submit","Return the form values via JSON.","_form_test_disabled_elements_submit($form, &$form_state)"
"_form_test_input_forgery","Build a form to test input forgery of enabled elements.","_form_test_input_forgery($form, &$form_state)"
"_form_test_input_forgery_submit","Return the form values via JSON.","_form_test_input_forgery_submit($form, &$form_state)"
"_form_test_submit_values_json","Form submit handler to return form values as JSON.","_form_test_submit_values_json($form, &$form_state)"
"_form_test_tableselect_empty_form","Test functionality of the tableselect #empty property.","_form_test_tableselect_empty_form($form, $form_state)"
"_form_test_tableselect_form_builder","Build a form to test the tableselect element.","_form_test_tableselect_form_builder($form, $form_state, $element_properties)"
"_form_test_tableselect_get_data","Create a header and options array. Helper function for callbacks.","_form_test_tableselect_get_data()"
"_form_test_tableselect_js_select_form","Test functionality of the tableselect #js_select property.","_form_test_tableselect_js_select_form($form, $form_state, $action)"
"_form_test_tableselect_multiple_false_form","Test the tableselect #multiple = FALSE functionality.","_form_test_tableselect_multiple_false_form($form, $form_state)"
"_form_test_tableselect_multiple_false_form_submit","Process the tableselect #multiple = FALSE submitted values.","_form_test_tableselect_multiple_false_form_submit($form, &$form_state)"
"_form_test_tableselect_multiple_true_form","Test the tableselect #multiple = TRUE functionality.","_form_test_tableselect_multiple_true_form($form, $form_state)"
"_form_test_tableselect_multiple_true_form_submit","Process the tableselect #multiple = TRUE submitted values.","_form_test_tableselect_multiple_true_form_submit($form, &$form_state)"
"_form_test_vertical_tabs_form","Tests functionality of vertical tabs.","_form_test_vertical_tabs_form($form, &$form_state)"
"_form_validate","Performs validation on form elements.","_form_validate(&$elements, &$form_state, $form_id = NULL)"
"_forum_get_topic_order","Gets topic sorting information based on an integer code.","_forum_get_topic_order($sortby)"
"_forum_node_check_node_type","Checks whether a node can be used in a forum, based on its content type.","_forum_node_check_node_type($node)"
"_forum_parent_select","Returns a select box for available parent terms.","_forum_parent_select($tid, $title, $child_type)"
"_forum_topics_unread","Calculates the number of new posts in a forum that the user has not yet read.","_forum_topics_unread($term, $uid)"
"_forum_update_forum_index","Updates the taxonomy index for a given node.","_forum_update_forum_index($nid)"
"_forum_user_last_visit","Gets the last time the user viewed a node.","_forum_user_last_visit($nid)"
"_image_effect_definitions_sort","Internal function for sorting image effect definitions through uasort().","_image_effect_definitions_sort($a, $b)"
"_image_field_resolution_validate","Element validate function for resolution fields.","_image_field_resolution_validate($element, &$form_state)"
"_image_test_log_call","Store the values passed to a toolkit call.","_image_test_log_call($op, $args)"
"_image_update_7002_add_columns","Add width and height columns to a specific table.","_image_update_7002_add_columns($table, $field_name)"
"_image_update_7002_populate_dimensions","Populate image dimensions in a specific table.","_image_update_7002_populate_dimensions($table, $field_name, &$last_fid)"
"_install_configure_form","Form constructor for a site configuration form.","_install_configure_form($form, &$form_state, &$install_state)"
"_install_module_batch","Batch callback for batch installation of modules.","_install_module_batch($module, $module_name, &$context)"
"_install_profile_modules_finished","&#039;Finished&#039; callback for module installation batch.","_install_profile_modules_finished($success, $results, $operations)"
"_install_select_profile","Selects an installation profile.","_install_select_profile($profiles)"
"_list_update_7001_extract_allowed_values","Helper function for list_update_7001: extract allowed values from a string.","_list_update_7001_extract_allowed_values($string, $position_keys)"
"_list_values_in_use","Checks if a list of values are being used in actual field values.","_list_values_in_use($field, $values)"
"_locale_batch_build","Build a locale batch from an array of files.","_locale_batch_build($files, $finished = NULL, $components = array())"
"_locale_batch_import","Perform interface translation import as a batch step.","_locale_batch_import($filepath, &$context)"
"_locale_batch_language_finished","Finished callback of language addition locale import batch.
Inform the user of translation files imported.","_locale_batch_language_finished($success, $results)"
"_locale_batch_system_finished","Finished callback of system page locale import batch.
Inform the user of translation files imported.","_locale_batch_system_finished($success, $results)"
"_locale_export_get_strings","Generates a structured array of all strings with translations in
$language, if given. This array can be used to generate an export
of the string in the database.","_locale_export_get_strings($language = NULL, $group = 'default')"
"_locale_export_po","Write a generated PO or POT file to the output.","_locale_export_po($language = NULL, $output = NULL)"
"_locale_export_po_generate","Generates the PO(T) file contents for given strings.","_locale_export_po_generate($language = NULL, $strings = array(), $header = NULL)"
"_locale_export_remove_plural","Removes plural index information from a string","_locale_export_remove_plural($entry)"
"_locale_export_string","Print out a string on multiple lines","_locale_export_string($str)"
"_locale_export_wrap","Custom word wrapping for Portable Object (Template) files.","_locale_export_wrap($str, $len)"
"_locale_get_predefined_list","Some of the common languages with their English and native names","_locale_get_predefined_list()"
"_locale_import_append_plural","Modify a string to contain proper count indices","_locale_import_append_plural($entry, $key)"
"_locale_import_message","Sets an error message occurred during locale file parsing.","_locale_import_message($message, $file, $lineno = NULL)"
"_locale_import_one_string","Imports a string into the database","_locale_import_one_string($op, $value = NULL, $mode = NULL, $lang = NULL, $file = NULL, $group = 'default')"
"_locale_import_one_string_db","Import one string into the database.","_locale_import_one_string_db(&$report, $langcode, $context, $source, $translation, $textgroup, $location, $mode, $plid = 0, $plural = 0)"
"_locale_import_parse_arithmetic","Parses and sanitizes an arithmetic formula into a PHP expression","_locale_import_parse_arithmetic($string)"
"_locale_import_parse_header","Parses a Gettext Portable Object file header","_locale_import_parse_header($header)"
"_locale_import_parse_plural_forms","Parses a Plural-Forms entry from a Gettext Portable Object file header","_locale_import_parse_plural_forms($pluralforms, $filepath)"
"_locale_import_parse_quoted","Parses a string in quotes","_locale_import_parse_quoted($string)"
"_locale_import_po","Parses Gettext Portable Object file information and inserts into database","_locale_import_po($file, $langcode, $mode, $group = NULL)"
"_locale_import_read_po","Parses Gettext Portable Object file into an array","_locale_import_read_po($op, $file, $mode = NULL, $lang = NULL, $group = 'default')"
"_locale_import_shorten_comments","Generate a short, one string version of the passed comment array","_locale_import_shorten_comments($comment)"
"_locale_import_tokenize_formula","Backward compatible implementation of token_get_all() for formula parsing","_locale_import_tokenize_formula($formula)"
"_locale_invalidate_js","Force the JavaScript translation file(s) to be refreshed.","_locale_invalidate_js($langcode = NULL)"
"_locale_languages_common_controls","Common elements of the language addition and editing form.","_locale_languages_common_controls(&$form, $language = NULL)"
"_locale_languages_configure_form_language_table","Helper function to build a language provider table.","_locale_languages_configure_form_language_table(&$form, $type)"
"_locale_parse_js_file","Parses a JavaScript file, extracts strings wrapped in Drupal.t() and
Drupal.formatPlural() and inserts them into the database.","_locale_parse_js_file($filepath)"
"_locale_prepare_predefined_list","Prepares the language code list for a select form item with only the unsupported ones","_locale_prepare_predefined_list()"
"_locale_rebuild_js","(Re-)Creates the JavaScript translation file for a language.","_locale_rebuild_js($langcode = NULL)"
"_locale_test_plural_format_tests","Helper function with list of test cases","_locale_test_plural_format_tests()"
"_locale_translate_language_list","List languages in search result table","_locale_translate_language_list($translation, $limit_language)"
"_locale_translate_seek","Perform a string search and display results in a table","_locale_translate_seek()"
"_locale_translate_seek_query","Build array out of search criteria specified in request variables","_locale_translate_seek_query()"
"_lock_id","Helper function to get this request&#039;s unique id.","_lock_id()"
"_menu_build_tree","Builds a menu tree.","_menu_build_tree($menu_name, array $parameters = array())"
"_menu_check_access","Checks access to a menu item using the access callback.","_menu_check_access(&$item, $map)"
"_menu_clear_page_cache","Clears the page and block caches at most twice per page load.","_menu_clear_page_cache()"
"_menu_delete_item","Deletes a single menu link.","_menu_delete_item($item, $force = FALSE)"
"_menu_find_router_path","Finds the router path which will serve this path.","_menu_find_router_path($link_path)"
"_menu_get_options","Helper function to get the items of the given menu.","_menu_get_options($menus, $available_menus, $item)"
"_menu_item_localize","Localizes the router item title using t() or another callback.","_menu_item_localize(&$item, $map, $link_translate = FALSE)"
"_menu_link_build","Builds a link from a router item.","_menu_link_build($item)"
"_menu_link_find_parent","Finds a possible parent for a given menu link.","_menu_link_find_parent($menu_link, $parent_candidates = array())"
"_menu_link_map_translate","Translates the path elements in the map using any to_arg helper function.","_menu_link_map_translate(&$map, $to_arg_functions)"
"_menu_link_move_children","Updates the children of a menu link that is being moved.","_menu_link_move_children($item, $existing_item)"
"_menu_link_parents_set","Sets the p1 through p9 values for a menu link being saved.","_menu_link_parents_set(&$item, $parent)"
"_menu_link_translate","Provides menu link access control, translation, and argument handling.","_menu_link_translate(&$item, $translate = FALSE)"
"_menu_load_objects","Loads objects into the map as defined in the $item[&#039;load_functions&#039;].","_menu_load_objects(&$item, &$map)"
"_menu_navigation_links_rebuild","Builds menu links for the items in the menu router.","_menu_navigation_links_rebuild($menu)"
"_menu_overview_tree_form","Recursive helper function for menu_overview_form().","_menu_overview_tree_form($tree)"
"_menu_parents_recurse","Recursive helper function for menu_parent_options().","_menu_parents_recurse($tree, $menu_name, $indent, &$options, $exclude, $depth_limit)"
"_menu_parent_depth_limit","Find the depth limit for items in the parent select.","_menu_parent_depth_limit($item)"
"_menu_router_build","Builds the router table based on the data from hook_menu().","_menu_router_build($callbacks)"
"_menu_router_cache","Stores the menu router if we have it in memory.","_menu_router_cache($new_menu = NULL)"
"_menu_router_save","Saves data from menu_router_build() to the router table.","_menu_router_save($menu, $masks)"
"_menu_set_expanded_menus","Updates a list of menus with expanded items.","_menu_set_expanded_menus()"
"_menu_site_is_offline","Checks whether the site is in maintenance mode.","_menu_site_is_offline($check_only = FALSE)"
"_menu_translate","Handles dynamic path translation and menu access control.","_menu_translate(&$router_item, $map, $to_arg = FALSE)"
"_menu_tree_check_access","Sorts the menu tree and recursively checks access for each item.","_menu_tree_check_access(&$tree)"
"_menu_tree_data","Builds the data representing a menu tree.","_menu_tree_data(&$links, $parents, $depth)"
"_menu_update_parental_status","Checks and updates the &#039;has_children&#039; status for the parent of a link.","_menu_update_parental_status($item, $exclude = FALSE)"
"_mime_header_decode","Decodes encoded header data passed from mime_header_decode().","_mime_header_decode($matches)"
"_module_build_dependencies","Determines which modules require and are required by each module.","_module_build_dependencies($files)"
"_node_access_rebuild_batch_finished","Performs post-processing for node_access_rebuild().","_node_access_rebuild_batch_finished($success, $results, $operations)"
"_node_access_rebuild_batch_operation","Performs batch operation for node_access_rebuild().","_node_access_rebuild_batch_operation(&$context)"
"_node_access_test_node_write","Helper for node insert/update.","_node_access_test_node_write($node)"
"_node_add_access","Access callback: Checks whether the user has permission to add a node.","_node_add_access()"
"_node_characters","Helper function for teaser length choices.","_node_characters($length)"
"_node_extract_type","Extracts the type name.","_node_extract_type($node)"
"_node_index_node","Indexes a single node.","_node_index_node($node)"
"_node_mass_update_batch_finished","Menu callback: Reports the status of batch operation for node_mass_update().","_node_mass_update_batch_finished($success, $results, $operations)"
"_node_mass_update_batch_process","Executes a batch operation for node_mass_update().","_node_mass_update_batch_process($nodes, $updates, &$context)"
"_node_mass_update_helper","Updates individual nodes when fewer than 10 are queued.","_node_mass_update_helper($nid, $updates)"
"_node_query_node_access_alter","Helper for node access functions.","_node_query_node_access_alter($query, $type)"
"_node_rankings","Gathers the rankings from the the hook_ranking() implementations.","_node_rankings(SelectQueryExtender $query)"
"_node_revision_access","Access callback: Checks node revision access.","_node_revision_access($node, $op = 'view', $account = NULL)"
"_node_save_revision","Helper function to save a revision with the uid of the current user.","_node_save_revision($node, $uid, $update = NULL)"
"_node_types_build","Builds and returns the list of available node types.","_node_types_build($rebuild = FALSE)"
"_openid_create_message","Create a serialized message packet as per spec: $key:$value\n .","_openid_create_message($data)"
"_openid_dh_base64_to_long",,"_openid_dh_base64_to_long($str)"
"_openid_dh_binary_to_long",,"_openid_dh_binary_to_long($str)"
"_openid_dh_long_to_base64",,"_openid_dh_long_to_base64($str)"
"_openid_dh_long_to_binary",,"_openid_dh_long_to_binary($long)"
"_openid_dh_rand",,"_openid_dh_rand($stop)"
"_openid_dh_xorsecret",,"_openid_dh_xorsecret($shared, $secret)"
"_openid_encode_message","Encode a message from _openid_create_message for HTTP Post","_openid_encode_message($message)"
"_openid_get_bytes",,"_openid_get_bytes($num_bytes)"
"_openid_get_math_library","Determine the available math library GMP vs. BCMath, favouring GMP for performance.","_openid_get_math_library()"
"_openid_get_params",,"_openid_get_params($str)"
"_openid_hmac",,"_openid_hmac($key, $text)"
"_openid_invalid_openid_transition","Provides transition for accounts with possibly invalid OpenID identifiers in authmap.","_openid_invalid_openid_transition($identity, $response)"
"_openid_is_xri","Determine if the given identifier is an XRI ID.","_openid_is_xri($identifier)"
"_openid_link_href","Pull the href attribute out of an html link element.","_openid_link_href($rel, $html)"
"_openid_math_add","Calls the add function from the available math library for OpenID.","_openid_math_add($x, $y)"
"_openid_math_cmp","Calls the cmp function from the available math library for OpenID.","_openid_math_cmp($x, $y)"
"_openid_math_div","Calls the div function from the available math library for OpenID.","_openid_math_div($x, $y)"
"_openid_math_mod","Calls the mod function from the available math library for OpenID.","_openid_math_mod($x, $y)"
"_openid_math_mul","Calls the mul function from the available math library for OpenID.","_openid_math_mul($x, $y)"
"_openid_math_pow","Calls the pow function from the available math library for OpenID.","_openid_math_pow($x, $y)"
"_openid_math_powmod","Calls the mul function from the available math library for OpenID.","_openid_math_powmod($x, $y, $z)"
"_openid_meta_httpequiv","Pull the http-equiv attribute out of an html meta element","_openid_meta_httpequiv($equiv, $html)"
"_openid_nonce","Return a nonce value - formatted per OpenID spec.","_openid_nonce()"
"_openid_parse_message","Convert a direct communication message
into an associative array.","_openid_parse_message($message)"
"_openid_response",,"_openid_response($str = NULL)"
"_openid_select_service","Select a service element.","_openid_select_service(array $services)"
"_openid_signature","Sign certain keys in a message","_openid_signature($association, $message_array, $keys_to_sign)"
"_openid_test_endpoint_associate","OpenID endpoint; handle &quot;associate&quot; requests (see OpenID Authentication 2.0,
section 8).","_openid_test_endpoint_associate()"
"_openid_test_endpoint_authenticate","OpenID endpoint; handle &quot;authenticate&quot; requests.","_openid_test_endpoint_authenticate()"
"_openid_url_normalize","OpenID normalization method: normalize URL identifiers.","_openid_url_normalize($url)"
"_openid_user_login_form_alter",,"_openid_user_login_form_alter(&$form, &$form_state)"
"_openid_xrds_discovery","OpenID discovery method: perform a XRDS discovery.","_openid_xrds_discovery($claimed_id)"
"_openid_xrds_parse","Parse an XRDS document.","_openid_xrds_parse($raw_xml)"
"_openid_xri_discovery","OpenID discovery method: perform an XRI discovery.","_openid_xri_discovery($claimed_id)"
"_openid_xri_normalize","OpenID normalization method: normalize XRI identifiers.","_openid_xri_normalize($identifier)"
"_options_form_to_storage","Transforms submitted form values into field storage format.","_options_form_to_storage($element)"
"_options_get_options","Collects the options for a field.","_options_get_options($field, $instance, $properties, $entity_type, $entity)"
"_options_prepare_options","Sanitizes the options.","_options_prepare_options(&$options, $properties)"
"_options_properties","Describes the preparation steps required by each widget.","_options_properties($type, $multiple, $required, $has_value)"
"_options_storage_to_form","Transforms stored field values into the format the widgets need.","_options_storage_to_form($items, $options, $column, $properties)"
"_overlay_region_list","Returns a list of page regions related to the overlay.","_overlay_region_list($type)"
"_password_base64_encode","Encodes bytes into printable base 64 using the *nix standard from crypt().","_password_base64_encode($input, $count)"
"_password_crypt","Hash a password using a secure stretched hash.","_password_crypt($algo, $password, $setting)"
"_password_enforce_log2_boundaries","Ensures that $count_log2 is within set bounds.","_password_enforce_log2_boundaries($count_log2)"
"_password_generate_salt","Generates a random base 64-encoded salt prefixed with settings for the hash.","_password_generate_salt($count_log2)"
"_password_get_count_log2","Parse the log2 iteration count from a stored hash or setting string.","_password_get_count_log2($setting)"
"_password_itoa64","Returns a string for mapping an int to the corresponding base 64 character.","_password_itoa64()"
"_php_filter_tips","Implements callback_filter_tips().","_php_filter_tips($filter, $format, $long = FALSE)"
"_poll_choice_form",,"_poll_choice_form($key, $chid = NULL, $value = '', $votes = 0, $weight = 0, $size = 10)"
"_poll_menu_access","Callback function to see if a node is acceptable for poll menu items.","_poll_menu_access($node, $perm, $inspect_allowvotes)"
"_profile_field_serialize",,"_profile_field_serialize($type = NULL)"
"_profile_field_types",,"_profile_field_types($type = NULL)"
"_profile_form_explanation",,"_profile_form_explanation($field)"
"_profile_get_fields",,"_profile_get_fields($category, $register = FALSE)"
"_profile_update_user_fields","Helper function: update an array of user fields by calling profile_view_field","_profile_update_user_fields($fields, $account)"
"_rdf_get_default_mapping","Helper function to get the default RDF mapping for a given entity type.","_rdf_get_default_mapping($type)"
"_rdf_mapping_load","Helper function to retrieve an RDF mapping from the database.","_rdf_mapping_load($type, $bundle)"
"_rdf_mapping_load_multiple","Helper function to retrieve a set of RDF mappings from the database.","_rdf_mapping_load_multiple($type, array $bundles)"
"_registry_check_code","Checks for a resource in the registry.","_registry_check_code($type, $name = NULL)"
"_registry_parse_file","Parse a file and save its interface and class listings.","_registry_parse_file($filename, $contents, $module = '', $weight = 0)"
"_registry_parse_files","Parse all changed files and save their interface and class listings.","_registry_parse_files($files)"
"_registry_update","Does the work for registry_update().","_registry_update()"
"_search_excerpt_match_filter","Helper function for array_filter() in search_search_excerpt_match().","_search_excerpt_match_filter($var)"
"_search_excerpt_replace","Helper function for array_walk() in search_excerpt().","_search_excerpt_replace(&$text)"
"_search_get_module_names","Helper function to get real module names.","_search_get_module_names()"
"_search_index_truncate","Helper function for array_walk in search_index_split.","_search_index_truncate(&$text)"
"_search_menu_access","Access callback for search tabs.","_search_menu_access($name)"
"_session_test_get","Page callback, prints the stored session value to the screen.","_session_test_get()"
"_session_test_id","Menu callback: print the current session ID.","_session_test_id()"
"_session_test_id_from_cookie","Menu callback: print the current session ID as read from the cookie.","_session_test_id_from_cookie()"
"_session_test_is_logged_in","Menu callback, only available if current user is logged in.","_session_test_is_logged_in()"
"_session_test_no_set","Menu callback: turns off session saving and then tries to save a value
anyway.","_session_test_no_set($value)"
"_session_test_set","Page callback, stores a value in $_SESSION[&#039;session_test_value&#039;].","_session_test_set($value)"
"_session_test_set_message","Menu callback, sets a message to me displayed on the following page.","_session_test_set_message()"
"_session_test_set_message_but_dont_save","Menu callback, sets a message but call drupal_save_session(FALSE).","_session_test_set_message_but_dont_save()"
"_session_test_set_not_started","Menu callback, stores a value in $_SESSION[&#039;session_test_value&#039;] without
having started the session in advance.","_session_test_set_not_started()"
"_shortcut_link_form_elements","Helper function for building a form for adding or editing shortcut links.","_shortcut_link_form_elements($shortcut_link = NULL)"
"_simpletest_autoload_psr0","Autoload callback to find PSR-0 test classes.","_simpletest_autoload_psr0($class)"
"_simpletest_batch_finished",,"_simpletest_batch_finished($success, $results, $operations, $elapsed)"
"_simpletest_batch_operation","Batch operation callback.","_simpletest_batch_operation($test_list_init, $test_id, &$context)"
"_simpletest_format_summary_line",,"_simpletest_format_summary_line($summary)"
"_statistics_format_item","Formats an item for display, including both the item title and the link.","_statistics_format_item($title, $path)"
"_statistics_link","Generates a link to a path, truncating the displayed text to a given width.","_statistics_link($path, $width = 35)"
"_system_batch_theme","Theme callback for the default batch page.","_system_batch_theme()"
"_system_date_formats_build","Builds and returns information about available date formats.","_system_date_formats_build()"
"_system_date_format_types_build","Builds and returns information about available date types.","_system_date_format_types_build()"
"_system_default_theme_features","Returns an array of default theme features.","_system_default_theme_features()"
"_system_info_add_path","Prefixes all values in an .info file array with a given path.","_system_info_add_path($info, $path)"
"_system_is_incompatible","Recursively check compatibility.","_system_is_incompatible(&$incompatible, $files, $file)"
"_system_modules_build_row","Build a table row for the system modules page.","_system_modules_build_row($info, $extra)"
"_system_rebuild_module_data","Helper function to scan and collect module .info data.","_system_rebuild_module_data()"
"_system_rebuild_theme_data","Helper function to scan and collect theme .info data and their engines.","_system_rebuild_theme_data()"
"_system_sort_requirements","Helper function to sort requirements.","_system_sort_requirements($a, $b)"
"_system_test_first_shutdown_function","Dummy shutdown function which registers another shutdown function.","_system_test_first_shutdown_function($arg1, $arg2)"
"_system_test_second_shutdown_function","Dummy shutdown function.","_system_test_second_shutdown_function($arg1, $arg2)"
"_system_themes_access","Menu item access callback - only admin or enabled themes can be accessed.","_system_themes_access($theme)"
"_system_theme_settings_validate_path","Helper function for the system_theme_settings form.","_system_theme_settings_validate_path($path)"
"_system_update_bootstrap_status","Refresh bootstrap column in the system table.","_system_update_bootstrap_status()"
"_taxonomy_get_tid_from_term","Helper function for array_map purposes.","_taxonomy_get_tid_from_term($term)"
"_template_preprocess_default_variables","Returns hook-independent variables to template_preprocess().","_template_preprocess_default_variables()"
"_text_sanitize","Sanitizes the &#039;value&#039; or &#039;summary&#039; data of a text value.","_text_sanitize($instance, $langcode, $item, $column)"
"_theme_build_registry","Builds the theme registry cache.","_theme_build_registry($theme, $base_theme, $theme_engine)"
"_theme_custom_theme","Custom theme callback.","_theme_custom_theme()"
"_theme_load_offline_registry","Builds the registry when the site needs to bypass any database calls.","_theme_load_offline_registry($theme, $base_theme = NULL, $theme_engine = NULL)"
"_theme_load_registry","Gets the theme_registry cache; if it doesn&#039;t exist, builds it.","_theme_load_registry($theme, $base_theme = NULL, $theme_engine = NULL, $complete = TRUE)"
"_theme_process_registry","Process a single implementation of hook_theme().","_theme_process_registry(&$cache, $name, $type, $theme, $path)"
"_theme_registry_callback","Sets the callback that will be used by theme_get_registry().","_theme_registry_callback($callback = NULL, array $arguments = array())"
"_theme_render_template_debug","Renders a template for any engine.","_theme_render_template_debug($template_function, $template_file, $variables, $extension)"
"_theme_save_registry","Writes the theme_registry cache into the database.","_theme_save_registry($theme, $registry)"
"_theme_table_cell","Returns HTML output for a single table cell for theme_table().","_theme_table_cell($cell, $header = FALSE)"
"_theme_test_alter","Page callback, calls drupal_alter().","_theme_test_alter()"
"_theme_test_load_registry","Fake registry loading callback.","_theme_test_load_registry()"
"_theme_test_suggestion","Page callback, calls a theme hook suggestion.","_theme_test_suggestion()"
"_toolbar_is_collapsed","Determines the current state of the toolbar drawer&#039;s visibility.","_toolbar_is_collapsed()"
"_tracker_add","Updates indexing tables when a node is added, updated, or commented on.","_tracker_add($nid, $uid, $changed)"
"_tracker_calculate_changed","Determines the max timestamp between $node-&gt;changed and the last comment.","_tracker_calculate_changed($nid)"
"_tracker_myrecent_access","Access callback for tracker/%user_uid_optional.","_tracker_myrecent_access($account)"
"_tracker_remove","Cleans up indexed data when nodes or comments are removed.","_tracker_remove($nid, $uid = NULL, $changed = NULL)"
"_tracker_user_access","Access callback for user/%user/track.","_tracker_user_access($account)"
"_translation_tab_access","Access callback: Checks that the user has permission to &#039;translate content&#039;.","_translation_tab_access($node)"
"_trigger_comment","Calls action functions for comment triggers.","_trigger_comment($a1, $hook)"
"_trigger_get_all_info","Retrieves and caches information from hook_trigger_info() implementations.","_trigger_get_all_info()"
"_trigger_node","Calls action functions for node triggers.","_trigger_node($node, $hook, $a3 = NULL, $a4 = NULL)"
"_trigger_normalize_comment_context","Loads associated objects for comment triggers.","_trigger_normalize_comment_context($type, $comment)"
"_trigger_normalize_node_context","Loads associated objects for node triggers.","_trigger_normalize_node_context($type, $node)"
"_trigger_normalize_user_context","Loads associated objects for user triggers.","_trigger_normalize_user_context($type, $account)"
"_trigger_tab_information","Gathers information about tabs on the triggers administration screen.","_trigger_tab_information()"
"_trigger_taxonomy","Calls action functions for taxonomy triggers.","_trigger_taxonomy($hook, $array)"
"_trigger_user","Calls action functions for user triggers.","_trigger_user($hook, &$edit, $account, $category = NULL)"
"_unicode_caseflip","Flips U+C0-U+DE to U+E0-U+FD and back.","_unicode_caseflip($matches)"
"_unicode_check","Perform checks about Unicode support in PHP, and set the right settings if
needed.","_unicode_check()"
"_update_7000_field_create_field","Utility function: create a field by writing directly to the database.","_update_7000_field_create_field(&$field)"
"_update_7000_field_create_instance","Utility function: write a field instance directly to the database.","_update_7000_field_create_instance($field, &$instance)"
"_update_7000_field_delete_field","Utility function: delete a field stored in SQL storage directly from the database.","_update_7000_field_delete_field($field_name)"
"_update_7000_field_delete_instance","Utility function: delete an instance and all its data of a field stored in SQL Storage.","_update_7000_field_delete_instance($field_name, $entity_type, $bundle)"
"_update_7000_field_read_fields","Utility function: fetch all the field definitions from the database.","_update_7000_field_read_fields(array $conditions = array(), $key = 'id')"
"_update_7000_field_sql_storage_write","Utility function: write field data directly to SQL storage.","_update_7000_field_sql_storage_write($entity_type, $bundle, $entity_id, $revision_id, $field_name, $data)"
"_update_7000_node_get_types","Utility function: fetch the node types directly from the database.","_update_7000_node_get_types()"
"_update_7000_user_role_grant_permissions","Utility function: grant a set of permissions to a role during update.","_update_7000_user_role_grant_permissions($rid, array $permissions, $module)"
"_update_7002_taxonomy_get_vocabularies","Utility function: get the list of vocabularies directly from the database.","_update_7002_taxonomy_get_vocabularies()"
"_update_authorize_clear_update_status","Clears cached available update status data.","_update_authorize_clear_update_status()"
"_update_batch_create_message","Creates a structure of log messages.","_update_batch_create_message(&$project_results, $message, $success = TRUE)"
"_update_build_fetch_url","Generates the URL to fetch information about project updates.","_update_build_fetch_url($project, $site_key = '')"
"_update_cache_clear","Invalidates cached data relating to update status.","_update_cache_clear($cid = NULL, $wildcard = FALSE)"
"_update_cache_get","Retrieves data from the private update status cache table.","_update_cache_get($cid)"
"_update_cache_set","Stores data in the private update status cache table.","_update_cache_set($cid, $data, $expire)"
"_update_create_fetch_task","Adds a task to the queue for fetching release history data for a project.","_update_create_fetch_task($project)"
"_update_cron_notify","Performs any notifications that should be done once cron fetches new data.","_update_cron_notify()"
"_update_fetch_data","Attempts to drain the queue of tasks for release history data to fetch.","_update_fetch_data()"
"_update_get_cached_available_releases","Returns all currently cached data about available releases for all projects.","_update_get_cached_available_releases()"
"_update_get_cache_multiple","Returns an array of cache items with a given cache ID prefix.","_update_get_cache_multiple($cid_prefix)"
"_update_get_fetch_url_base","Returns the base of the URL to fetch available update data for a project.","_update_get_fetch_url_base($project)"
"_update_manager_cache_directory","Returns the directory where update archive files should be cached.","_update_manager_cache_directory($create = TRUE)"
"_update_manager_check_backends","Checks for file transfer backends and prepares a form fragment about them.","_update_manager_check_backends(&$form, $operation)"
"_update_manager_extract_directory","Returns the directory where update archive files should be extracted.","_update_manager_extract_directory($create = TRUE)"
"_update_manager_unique_identifier","Returns a short unique identifier for this Drupal installation.","_update_manager_unique_identifier()"
"_update_message_text","Returns the appropriate message text when site is out of date or not secure.","_update_message_text($msg_type, $msg_reason, $report_link = FALSE, $language = NULL)"
"_update_no_data","Returns a warning message when there is no data about available updates.","_update_no_data()"
"_update_process_fetch_task","Processes a task to fetch available update data for a single project.","_update_process_fetch_task($project)"
"_update_process_info_list","Populates an array of project data.","_update_process_info_list(&$projects, $list, $project_type, $status)"
"_update_project_status_sort","Orders projects based on their status.","_update_project_status_sort($a, $b)"
"_update_refresh","Clears out all the cached available update data and initiates re-fetching.","_update_refresh()"
"_update_requirement_check","Fills in the requirements array.","_update_requirement_check($project, $type)"
"_user_cancel","Last batch processing step for cancelling a user account.","_user_cancel($edit, $account, $method)"
"_user_cancel_session_regenerate","Finished batch processing callback for cancelling a user account.","_user_cancel_session_regenerate()"
"_user_categories","Retrieve a list of all user setting/information categories and sort them by weight.","_user_categories()"
"_user_mail_notify","Conditionally create and send a notification email when a certain
operation happens on the given user account.","_user_mail_notify($op, $account, $language = NULL)"
"_user_mail_text","Returns a mail string for a variable name.","_user_mail_text($key, $language = NULL, $variables = array(), $replace = TRUE)"
"_user_sort",,"_user_sort($a, $b)"
"_xmlrpc","Performs one or more XML-RPC requests.","_xmlrpc($url, $args, $options = array())"
